import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.Inflater inflater15 = gzipSource14.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        gzipSource0.source = gzipSource16;
        com.squareup.okhttp.internal.bytes.Deadline deadline20 = null;
        gzipSource16.require((int) (short) 0, deadline20);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource29 = null;
        gzipSource22.inflaterSource = inflaterSource29;
        java.util.zip.CRC32 cRC32_31 = gzipSource22.crc;
        gzipSource16.crc = cRC32_31;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_31);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource21.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = null;
        gzipSource21.buffer = okBuffer26;
        int int28 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.Source source29 = null;
        gzipSource21.source = source29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.CRC32 cRC32_32 = gzipSource21.crc;
        gzipSource10.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer34 = gzipSource10.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource35.inflaterSource;
        java.util.zip.CRC32 cRC32_39 = gzipSource35.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = gzipSource40.inflaterSource;
        gzipSource40.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        gzipSource47.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource47);
        java.util.zip.Inflater inflater54 = gzipSource53.inflater;
        gzipSource40.inflater = inflater54;
        gzipSource35.inflater = inflater54;
        com.squareup.okhttp.internal.bytes.Source source57 = gzipSource35.source;
        int int58 = gzipSource35.section;
        java.util.zip.CRC32 cRC32_59 = gzipSource35.crc;
        com.squareup.okhttp.internal.bytes.Source source60 = gzipSource35.source;
        gzipSource10.source = source60;
        java.util.zip.Inflater inflater62 = gzipSource10.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater64 = null;
        gzipSource63.inflater = inflater64;
        int int66 = gzipSource63.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource67 = gzipSource63.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_69 = null;
        gzipSource68.crc = cRC32_69;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource71 = gzipSource68.inflaterSource;
        java.util.zip.CRC32 cRC32_72 = gzipSource68.crc;
        java.util.zip.Inflater inflater73 = gzipSource68.inflater;
        gzipSource68.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source78 = gzipSource68.source;
        gzipSource63.source = source78;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource80 = gzipSource63.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource81 = gzipSource63.inflaterSource;
        int int82 = gzipSource63.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource83 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource63);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource84 = gzipSource83.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource85 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater86 = null;
        gzipSource85.inflater = inflater86;
        int int88 = gzipSource85.section;
        gzipSource85.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource91 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource85);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource92 = null;
        gzipSource85.inflaterSource = inflaterSource92;
        java.util.zip.CRC32 cRC32_94 = gzipSource85.crc;
        gzipSource83.crc = cRC32_94;
        gzipSource10.crc = cRC32_94;
        java.util.zip.CRC32 cRC32_97 = gzipSource10.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource44);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source57);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater62);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource81);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource84);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_97);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_14 = null;
        gzipSource13.crc = cRC32_14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        gzipSource16.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        java.util.zip.Inflater inflater23 = gzipSource22.inflater;
        gzipSource13.inflater = inflater23;
        gzipSource12.inflater = inflater23;
        gzipSource0.inflater = inflater23;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource27.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = null;
        gzipSource27.buffer = okBuffer32;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = null;
        gzipSource27.inflaterSource = inflaterSource36;
        com.squareup.okhttp.internal.bytes.Source source38 = gzipSource27.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer39 = null;
        gzipSource27.buffer = okBuffer39;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater46 = null;
        gzipSource45.inflater = inflater46;
        int int48 = gzipSource45.section;
        gzipSource45.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource45);
        java.util.zip.Inflater inflater52 = gzipSource51.inflater;
        gzipSource42.inflater = inflater52;
        gzipSource41.inflater = inflater52;
        gzipSource27.inflater = inflater52;
        gzipSource0.inflater = inflater52;
        int int57 = gzipSource0.section;
        java.lang.Class<?> wildcardClass58 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater52);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.CRC32 cRC32_10 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        com.squareup.okhttp.internal.bytes.Deadline deadline19 = null;
        gzipSource17.require((-1), deadline19);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = null;
        gzipSource21.inflaterSource = inflaterSource28;
        gzipSource17.source = inflaterSource28;
        java.util.zip.CRC32 cRC32_31 = gzipSource17.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource17.buffer;
        int int33 = gzipSource17.section;
        java.util.zip.CRC32 cRC32_34 = gzipSource17.crc;
        com.squareup.okhttp.internal.bytes.Source source35 = gzipSource17.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater37 = null;
        gzipSource36.inflater = inflater37;
        int int39 = gzipSource36.section;
        gzipSource36.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource36);
        com.squareup.okhttp.internal.bytes.Deadline deadline44 = null;
        gzipSource42.require((-1), deadline44);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource53 = null;
        gzipSource46.inflaterSource = inflaterSource53;
        gzipSource42.source = inflaterSource53;
        java.util.zip.CRC32 cRC32_56 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer57 = gzipSource42.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource42.inflaterSource;
        gzipSource17.inflaterSource = inflaterSource58;
        gzipSource9.inflaterSource = inflaterSource58;
        com.squareup.okhttp.internal.bytes.Source source61 = gzipSource9.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer62 = gzipSource9.buffer;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer62);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_30 = null;
        gzipSource29.crc = cRC32_30;
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource29.crc = cRC32_32;
        gzipSource0.source = gzipSource29;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer35 = gzipSource29.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_37 = null;
        gzipSource36.crc = cRC32_37;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource36.inflaterSource;
        java.util.zip.CRC32 cRC32_40 = gzipSource36.crc;
        java.util.zip.Inflater inflater41 = gzipSource36.inflater;
        gzipSource36.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        java.util.zip.CRC32 cRC32_52 = null;
        gzipSource46.crc = cRC32_52;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_55 = null;
        gzipSource54.crc = cRC32_55;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater58 = null;
        gzipSource57.inflater = inflater58;
        int int60 = gzipSource57.section;
        gzipSource57.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource57);
        java.util.zip.Inflater inflater64 = gzipSource63.inflater;
        gzipSource54.inflater = inflater64;
        gzipSource46.inflater = inflater64;
        gzipSource36.inflater = inflater64;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_69 = null;
        gzipSource68.crc = cRC32_69;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource71 = gzipSource68.inflaterSource;
        java.util.zip.CRC32 cRC32_72 = gzipSource68.crc;
        java.util.zip.Inflater inflater73 = gzipSource68.inflater;
        java.util.zip.CRC32 cRC32_74 = null;
        gzipSource68.crc = cRC32_74;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer76 = null;
        gzipSource68.buffer = okBuffer76;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource78 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater79 = null;
        gzipSource78.inflater = inflater79;
        int int81 = gzipSource78.section;
        gzipSource78.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource84 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource78);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer85 = gzipSource78.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline87 = null;
        long long88 = gzipSource68.read(okBuffer85, (long) (short) 0, deadline87);
        gzipSource36.updateCrc(okBuffer85, (long) 2, (long) 0);
        com.squareup.okhttp.internal.bytes.Deadline deadline93 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long94 = gzipSource29.read(okBuffer85, 1L, deadline93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater73);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 0L + "'", long88 == 0L);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater10 = null;
        gzipSource9.inflater = inflater10;
        int int12 = gzipSource9.section;
        gzipSource9.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource9);
        java.util.zip.Inflater inflater16 = gzipSource15.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        java.util.zip.CRC32 cRC32_18 = gzipSource17.crc;
        gzipSource8.crc = cRC32_18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource8.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource22.inflaterSource;
        gzipSource22.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline30 = null;
        gzipSource22.require((int) (short) -1, deadline30);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        int int35 = gzipSource32.section;
        gzipSource32.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = null;
        gzipSource32.inflaterSource = inflaterSource39;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource32.inflaterSource;
        gzipSource22.source = gzipSource32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource48 = gzipSource44.inflaterSource;
        java.util.zip.Inflater inflater49 = gzipSource44.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource50 = gzipSource44.inflaterSource;
        java.util.zip.Inflater inflater51 = gzipSource44.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        java.util.zip.CRC32 cRC32_59 = null;
        gzipSource53.crc = cRC32_59;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_62 = null;
        gzipSource61.crc = cRC32_62;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater65 = null;
        gzipSource64.inflater = inflater65;
        int int67 = gzipSource64.section;
        gzipSource64.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource64);
        java.util.zip.Inflater inflater71 = gzipSource70.inflater;
        gzipSource61.inflater = inflater71;
        gzipSource53.inflater = inflater71;
        gzipSource52.inflater = inflater71;
        gzipSource44.inflater = inflater71;
        gzipSource43.source = gzipSource44;
        gzipSource8.source = gzipSource44;
        com.squareup.okhttp.internal.bytes.Deadline deadline78 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource44.consumeTrailer(deadline78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater71);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        java.util.zip.Inflater inflater10 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource11.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        gzipSource13.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer19 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline21 = null;
        long long22 = gzipSource13.read(okBuffer19, (long) 100, deadline21);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater29 = null;
        gzipSource28.inflater = inflater29;
        int int31 = gzipSource28.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource28.inflaterSource;
        gzipSource28.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        gzipSource35.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource35);
        java.util.zip.Inflater inflater42 = gzipSource41.inflater;
        gzipSource28.inflater = inflater42;
        gzipSource23.inflater = inflater42;
        gzipSource13.inflater = inflater42;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline53 = null;
        gzipSource46.require((int) (byte) -1, deadline53);
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer57 = gzipSource46.buffer;
        gzipSource13.buffer = okBuffer57;
        gzipSource11.source = gzipSource13;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = gzipSource11.buffer;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer60);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 2;
        java.util.zip.Inflater inflater11 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline14 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (byte) 0, deadline14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer12);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require(3, deadline18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = null;
        gzipSource0.inflaterSource = inflaterSource6;
        com.squareup.okhttp.internal.bytes.Deadline deadline9 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long10 = gzipSource0.seek((byte) 100, deadline9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        java.util.zip.CRC32 cRC32_12 = gzipSource8.crc;
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource8.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        java.util.zip.Inflater inflater20 = gzipSource15.inflater;
        gzipSource15.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source25 = gzipSource15.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater27 = null;
        gzipSource26.inflater = inflater27;
        int int29 = gzipSource26.section;
        gzipSource26.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource26.inflaterSource;
        gzipSource15.source = gzipSource26;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource35.inflater = inflater45;
        gzipSource34.inflater = inflater45;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer48 = gzipSource34.buffer;
        gzipSource15.updateCrc(okBuffer48, (long) '#', (long) (-1));
        gzipSource8.updateCrc(okBuffer48, (long) 0, 0L);
        gzipSource0.buffer = okBuffer48;
        com.squareup.okhttp.internal.bytes.Deadline deadline57 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (byte) 2, deadline57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer48);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource33.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource47.inflaterSource;
        gzipSource47.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        gzipSource54.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource54);
        java.util.zip.Inflater inflater61 = gzipSource60.inflater;
        gzipSource47.inflater = inflater61;
        gzipSource42.inflater = inflater61;
        gzipSource33.inflater = inflater61;
        java.util.zip.CRC32 cRC32_65 = gzipSource33.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_68 = null;
        gzipSource67.crc = cRC32_68;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater71 = null;
        gzipSource70.inflater = inflater71;
        int int73 = gzipSource70.section;
        gzipSource70.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource70);
        java.util.zip.Inflater inflater77 = gzipSource76.inflater;
        gzipSource67.inflater = inflater77;
        gzipSource66.inflater = inflater77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource66.buffer;
        gzipSource33.buffer = okBuffer80;
        gzipSource0.updateCrc(okBuffer80, (long) '#', (long) (short) 0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource85 = gzipSource0.inflaterSource;
        int int86 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource87 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_88 = null;
        gzipSource87.crc = cRC32_88;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource90 = gzipSource87.inflaterSource;
        java.util.zip.CRC32 cRC32_91 = gzipSource87.crc;
        java.util.zip.Inflater inflater92 = gzipSource87.inflater;
        gzipSource87.checkEqual("", 100, 100);
        java.util.zip.Inflater inflater97 = gzipSource87.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer98 = gzipSource87.buffer;
        gzipSource0.buffer = okBuffer98;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_65);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer98);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        gzipSource0.require((int) (byte) -1, deadline7);
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        int int13 = gzipSource9.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer14 = gzipSource9.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        gzipSource15.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        java.util.zip.Inflater inflater22 = gzipSource21.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        com.squareup.okhttp.internal.bytes.Source source24 = gzipSource21.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource21.inflaterSource;
        gzipSource9.inflaterSource = inflaterSource25;
        gzipSource0.inflaterSource = inflaterSource25;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource25);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        java.util.zip.Inflater inflater10 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        com.squareup.okhttp.internal.bytes.Deadline deadline13 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource12.close(deadline13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource20.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_26 = null;
        gzipSource25.crc = cRC32_26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource25.inflaterSource;
        java.util.zip.CRC32 cRC32_29 = gzipSource25.crc;
        java.util.zip.Inflater inflater30 = gzipSource25.inflater;
        gzipSource25.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source35 = gzipSource25.source;
        gzipSource20.source = source35;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource20.inflaterSource;
        int int38 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater40 = null;
        gzipSource39.inflater = inflater40;
        int int42 = gzipSource39.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource39.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer44 = null;
        gzipSource39.buffer = okBuffer44;
        int int46 = gzipSource39.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource39.inflaterSource;
        gzipSource20.source = gzipSource39;
        java.util.zip.Inflater inflater49 = gzipSource39.inflater;
        int int50 = gzipSource39.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater52 = null;
        gzipSource51.inflater = inflater52;
        int int54 = gzipSource51.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource55 = gzipSource51.inflaterSource;
        gzipSource51.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        int int61 = gzipSource58.section;
        gzipSource58.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource58);
        java.util.zip.Inflater inflater65 = gzipSource64.inflater;
        gzipSource51.inflater = inflater65;
        gzipSource39.inflater = inflater65;
        gzipSource19.inflater = inflater65;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource55);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater65);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource18.inflaterSource;
        int int22 = gzipSource18.section;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource18.source;
        gzipSource18.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = gzipSource18.buffer;
        gzipSource0.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.Deadline deadline28 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource18.consumeTrailer(deadline28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer26);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource11.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource19.inflater = inflater29;
        gzipSource11.inflater = inflater29;
        gzipSource10.inflater = inflater29;
        gzipSource0.inflater = inflater29;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer35 = gzipSource0.buffer;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer35);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        java.util.zip.CRC32 cRC32_9 = gzipSource0.crc;
        int int10 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer14 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        gzipSource0.section = 3;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer14);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource7.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        java.util.zip.Inflater inflater25 = gzipSource24.inflater;
        gzipSource15.inflater = inflater25;
        gzipSource7.inflater = inflater25;
        gzipSource6.inflater = inflater25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_30 = null;
        gzipSource29.crc = cRC32_30;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource29.inflaterSource;
        java.util.zip.CRC32 cRC32_33 = gzipSource29.crc;
        java.util.zip.CRC32 cRC32_34 = null;
        gzipSource29.crc = cRC32_34;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_37 = null;
        gzipSource36.crc = cRC32_37;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource36.inflaterSource;
        java.util.zip.CRC32 cRC32_40 = gzipSource36.crc;
        java.util.zip.Inflater inflater41 = gzipSource36.inflater;
        gzipSource36.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source46 = gzipSource36.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        gzipSource47.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource53 = gzipSource47.inflaterSource;
        gzipSource36.source = gzipSource47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_57 = null;
        gzipSource56.crc = cRC32_57;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater60 = null;
        gzipSource59.inflater = inflater60;
        int int62 = gzipSource59.section;
        gzipSource59.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource59);
        java.util.zip.Inflater inflater66 = gzipSource65.inflater;
        gzipSource56.inflater = inflater66;
        gzipSource55.inflater = inflater66;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer69 = gzipSource55.buffer;
        gzipSource36.updateCrc(okBuffer69, (long) '#', (long) (-1));
        gzipSource29.updateCrc(okBuffer69, (long) 0, 0L);
        gzipSource6.buffer = okBuffer69;
        gzipSource0.buffer = okBuffer69;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource78 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater79 = null;
        gzipSource78.inflater = inflater79;
        int int81 = gzipSource78.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource82 = gzipSource78.inflaterSource;
        gzipSource78.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer85 = gzipSource78.buffer;
        gzipSource0.buffer = okBuffer85;
        java.util.zip.CRC32 cRC32_87 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource53);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer69);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_87);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater4 = gzipSource0.inflater;
        int int5 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_11 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer17 = null;
        gzipSource12.buffer = okBuffer17;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = null;
        gzipSource12.inflaterSource = inflaterSource21;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource12.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource12.buffer = okBuffer24;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        gzipSource27.inflater = inflater37;
        gzipSource26.inflater = inflater37;
        gzipSource12.inflater = inflater37;
        gzipSource0.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource46 = gzipSource42.inflaterSource;
        gzipSource42.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline50 = null;
        gzipSource42.require((int) (short) -1, deadline50);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater53 = null;
        gzipSource52.inflater = inflater53;
        int int55 = gzipSource52.section;
        gzipSource52.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource52);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource59 = null;
        gzipSource52.inflaterSource = inflaterSource59;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource61 = gzipSource52.inflaterSource;
        gzipSource42.source = gzipSource52;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int64 = gzipSource63.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_66 = null;
        gzipSource65.crc = cRC32_66;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource68 = gzipSource65.inflaterSource;
        java.util.zip.CRC32 cRC32_69 = gzipSource65.crc;
        java.util.zip.Inflater inflater70 = gzipSource65.inflater;
        java.util.zip.CRC32 cRC32_71 = null;
        gzipSource65.crc = cRC32_71;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer73 = gzipSource65.buffer;
        gzipSource63.updateCrc(okBuffer73, (long) '4', (long) (-1));
        com.squareup.okhttp.internal.bytes.Deadline deadline78 = null;
        long long79 = gzipSource52.read(okBuffer73, (long) 1, deadline78);
        gzipSource12.buffer = okBuffer73;
        int int81 = gzipSource12.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource61);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + (-1L) + "'", long79 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater4 = gzipSource0.inflater;
        int int5 = gzipSource0.section;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.lang.Class<?> wildcardClass6 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater2 = null;
        gzipSource1.inflater = inflater2;
        int int4 = gzipSource1.section;
        gzipSource1.section = (byte) -1;
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource1.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource1.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource23.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        java.util.zip.Inflater inflater35 = gzipSource30.inflater;
        gzipSource30.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source40 = gzipSource30.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource41.inflaterSource;
        gzipSource30.source = gzipSource41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        java.util.zip.Inflater inflater60 = gzipSource59.inflater;
        gzipSource50.inflater = inflater60;
        gzipSource49.inflater = inflater60;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer63 = gzipSource49.buffer;
        gzipSource30.updateCrc(okBuffer63, (long) '#', (long) (-1));
        gzipSource23.updateCrc(okBuffer63, (long) 0, 0L);
        gzipSource0.buffer = okBuffer63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_72 = null;
        gzipSource71.crc = cRC32_72;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource74 = gzipSource71.inflaterSource;
        java.util.zip.CRC32 cRC32_75 = gzipSource71.crc;
        java.util.zip.Inflater inflater76 = gzipSource71.inflater;
        java.util.zip.CRC32 cRC32_77 = null;
        gzipSource71.crc = cRC32_77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer79 = null;
        gzipSource71.buffer = okBuffer79;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer81 = null;
        gzipSource71.buffer = okBuffer81;
        gzipSource0.source = gzipSource71;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource84 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource85 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_86 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_86);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource11.inflaterSource;
        gzipSource0.source = gzipSource11;
        com.squareup.okhttp.internal.bytes.Deadline deadline20 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long21 = gzipSource11.seek((byte) 1, deadline20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        java.util.zip.CRC32 cRC32_10 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.close(deadline12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_10);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        long long11 = gzipSource0.read(okBuffer8, (long) (byte) 10, deadline10);
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource11.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource11.inflaterSource;
        java.util.zip.CRC32 cRC32_15 = gzipSource11.crc;
        java.util.zip.Inflater inflater16 = gzipSource11.inflater;
        gzipSource11.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source21 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource22.inflaterSource;
        gzipSource11.source = gzipSource22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource31.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        java.util.zip.Inflater inflater41 = gzipSource40.inflater;
        gzipSource31.inflater = inflater41;
        gzipSource30.inflater = inflater41;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer44 = gzipSource30.buffer;
        gzipSource11.updateCrc(okBuffer44, (long) '#', (long) (-1));
        gzipSource0.buffer = okBuffer44;
        java.util.zip.Inflater inflater49 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_50 = gzipSource0.crc;
        java.lang.Class<?> wildcardClass51 = cRC32_50.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        int int22 = gzipSource6.section;
        java.util.zip.CRC32 cRC32_23 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.Source source24 = gzipSource6.source;
        int int25 = gzipSource6.section;
        java.util.zip.Inflater inflater26 = gzipSource6.inflater;
        java.util.zip.CRC32 cRC32_27 = null;
        gzipSource6.crc = cRC32_27;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater26);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource0.source;
        int int23 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source24 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource29 = gzipSource25.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer30 = null;
        gzipSource25.buffer = okBuffer30;
        gzipSource25.section = (byte) -1;
        gzipSource25.section = (byte) 2;
        java.util.zip.Inflater inflater36 = gzipSource25.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer37 = gzipSource25.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource25.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int40 = gzipSource39.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_42 = null;
        gzipSource41.crc = cRC32_42;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = gzipSource41.inflaterSource;
        java.util.zip.CRC32 cRC32_45 = gzipSource41.crc;
        java.util.zip.Inflater inflater46 = gzipSource41.inflater;
        java.util.zip.CRC32 cRC32_47 = null;
        gzipSource41.crc = cRC32_47;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer49 = gzipSource41.buffer;
        gzipSource39.updateCrc(okBuffer49, (long) '4', (long) (-1));
        java.util.zip.CRC32 cRC32_53 = gzipSource39.crc;
        gzipSource25.crc = cRC32_53;
        gzipSource0.crc = cRC32_53;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_53);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource6.source;
        java.util.zip.Inflater inflater11 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline13 = null;
        gzipSource6.require((int) (byte) 0, deadline13);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        java.util.zip.CRC32 cRC32_18 = null;
        gzipSource15.crc = cRC32_18;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource20 = gzipSource15.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource15.inflaterSource;
        gzipSource6.source = gzipSource15;
        int int23 = gzipSource6.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource6.source;
        java.lang.Class<?> wildcardClass11 = gzipSource6.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        gzipSource0.checkEqual("hi!", (-1), (int) (byte) -1);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        int int12 = gzipSource11.section;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource8.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        com.squareup.okhttp.internal.bytes.Deadline deadline30 = null;
        gzipSource28.require((-1), deadline30);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        int int35 = gzipSource32.section;
        gzipSource32.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = null;
        gzipSource32.inflaterSource = inflaterSource39;
        gzipSource28.source = inflaterSource39;
        java.util.zip.CRC32 cRC32_42 = gzipSource28.crc;
        gzipSource8.crc = cRC32_42;
        gzipSource0.crc = cRC32_42;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline47 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (short) 100, deadline47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater2 = null;
        gzipSource1.inflater = inflater2;
        int int4 = gzipSource1.section;
        gzipSource1.section = (byte) -1;
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource1.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource1.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource23.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        java.util.zip.Inflater inflater35 = gzipSource30.inflater;
        gzipSource30.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source40 = gzipSource30.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource41.inflaterSource;
        gzipSource30.source = gzipSource41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        java.util.zip.Inflater inflater60 = gzipSource59.inflater;
        gzipSource50.inflater = inflater60;
        gzipSource49.inflater = inflater60;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer63 = gzipSource49.buffer;
        gzipSource30.updateCrc(okBuffer63, (long) '#', (long) (-1));
        gzipSource23.updateCrc(okBuffer63, (long) 0, 0L);
        gzipSource0.buffer = okBuffer63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_72 = null;
        gzipSource71.crc = cRC32_72;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource74 = gzipSource71.inflaterSource;
        java.util.zip.CRC32 cRC32_75 = gzipSource71.crc;
        java.util.zip.Inflater inflater76 = gzipSource71.inflater;
        java.util.zip.CRC32 cRC32_77 = null;
        gzipSource71.crc = cRC32_77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer79 = null;
        gzipSource71.buffer = okBuffer79;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer81 = null;
        gzipSource71.buffer = okBuffer81;
        gzipSource0.source = gzipSource71;
        com.squareup.okhttp.internal.bytes.Source source84 = gzipSource0.source;
        java.util.zip.Inflater inflater85 = gzipSource0.inflater;
        java.util.zip.Inflater inflater86 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Source source87 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source87);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource33.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource47.inflaterSource;
        gzipSource47.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        gzipSource54.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource54);
        java.util.zip.Inflater inflater61 = gzipSource60.inflater;
        gzipSource47.inflater = inflater61;
        gzipSource42.inflater = inflater61;
        gzipSource33.inflater = inflater61;
        java.util.zip.CRC32 cRC32_65 = gzipSource33.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_68 = null;
        gzipSource67.crc = cRC32_68;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater71 = null;
        gzipSource70.inflater = inflater71;
        int int73 = gzipSource70.section;
        gzipSource70.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource70);
        java.util.zip.Inflater inflater77 = gzipSource76.inflater;
        gzipSource67.inflater = inflater77;
        gzipSource66.inflater = inflater77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource66.buffer;
        gzipSource33.buffer = okBuffer80;
        gzipSource0.updateCrc(okBuffer80, (long) '#', (long) (short) 0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource85 = gzipSource0.inflaterSource;
        int int86 = gzipSource0.section;
        java.util.zip.Inflater inflater87 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_88 = gzipSource0.crc;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", 10, 100);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000064 != expected 0x00000a");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_65);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_88);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        gzipSource8.section = (byte) 0;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource11.inflaterSource;
        gzipSource11.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline19 = null;
        gzipSource11.require((int) (short) -1, deadline19);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = null;
        gzipSource21.inflaterSource = inflaterSource28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource21.inflaterSource;
        gzipSource11.source = gzipSource21;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_34 = null;
        gzipSource33.crc = cRC32_34;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = gzipSource33.inflaterSource;
        int int37 = gzipSource33.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer38 = gzipSource33.buffer;
        gzipSource21.buffer = okBuffer38;
        com.squareup.okhttp.internal.bytes.Deadline deadline41 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long42 = gzipSource8.read(okBuffer38, (long) (-1), deadline41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: byteCount < 0: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer38);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        gzipSource8.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        gzipSource15.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        java.util.zip.Inflater inflater22 = gzipSource21.inflater;
        gzipSource8.inflater = inflater22;
        gzipSource0.inflater = inflater22;
        int int25 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source26 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source26);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        int int5 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        int int9 = gzipSource6.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource6.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource11.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource11.inflaterSource;
        java.util.zip.CRC32 cRC32_15 = gzipSource11.crc;
        java.util.zip.Inflater inflater16 = gzipSource11.inflater;
        gzipSource11.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source21 = gzipSource11.source;
        gzipSource6.source = source21;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource6.inflaterSource;
        int int24 = gzipSource6.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource29 = gzipSource25.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer30 = null;
        gzipSource25.buffer = okBuffer30;
        int int32 = gzipSource25.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource25.inflaterSource;
        gzipSource6.source = gzipSource25;
        java.util.zip.Inflater inflater35 = gzipSource25.inflater;
        int int36 = gzipSource25.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater38 = null;
        gzipSource37.inflater = inflater38;
        int int40 = gzipSource37.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource37.inflaterSource;
        gzipSource37.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        java.util.zip.Inflater inflater51 = gzipSource50.inflater;
        gzipSource37.inflater = inflater51;
        gzipSource25.inflater = inflater51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        gzipSource54.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource54);
        java.util.zip.Inflater inflater61 = gzipSource60.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource60);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource62);
        java.util.zip.CRC32 cRC32_64 = gzipSource63.crc;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource65 = gzipSource63.inflaterSource;
        gzipSource25.inflaterSource = inflaterSource65;
        gzipSource0.inflaterSource = inflaterSource65;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource65);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = null;
        gzipSource0.buffer = okBuffer12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        java.util.zip.Inflater inflater25 = gzipSource24.inflater;
        gzipSource15.inflater = inflater25;
        gzipSource14.inflater = inflater25;
        gzipSource0.inflater = inflater25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.Inflater inflater40 = gzipSource39.inflater;
        gzipSource30.inflater = inflater40;
        gzipSource29.inflater = inflater40;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource29.inflaterSource;
        java.util.zip.Inflater inflater44 = gzipSource29.inflater;
        gzipSource0.inflater = inflater44;
        com.squareup.okhttp.internal.bytes.Deadline deadline47 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (short) 0, deadline47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater44);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.Inflater inflater14 = gzipSource13.inflater;
        gzipSource0.inflater = inflater14;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource18.inflater = inflater28;
        gzipSource17.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.Deadline deadline32 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_26 = null;
        gzipSource25.crc = cRC32_26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = null;
        gzipSource25.inflaterSource = inflaterSource28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource30.inflaterSource;
        gzipSource30.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline38 = null;
        gzipSource30.require((int) (short) -1, deadline38);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        gzipSource40.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = null;
        gzipSource40.inflaterSource = inflaterSource47;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = gzipSource40.inflaterSource;
        gzipSource30.source = gzipSource40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = null;
        gzipSource40.inflaterSource = inflaterSource52;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer54 = gzipSource40.buffer;
        gzipSource25.updateCrc(okBuffer54, 1L, (long) (byte) 0);
        gzipSource25.section = 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int61 = gzipSource60.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater63 = null;
        gzipSource62.inflater = inflater63;
        int int65 = gzipSource62.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource66 = gzipSource62.inflaterSource;
        gzipSource62.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline70 = null;
        gzipSource62.require((int) (short) -1, deadline70);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater73 = null;
        gzipSource72.inflater = inflater73;
        int int75 = gzipSource72.section;
        gzipSource72.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource78 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource72);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource79 = null;
        gzipSource72.inflaterSource = inflaterSource79;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource81 = gzipSource72.inflaterSource;
        gzipSource62.source = gzipSource72;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource83 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource72);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource84 = null;
        gzipSource72.inflaterSource = inflaterSource84;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer86 = gzipSource72.buffer;
        gzipSource60.buffer = okBuffer86;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer88 = gzipSource60.buffer;
        gzipSource25.buffer = okBuffer88;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer88, (long) (byte) 3, (long) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer54);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource66);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer88);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        int int30 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        com.squareup.okhttp.internal.bytes.Deadline deadline33 = null;
        gzipSource31.require((int) (byte) 0, deadline33);
        java.util.zip.CRC32 cRC32_35 = gzipSource31.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int37 = gzipSource36.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_39 = null;
        gzipSource38.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource38.inflaterSource;
        java.util.zip.CRC32 cRC32_42 = gzipSource38.crc;
        java.util.zip.Inflater inflater43 = gzipSource38.inflater;
        java.util.zip.CRC32 cRC32_44 = null;
        gzipSource38.crc = cRC32_44;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer46 = gzipSource38.buffer;
        gzipSource36.updateCrc(okBuffer46, (long) '4', (long) (-1));
        java.util.zip.CRC32 cRC32_50 = gzipSource36.crc;
        gzipSource31.crc = cRC32_50;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater53 = null;
        gzipSource52.inflater = inflater53;
        int int55 = gzipSource52.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = gzipSource52.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer57 = null;
        gzipSource52.buffer = okBuffer57;
        gzipSource52.section = (byte) -1;
        gzipSource52.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource52);
        gzipSource52.section = (byte) 1;
        java.util.zip.CRC32 cRC32_66 = gzipSource52.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater68 = null;
        gzipSource67.inflater = inflater68;
        int int70 = gzipSource67.section;
        gzipSource67.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource67);
        java.util.zip.Inflater inflater74 = gzipSource73.inflater;
        gzipSource73.section = (byte) -1;
        java.util.zip.Inflater inflater77 = gzipSource73.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource78 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater79 = null;
        gzipSource78.inflater = inflater79;
        int int81 = gzipSource78.section;
        gzipSource78.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource84 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource78);
        java.util.zip.Inflater inflater85 = gzipSource84.inflater;
        gzipSource84.section = (byte) -1;
        java.util.zip.Inflater inflater88 = gzipSource84.inflater;
        gzipSource73.inflater = inflater88;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource90 = gzipSource73.inflaterSource;
        gzipSource52.inflaterSource = inflaterSource90;
        gzipSource31.source = inflaterSource90;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_66);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater77);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource90);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        java.util.zip.CRC32 cRC32_9 = gzipSource0.crc;
        gzipSource0.section = 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_9);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = null;
        gzipSource0.inflaterSource = inflaterSource3;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource5 = null;
        gzipSource0.inflaterSource = inflaterSource5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        java.util.zip.CRC32 cRC32_12 = gzipSource8.crc;
        java.util.zip.Inflater inflater13 = gzipSource8.inflater;
        gzipSource8.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source18 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.Source source19 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_22 = null;
        gzipSource21.crc = cRC32_22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource21.inflater = inflater31;
        gzipSource20.inflater = inflater31;
        gzipSource8.inflater = inflater31;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource35.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = null;
        gzipSource35.buffer = okBuffer40;
        gzipSource35.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = null;
        gzipSource35.inflaterSource = inflaterSource44;
        com.squareup.okhttp.internal.bytes.Source source46 = gzipSource35.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer47 = null;
        gzipSource35.buffer = okBuffer47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        java.util.zip.Inflater inflater60 = gzipSource59.inflater;
        gzipSource50.inflater = inflater60;
        gzipSource49.inflater = inflater60;
        gzipSource35.inflater = inflater60;
        gzipSource8.inflater = inflater60;
        gzipSource0.inflater = inflater60;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater67 = null;
        gzipSource66.inflater = inflater67;
        int int69 = gzipSource66.section;
        gzipSource66.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource66);
        java.util.zip.Inflater inflater73 = gzipSource72.inflater;
        gzipSource72.section = (byte) -1;
        java.util.zip.Inflater inflater76 = gzipSource72.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource77 = gzipSource72.inflaterSource;
        gzipSource0.inflaterSource = inflaterSource77;
        gzipSource0.section = 100;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource77);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_14 = null;
        gzipSource13.crc = cRC32_14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        gzipSource16.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        java.util.zip.Inflater inflater23 = gzipSource22.inflater;
        gzipSource13.inflater = inflater23;
        gzipSource12.inflater = inflater23;
        gzipSource0.inflater = inflater23;
        gzipSource0.section = 0;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater23);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        java.util.zip.Inflater inflater10 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = gzipSource0.buffer;
        int int12 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer19 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_21 = null;
        gzipSource20.crc = cRC32_21;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource20.inflaterSource;
        java.util.zip.CRC32 cRC32_24 = gzipSource20.crc;
        java.util.zip.Inflater inflater25 = gzipSource20.inflater;
        gzipSource20.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source30 = gzipSource20.source;
        com.squareup.okhttp.internal.bytes.Source source31 = gzipSource20.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_34 = null;
        gzipSource33.crc = cRC32_34;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater37 = null;
        gzipSource36.inflater = inflater37;
        int int39 = gzipSource36.section;
        gzipSource36.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource36);
        java.util.zip.Inflater inflater43 = gzipSource42.inflater;
        gzipSource33.inflater = inflater43;
        gzipSource32.inflater = inflater43;
        gzipSource20.inflater = inflater43;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer47 = gzipSource20.buffer;
        gzipSource0.buffer = okBuffer47;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer47);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        gzipSource6.section = (byte) -1;
        java.util.zip.Inflater inflater10 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        gzipSource17.section = (byte) -1;
        java.util.zip.Inflater inflater21 = gzipSource17.inflater;
        gzipSource6.inflater = inflater21;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource6.inflaterSource;
        java.lang.Class<?> wildcardClass24 = inflaterSource23.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        gzipSource25.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource25);
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource25.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_35 = null;
        gzipSource34.crc = cRC32_35;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource34.inflaterSource;
        java.util.zip.CRC32 cRC32_38 = gzipSource34.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater40 = null;
        gzipSource39.inflater = inflater40;
        int int42 = gzipSource39.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource39.inflaterSource;
        gzipSource39.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        java.util.zip.Inflater inflater53 = gzipSource52.inflater;
        gzipSource39.inflater = inflater53;
        gzipSource34.inflater = inflater53;
        gzipSource25.inflater = inflater53;
        java.util.zip.CRC32 cRC32_57 = gzipSource25.crc;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = null;
        gzipSource25.inflaterSource = inflaterSource58;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = gzipSource25.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer60, (long) 0, (long) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer60);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource10.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        java.util.zip.Inflater inflater20 = gzipSource15.inflater;
        gzipSource15.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source25 = gzipSource15.source;
        gzipSource10.source = source25;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource10.inflaterSource;
        int int28 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource29.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer34 = null;
        gzipSource29.buffer = okBuffer34;
        int int36 = gzipSource29.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource29.inflaterSource;
        gzipSource10.source = gzipSource29;
        java.util.zip.Inflater inflater39 = gzipSource29.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        gzipSource40.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = null;
        gzipSource40.inflaterSource = inflaterSource47;
        java.util.zip.CRC32 cRC32_49 = gzipSource40.crc;
        gzipSource29.crc = cRC32_49;
        gzipSource6.source = gzipSource29;
        com.squareup.okhttp.internal.bytes.Deadline deadline52 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.consumeTrailer(deadline52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_49);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater4 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        gzipSource5.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource5);
        com.squareup.okhttp.internal.bytes.Source source12 = gzipSource5.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource5.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer14 = gzipSource5.buffer;
        gzipSource0.buffer = okBuffer14;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", (int) '4', 0);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000000 != expected 0x000034");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer14);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        gzipSource8.inflater = inflater18;
        gzipSource0.inflater = inflater18;
        com.squareup.okhttp.internal.bytes.Deadline deadline22 = null;
        gzipSource0.require((int) (byte) 0, deadline22);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        com.squareup.okhttp.internal.bytes.Deadline deadline32 = null;
        gzipSource30.require((-1), deadline32);
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource35.inflaterSource;
        java.util.zip.CRC32 cRC32_39 = gzipSource35.crc;
        java.util.zip.Inflater inflater40 = gzipSource35.inflater;
        gzipSource35.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source45 = gzipSource35.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource46.inflaterSource;
        gzipSource35.source = gzipSource46;
        com.squareup.okhttp.internal.bytes.Source source54 = gzipSource35.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_56 = null;
        gzipSource55.crc = cRC32_56;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource55.inflaterSource;
        java.util.zip.Inflater inflater59 = gzipSource55.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = gzipSource55.buffer;
        gzipSource35.buffer = okBuffer60;
        gzipSource30.source = okBuffer60;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer60, (long) (byte) 3, (long) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source45);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer60);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.CRC32 cRC32_10 = gzipSource9.crc;
        java.util.zip.CRC32 cRC32_11 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline13 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource9.require(1, deadline13);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_11);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        gzipSource8.section = (byte) 0;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer19 = null;
        gzipSource14.buffer = okBuffer19;
        gzipSource14.section = (byte) -1;
        java.util.zip.Inflater inflater23 = gzipSource14.inflater;
        java.util.zip.CRC32 cRC32_24 = gzipSource14.crc;
        gzipSource11.crc = cRC32_24;
        java.util.zip.CRC32 cRC32_26 = gzipSource11.crc;
        com.squareup.okhttp.internal.bytes.Source source27 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer28 = gzipSource11.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource29.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer34 = null;
        gzipSource29.buffer = okBuffer34;
        int int36 = gzipSource29.section;
        com.squareup.okhttp.internal.bytes.Source source37 = null;
        gzipSource29.source = source37;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource29);
        java.util.zip.CRC32 cRC32_40 = gzipSource29.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource41);
        java.util.zip.CRC32 cRC32_45 = gzipSource44.crc;
        gzipSource29.crc = cRC32_45;
        gzipSource11.crc = cRC32_45;
        gzipSource8.crc = cRC32_45;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource8.checkEqual("", 97, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0xffffffff != expected 0x000061");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_45);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Source source12 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer14 = gzipSource13.buffer;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer14);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer9 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int11 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource12.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource12.inflaterSource;
        java.util.zip.CRC32 cRC32_16 = gzipSource12.crc;
        java.util.zip.Inflater inflater17 = gzipSource12.inflater;
        java.util.zip.CRC32 cRC32_18 = null;
        gzipSource12.crc = cRC32_18;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer20 = gzipSource12.buffer;
        gzipSource10.updateCrc(okBuffer20, (long) '4', (long) (-1));
        java.util.zip.CRC32 cRC32_24 = gzipSource10.crc;
        gzipSource0.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.Deadline deadline27 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long28 = gzipSource0.seek((byte) 0, deadline27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_24);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = null;
        gzipSource0.inflaterSource = inflaterSource3;
        gzipSource0.section = 0;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long9 = gzipSource0.seek((byte) 1, deadline8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        gzipSource6.section = (byte) -1;
        java.util.zip.Inflater inflater10 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource6.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer17 = null;
        gzipSource12.buffer = okBuffer17;
        gzipSource12.section = (byte) -1;
        gzipSource12.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        java.util.zip.Inflater inflater28 = gzipSource23.inflater;
        gzipSource23.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source33 = gzipSource23.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource40 = gzipSource34.inflaterSource;
        gzipSource23.source = gzipSource34;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_44 = null;
        gzipSource43.crc = cRC32_44;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        java.util.zip.Inflater inflater53 = gzipSource52.inflater;
        gzipSource43.inflater = inflater53;
        gzipSource42.inflater = inflater53;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer56 = gzipSource42.buffer;
        gzipSource23.updateCrc(okBuffer56, (long) '#', (long) (-1));
        gzipSource12.buffer = okBuffer56;
        java.util.zip.Inflater inflater61 = gzipSource12.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline63 = null;
        gzipSource12.require(0, deadline63);
        com.squareup.okhttp.internal.bytes.Source source65 = gzipSource12.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater67 = null;
        gzipSource66.inflater = inflater67;
        int int69 = gzipSource66.section;
        gzipSource66.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource66);
        java.util.zip.Inflater inflater73 = gzipSource72.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource74 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource72);
        gzipSource74.section = (byte) 0;
        gzipSource74.section = (-1);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource79 = gzipSource74.inflaterSource;
        gzipSource12.inflaterSource = inflaterSource79;
        gzipSource6.inflaterSource = inflaterSource79;
        com.squareup.okhttp.internal.bytes.Deadline deadline83 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long84 = gzipSource6.seek((byte) 10, deadline83);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source65);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource79);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource12.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource12.inflaterSource;
        java.util.zip.CRC32 cRC32_16 = gzipSource12.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource17.inflaterSource;
        gzipSource17.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource17.inflater = inflater31;
        gzipSource12.inflater = inflater31;
        com.squareup.okhttp.internal.bytes.Source source34 = gzipSource12.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource12.inflaterSource;
        gzipSource11.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater38 = null;
        gzipSource37.inflater = inflater38;
        int int40 = gzipSource37.section;
        gzipSource37.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource37);
        java.util.zip.CRC32 cRC32_44 = null;
        gzipSource37.crc = cRC32_44;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_47 = null;
        gzipSource46.crc = cRC32_47;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = gzipSource46.inflaterSource;
        java.util.zip.CRC32 cRC32_50 = gzipSource46.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater52 = null;
        gzipSource51.inflater = inflater52;
        int int54 = gzipSource51.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource55 = gzipSource51.inflaterSource;
        gzipSource51.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        int int61 = gzipSource58.section;
        gzipSource58.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource58);
        java.util.zip.Inflater inflater65 = gzipSource64.inflater;
        gzipSource51.inflater = inflater65;
        gzipSource46.inflater = inflater65;
        gzipSource37.inflater = inflater65;
        java.util.zip.CRC32 cRC32_69 = gzipSource37.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_72 = null;
        gzipSource71.crc = cRC32_72;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource74 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater75 = null;
        gzipSource74.inflater = inflater75;
        int int77 = gzipSource74.section;
        gzipSource74.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource80 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource74);
        java.util.zip.Inflater inflater81 = gzipSource80.inflater;
        gzipSource71.inflater = inflater81;
        gzipSource70.inflater = inflater81;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer84 = gzipSource70.buffer;
        gzipSource37.buffer = okBuffer84;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource86 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer84);
        gzipSource12.updateCrc(okBuffer84, (long) (byte) 100, (long) (short) -1);
        java.util.zip.Inflater inflater90 = gzipSource12.inflater;
        java.util.zip.Inflater inflater91 = gzipSource12.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource55);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_69);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater91);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer10 = null;
        gzipSource0.buffer = okBuffer10;
        com.squareup.okhttp.internal.bytes.Source source12 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_13 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource14.crc = cRC32_15;
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource14.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.Source source19 = gzipSource14.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource20 = gzipSource14.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource14.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline23 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long24 = gzipSource0.read(okBuffer21, 100L, deadline23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource21.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = null;
        gzipSource21.buffer = okBuffer26;
        int int28 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.Source source29 = null;
        gzipSource21.source = source29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.CRC32 cRC32_32 = gzipSource21.crc;
        gzipSource10.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer34 = gzipSource10.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource35.inflaterSource;
        java.util.zip.CRC32 cRC32_39 = gzipSource35.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = gzipSource40.inflaterSource;
        gzipSource40.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        gzipSource47.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource47);
        java.util.zip.Inflater inflater54 = gzipSource53.inflater;
        gzipSource40.inflater = inflater54;
        gzipSource35.inflater = inflater54;
        com.squareup.okhttp.internal.bytes.Source source57 = gzipSource35.source;
        int int58 = gzipSource35.section;
        java.util.zip.CRC32 cRC32_59 = gzipSource35.crc;
        com.squareup.okhttp.internal.bytes.Source source60 = gzipSource35.source;
        gzipSource10.source = source60;
        java.util.zip.Inflater inflater62 = gzipSource10.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater64 = null;
        gzipSource63.inflater = inflater64;
        int int66 = gzipSource63.section;
        gzipSource63.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource63);
        java.util.zip.Inflater inflater70 = gzipSource69.inflater;
        gzipSource69.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int74 = gzipSource73.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_76 = null;
        gzipSource75.crc = cRC32_76;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource78 = gzipSource75.inflaterSource;
        java.util.zip.CRC32 cRC32_79 = gzipSource75.crc;
        java.util.zip.Inflater inflater80 = gzipSource75.inflater;
        java.util.zip.CRC32 cRC32_81 = null;
        gzipSource75.crc = cRC32_81;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer83 = gzipSource75.buffer;
        gzipSource73.updateCrc(okBuffer83, (long) '4', (long) (-1));
        gzipSource69.buffer = okBuffer83;
        gzipSource10.source = gzipSource69;
        int int89 = gzipSource10.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource44);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source57);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater62);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater70);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        gzipSource0.section = 0;
        com.squareup.okhttp.internal.bytes.Deadline deadline35 = null;
        gzipSource0.require((int) (byte) -1, deadline35);
        com.squareup.okhttp.internal.bytes.Deadline deadline38 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (short) 10, deadline38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        java.util.zip.CRC32 cRC32_10 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource11.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource11.inflaterSource;
        java.util.zip.CRC32 cRC32_15 = gzipSource11.crc;
        java.util.zip.Inflater inflater16 = gzipSource11.inflater;
        gzipSource11.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source21 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource22.inflaterSource;
        gzipSource11.source = gzipSource22;
        com.squareup.okhttp.internal.bytes.Source source30 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource31.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource31.inflaterSource;
        java.util.zip.Inflater inflater35 = gzipSource31.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer36 = gzipSource31.buffer;
        gzipSource11.buffer = okBuffer36;
        gzipSource6.source = okBuffer36;
        com.squareup.okhttp.internal.bytes.Source source39 = gzipSource6.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        gzipSource40.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        java.util.zip.Inflater inflater47 = gzipSource46.inflater;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int51 = gzipSource50.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_53 = null;
        gzipSource52.crc = cRC32_53;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource55 = gzipSource52.inflaterSource;
        java.util.zip.CRC32 cRC32_56 = gzipSource52.crc;
        java.util.zip.Inflater inflater57 = gzipSource52.inflater;
        java.util.zip.CRC32 cRC32_58 = null;
        gzipSource52.crc = cRC32_58;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = gzipSource52.buffer;
        gzipSource50.updateCrc(okBuffer60, (long) '4', (long) (-1));
        gzipSource46.buffer = okBuffer60;
        gzipSource6.buffer = okBuffer60;
        com.squareup.okhttp.internal.bytes.Deadline deadline66 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.close(deadline66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer60);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        int int30 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource31.inflaterSource;
        gzipSource31.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource31.inflater = inflater45;
        gzipSource19.inflater = inflater45;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater49 = null;
        gzipSource48.inflater = inflater49;
        int int51 = gzipSource48.section;
        gzipSource48.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource48);
        com.squareup.okhttp.internal.bytes.Deadline deadline56 = null;
        gzipSource54.require((-1), deadline56);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        int int61 = gzipSource58.section;
        gzipSource58.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource58);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource65 = null;
        gzipSource58.inflaterSource = inflaterSource65;
        gzipSource54.source = inflaterSource65;
        java.util.zip.CRC32 cRC32_68 = gzipSource54.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer69 = gzipSource54.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource70 = gzipSource54.inflaterSource;
        gzipSource19.inflaterSource = inflaterSource70;
        int int72 = gzipSource19.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource70);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        int int9 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource10.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        java.util.zip.Inflater inflater20 = gzipSource15.inflater;
        gzipSource15.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source25 = gzipSource15.source;
        gzipSource10.source = source25;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource10.inflaterSource;
        int int28 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource29.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer34 = null;
        gzipSource29.buffer = okBuffer34;
        int int36 = gzipSource29.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource29.inflaterSource;
        gzipSource10.source = gzipSource29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource39.crc = cRC32_40;
        java.util.zip.CRC32 cRC32_42 = null;
        gzipSource39.crc = cRC32_42;
        gzipSource10.source = gzipSource39;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_46 = null;
        gzipSource45.crc = cRC32_46;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource48 = gzipSource45.inflaterSource;
        int int49 = gzipSource45.section;
        com.squareup.okhttp.internal.bytes.Source source50 = gzipSource45.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater52 = null;
        gzipSource51.inflater = inflater52;
        gzipSource45.source = gzipSource51;
        java.util.zip.CRC32 cRC32_55 = gzipSource45.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater57 = null;
        gzipSource56.inflater = inflater57;
        int int59 = gzipSource56.section;
        gzipSource56.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource56);
        com.squareup.okhttp.internal.bytes.Deadline deadline64 = null;
        gzipSource62.require((-1), deadline64);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater67 = null;
        gzipSource66.inflater = inflater67;
        int int69 = gzipSource66.section;
        gzipSource66.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource66);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource73 = null;
        gzipSource66.inflaterSource = inflaterSource73;
        gzipSource62.source = inflaterSource73;
        java.util.zip.CRC32 cRC32_76 = gzipSource62.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer77 = gzipSource62.buffer;
        gzipSource45.updateCrc(okBuffer77, (long) (short) 100, (long) (short) -1);
        gzipSource10.buffer = okBuffer77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer82 = gzipSource10.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline84 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long85 = gzipSource0.read(okBuffer82, (long) (byte) 3, deadline84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource48);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_55);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer82);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        java.util.zip.Inflater inflater10 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Source source12 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        gzipSource14.section = (byte) -1;
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource14.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_23 = null;
        gzipSource22.crc = cRC32_23;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        gzipSource25.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource25);
        java.util.zip.Inflater inflater32 = gzipSource31.inflater;
        gzipSource22.inflater = inflater32;
        gzipSource14.inflater = inflater32;
        gzipSource13.inflater = inflater32;
        java.util.zip.CRC32 cRC32_36 = gzipSource13.crc;
        java.util.zip.CRC32 cRC32_37 = gzipSource13.crc;
        gzipSource0.crc = cRC32_37;
        gzipSource0.section = (byte) 0;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_37);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.Inflater inflater14 = gzipSource13.inflater;
        gzipSource0.inflater = inflater14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource16.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource16.inflaterSource;
        java.util.zip.CRC32 cRC32_20 = gzipSource16.crc;
        java.util.zip.CRC32 cRC32_21 = null;
        gzipSource16.crc = cRC32_21;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        java.util.zip.Inflater inflater28 = gzipSource23.inflater;
        gzipSource23.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source33 = gzipSource23.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource40 = gzipSource34.inflaterSource;
        gzipSource23.source = gzipSource34;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_44 = null;
        gzipSource43.crc = cRC32_44;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        java.util.zip.Inflater inflater53 = gzipSource52.inflater;
        gzipSource43.inflater = inflater53;
        gzipSource42.inflater = inflater53;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer56 = gzipSource42.buffer;
        gzipSource23.updateCrc(okBuffer56, (long) '#', (long) (-1));
        gzipSource16.updateCrc(okBuffer56, (long) 0, 0L);
        gzipSource0.updateCrc(okBuffer56, (long) (byte) 3, 0L);
        com.squareup.okhttp.internal.bytes.Deadline deadline67 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long68 = gzipSource0.seek((byte) 2, deadline67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer56);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        gzipSource6.section = (byte) -1;
        java.util.zip.Inflater inflater10 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        gzipSource17.section = (byte) -1;
        java.util.zip.Inflater inflater21 = gzipSource17.inflater;
        gzipSource6.inflater = inflater21;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource6.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source24 = gzipSource6.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source24);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource8.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        com.squareup.okhttp.internal.bytes.Deadline deadline30 = null;
        gzipSource28.require((-1), deadline30);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        int int35 = gzipSource32.section;
        gzipSource32.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = null;
        gzipSource32.inflaterSource = inflaterSource39;
        gzipSource28.source = inflaterSource39;
        java.util.zip.CRC32 cRC32_42 = gzipSource28.crc;
        gzipSource8.crc = cRC32_42;
        gzipSource0.crc = cRC32_42;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater46 = null;
        gzipSource45.inflater = inflater46;
        int int48 = gzipSource45.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = gzipSource45.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer50 = null;
        gzipSource45.buffer = okBuffer50;
        int int52 = gzipSource45.section;
        com.squareup.okhttp.internal.bytes.Source source53 = null;
        gzipSource45.source = source53;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource45);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource45);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource57 = gzipSource56.inflaterSource;
        gzipSource0.inflaterSource = inflaterSource57;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource49);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource57);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        java.util.zip.CRC32 cRC32_9 = gzipSource0.crc;
        java.util.zip.Inflater inflater10 = gzipSource0.inflater;
        gzipSource0.section = 1;
        com.squareup.okhttp.internal.bytes.Source source13 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source13);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", (int) ' ', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000064 != expected 0x000020");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        gzipSource0.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        gzipSource12.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        gzipSource19.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        java.util.zip.Inflater inflater26 = gzipSource25.inflater;
        gzipSource12.inflater = inflater26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = null;
        gzipSource12.inflaterSource = inflaterSource28;
        gzipSource0.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource31.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource31.inflaterSource;
        java.util.zip.CRC32 cRC32_35 = gzipSource31.crc;
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource31.crc = cRC32_36;
        gzipSource31.section = (-1);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        gzipSource40.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        com.squareup.okhttp.internal.bytes.Deadline deadline48 = null;
        gzipSource46.require((-1), deadline48);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater51 = null;
        gzipSource50.inflater = inflater51;
        int int53 = gzipSource50.section;
        gzipSource50.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource50);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource57 = null;
        gzipSource50.inflaterSource = inflaterSource57;
        gzipSource46.source = inflaterSource57;
        java.util.zip.CRC32 cRC32_60 = gzipSource46.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer61 = gzipSource46.buffer;
        int int62 = gzipSource46.section;
        java.util.zip.CRC32 cRC32_63 = gzipSource46.crc;
        com.squareup.okhttp.internal.bytes.Source source64 = gzipSource46.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater66 = null;
        gzipSource65.inflater = inflater66;
        int int68 = gzipSource65.section;
        gzipSource65.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource65);
        com.squareup.okhttp.internal.bytes.Deadline deadline73 = null;
        gzipSource71.require((-1), deadline73);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater76 = null;
        gzipSource75.inflater = inflater76;
        int int78 = gzipSource75.section;
        gzipSource75.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource81 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource75);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource82 = null;
        gzipSource75.inflaterSource = inflaterSource82;
        gzipSource71.source = inflaterSource82;
        java.util.zip.CRC32 cRC32_85 = gzipSource71.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer86 = gzipSource71.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource87 = gzipSource71.inflaterSource;
        gzipSource46.inflaterSource = inflaterSource87;
        gzipSource31.inflaterSource = inflaterSource87;
        gzipSource12.inflaterSource = inflaterSource87;
        gzipSource12.checkEqual("hi!", 3, (int) (byte) 3);
        java.util.zip.Inflater inflater95 = gzipSource12.inflater;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer61);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source64);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater95);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        java.util.zip.CRC32 cRC32_30 = gzipSource19.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = gzipSource31.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = null;
        gzipSource31.inflaterSource = inflaterSource33;
        com.squareup.okhttp.internal.bytes.Source source35 = gzipSource31.source;
        gzipSource31.section = ' ';
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer45 = gzipSource38.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline47 = null;
        long long48 = gzipSource31.read(okBuffer45, 0L, deadline47);
        gzipSource19.source = okBuffer45;
        gzipSource19.section = 10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater53 = null;
        gzipSource52.inflater = inflater53;
        int int55 = gzipSource52.section;
        gzipSource52.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline59 = null;
        gzipSource52.require((int) (byte) -1, deadline59);
        gzipSource52.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer63 = gzipSource52.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer64 = gzipSource52.buffer;
        gzipSource19.buffer = okBuffer64;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer64);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = null;
        gzipSource30.inflaterSource = inflaterSource37;
        java.util.zip.CRC32 cRC32_39 = gzipSource30.crc;
        gzipSource19.crc = cRC32_39;
        java.util.zip.Inflater inflater41 = gzipSource19.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        java.util.zip.Inflater inflater49 = gzipSource48.inflater;
        gzipSource48.section = (byte) -1;
        java.util.zip.Inflater inflater52 = gzipSource48.inflater;
        gzipSource19.inflater = inflater52;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater52);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        int int9 = gzipSource6.section;
        gzipSource6.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource6.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource20.inflaterSource;
        gzipSource20.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        java.util.zip.Inflater inflater34 = gzipSource33.inflater;
        gzipSource20.inflater = inflater34;
        gzipSource15.inflater = inflater34;
        gzipSource6.inflater = inflater34;
        java.util.zip.CRC32 cRC32_38 = gzipSource6.crc;
        gzipSource6.section = (short) 10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource41.inflaterSource;
        gzipSource41.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer48 = gzipSource41.buffer;
        gzipSource6.source = okBuffer48;
        com.squareup.okhttp.internal.bytes.Deadline deadline51 = null;
        long long52 = gzipSource0.read(okBuffer48, 10L, deadline51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater4 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource5 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_14 = null;
        gzipSource13.crc = cRC32_14;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource13.inflaterSource;
        java.util.zip.CRC32 cRC32_17 = gzipSource13.crc;
        java.util.zip.Inflater inflater18 = gzipSource13.inflater;
        gzipSource13.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource13.source;
        gzipSource8.source = source23;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource8.inflaterSource;
        int int26 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource27.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = null;
        gzipSource27.buffer = okBuffer32;
        int int34 = gzipSource27.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource27.inflaterSource;
        gzipSource8.source = gzipSource27;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = null;
        gzipSource8.inflaterSource = inflaterSource37;
        java.util.zip.CRC32 cRC32_39 = gzipSource8.crc;
        gzipSource0.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline48 = null;
        gzipSource41.require((int) (byte) -1, deadline48);
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer52 = gzipSource41.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer53 = gzipSource41.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline55 = null;
        long long56 = gzipSource0.read(okBuffer53, (long) (short) 0, deadline55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater10 = null;
        gzipSource9.inflater = inflater10;
        int int12 = gzipSource9.section;
        gzipSource9.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource9);
        java.util.zip.Inflater inflater16 = gzipSource15.inflater;
        gzipSource15.section = (byte) -1;
        java.util.zip.Inflater inflater19 = gzipSource15.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        java.util.zip.Inflater inflater27 = gzipSource26.inflater;
        gzipSource26.section = (byte) -1;
        java.util.zip.Inflater inflater30 = gzipSource26.inflater;
        gzipSource15.inflater = inflater30;
        gzipSource0.inflater = inflater30;
        java.lang.Class<?> wildcardClass33 = inflater30.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_35 = null;
        gzipSource34.crc = cRC32_35;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater38 = null;
        gzipSource37.inflater = inflater38;
        int int40 = gzipSource37.section;
        gzipSource37.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource37);
        java.util.zip.Inflater inflater44 = gzipSource43.inflater;
        gzipSource34.inflater = inflater44;
        gzipSource33.inflater = inflater44;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer47 = gzipSource33.buffer;
        gzipSource0.buffer = okBuffer47;
        com.squareup.okhttp.internal.bytes.Deadline deadline49 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer47);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        gzipSource0.section = 0;
        com.squareup.okhttp.internal.bytes.Deadline deadline35 = null;
        gzipSource0.require((int) (byte) -1, deadline35);
        java.util.zip.Inflater inflater37 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline39 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long40 = gzipSource0.seek((byte) 2, deadline39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        int int9 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater3 = null;
        gzipSource2.inflater = inflater3;
        int int5 = gzipSource2.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource2.inflaterSource;
        gzipSource2.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        gzipSource2.require((int) (short) -1, deadline10);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = null;
        gzipSource12.inflaterSource = inflaterSource19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource12.inflaterSource;
        gzipSource2.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = null;
        gzipSource12.inflaterSource = inflaterSource24;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = gzipSource12.buffer;
        gzipSource0.buffer = okBuffer26;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater29 = gzipSource0.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.Inflater inflater15 = gzipSource14.inflater;
        gzipSource0.inflater = inflater15;
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (short) 1, deadline18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater15);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource11.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource11.inflaterSource;
        java.util.zip.CRC32 cRC32_15 = gzipSource11.crc;
        java.util.zip.Inflater inflater16 = gzipSource11.inflater;
        gzipSource11.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source21 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource22.inflaterSource;
        gzipSource11.source = gzipSource22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource31.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        java.util.zip.Inflater inflater41 = gzipSource40.inflater;
        gzipSource31.inflater = inflater41;
        gzipSource30.inflater = inflater41;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer44 = gzipSource30.buffer;
        gzipSource11.updateCrc(okBuffer44, (long) '#', (long) (-1));
        gzipSource0.buffer = okBuffer44;
        java.util.zip.Inflater inflater49 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline51 = null;
        gzipSource0.require(0, deadline51);
        com.squareup.okhttp.internal.bytes.Source source53 = gzipSource0.source;
        java.util.zip.Inflater inflater54 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Source source55 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source55);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource2.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource5 = gzipSource2.inflaterSource;
        java.util.zip.CRC32 cRC32_6 = gzipSource2.crc;
        java.util.zip.Inflater inflater7 = gzipSource2.inflater;
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource2.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer10 = gzipSource2.buffer;
        gzipSource0.updateCrc(okBuffer10, (long) '4', (long) (-1));
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        int int15 = gzipSource0.section;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        java.util.zip.CRC32 cRC32_25 = null;
        gzipSource18.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_29 = null;
        gzipSource28.crc = cRC32_29;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource28.inflaterSource;
        int int32 = gzipSource28.section;
        com.squareup.okhttp.internal.bytes.Source source33 = gzipSource28.source;
        gzipSource28.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer36 = gzipSource28.buffer;
        gzipSource28.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer39 = gzipSource28.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline41 = null;
        long long42 = gzipSource27.read(okBuffer39, (long) (short) 0, deadline41);
        gzipSource0.buffer = okBuffer39;
        com.squareup.okhttp.internal.bytes.Deadline deadline45 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long46 = gzipSource0.seek((byte) -1, deadline45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer17 = null;
        gzipSource12.buffer = okBuffer17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = null;
        gzipSource12.inflaterSource = inflaterSource19;
        int int21 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer22 = gzipSource12.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource23.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_29 = null;
        gzipSource28.crc = cRC32_29;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource28.inflaterSource;
        java.util.zip.CRC32 cRC32_32 = gzipSource28.crc;
        java.util.zip.Inflater inflater33 = gzipSource28.inflater;
        gzipSource28.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source38 = gzipSource28.source;
        gzipSource23.source = source38;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource40 = gzipSource23.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource23.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer42 = gzipSource23.buffer;
        gzipSource12.buffer = okBuffer42;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource8.updateCrc(okBuffer42, (long) '4', (long) 97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer42);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater4 = gzipSource0.inflater;
        gzipSource0.section = (byte) 0;
        java.util.zip.CRC32 cRC32_7 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_7);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource15.inflaterSource;
        gzipSource15.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline23 = null;
        gzipSource15.require((int) (short) -1, deadline23);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        gzipSource25.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource25);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = null;
        gzipSource25.inflaterSource = inflaterSource32;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource25.inflaterSource;
        gzipSource15.source = gzipSource25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource25);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = null;
        gzipSource25.inflaterSource = inflaterSource37;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer39 = gzipSource25.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource25.buffer;
        gzipSource0.buffer = okBuffer40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_44 = null;
        gzipSource43.crc = cRC32_44;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        java.util.zip.Inflater inflater53 = gzipSource52.inflater;
        gzipSource43.inflater = inflater53;
        gzipSource42.inflater = inflater53;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer56 = gzipSource42.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource57 = null;
        gzipSource42.inflaterSource = inflaterSource57;
        java.util.zip.CRC32 cRC32_59 = gzipSource42.crc;
        gzipSource0.crc = cRC32_59;
        com.squareup.okhttp.internal.bytes.Source source61 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline62 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source61);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = null;
        gzipSource10.inflaterSource = inflaterSource22;
        java.util.zip.CRC32 cRC32_24 = gzipSource10.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_26 = null;
        gzipSource25.crc = cRC32_26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource25.inflaterSource;
        java.util.zip.CRC32 cRC32_29 = gzipSource25.crc;
        java.util.zip.Inflater inflater30 = gzipSource25.inflater;
        gzipSource25.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source35 = gzipSource25.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater37 = null;
        gzipSource36.inflater = inflater37;
        int int39 = gzipSource36.section;
        gzipSource36.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = gzipSource36.inflaterSource;
        gzipSource25.source = gzipSource36;
        com.squareup.okhttp.internal.bytes.Source source44 = gzipSource25.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_46 = null;
        gzipSource45.crc = cRC32_46;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource48 = gzipSource45.inflaterSource;
        java.util.zip.Inflater inflater49 = gzipSource45.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer50 = gzipSource45.buffer;
        gzipSource25.buffer = okBuffer50;
        com.squareup.okhttp.internal.bytes.Deadline deadline53 = null;
        long long54 = gzipSource10.read(okBuffer50, 10L, deadline53);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        gzipSource8.inflater = inflater18;
        gzipSource0.inflater = inflater18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_22 = null;
        gzipSource21.crc = cRC32_22;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource21.inflaterSource;
        java.util.zip.CRC32 cRC32_25 = gzipSource21.crc;
        java.util.zip.Inflater inflater26 = gzipSource21.inflater;
        gzipSource21.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer31 = null;
        gzipSource21.buffer = okBuffer31;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_34 = null;
        gzipSource33.crc = cRC32_34;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = gzipSource33.inflaterSource;
        java.util.zip.CRC32 cRC32_37 = gzipSource33.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = gzipSource38.inflaterSource;
        gzipSource38.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater46 = null;
        gzipSource45.inflater = inflater46;
        int int48 = gzipSource45.section;
        gzipSource45.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource45);
        java.util.zip.Inflater inflater52 = gzipSource51.inflater;
        gzipSource38.inflater = inflater52;
        gzipSource33.inflater = inflater52;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource55 = gzipSource33.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer56 = gzipSource33.buffer;
        gzipSource21.buffer = okBuffer56;
        gzipSource0.source = gzipSource21;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer56);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater7 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        gzipSource13.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource13);
        com.squareup.okhttp.internal.bytes.Deadline deadline21 = null;
        gzipSource19.require((-1), deadline21);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        gzipSource23.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource23);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = null;
        gzipSource23.inflaterSource = inflaterSource30;
        gzipSource19.source = inflaterSource30;
        java.util.zip.CRC32 cRC32_33 = gzipSource19.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer34 = gzipSource19.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource19.inflaterSource;
        gzipSource8.inflaterSource = inflaterSource35;
        gzipSource0.inflaterSource = inflaterSource35;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource38);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        gzipSource8.inflater = inflater18;
        gzipSource0.inflater = inflater18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        com.squareup.okhttp.internal.bytes.Deadline deadline29 = null;
        gzipSource27.require((-1), deadline29);
        java.util.zip.CRC32 cRC32_31 = gzipSource27.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_33 = null;
        gzipSource32.crc = cRC32_33;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource32.inflaterSource;
        java.util.zip.CRC32 cRC32_36 = gzipSource32.crc;
        java.util.zip.Inflater inflater37 = gzipSource32.inflater;
        gzipSource32.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source42 = gzipSource32.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater44 = null;
        gzipSource43.inflater = inflater44;
        int int46 = gzipSource43.section;
        gzipSource43.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = gzipSource43.inflaterSource;
        gzipSource32.source = gzipSource43;
        com.squareup.okhttp.internal.bytes.Source source51 = gzipSource32.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_53 = null;
        gzipSource52.crc = cRC32_53;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource55 = gzipSource52.inflaterSource;
        java.util.zip.Inflater inflater56 = gzipSource52.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer57 = gzipSource52.buffer;
        gzipSource32.buffer = okBuffer57;
        gzipSource27.source = okBuffer57;
        gzipSource0.buffer = okBuffer57;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer57);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource3.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource3.buffer = okBuffer8;
        gzipSource3.section = (byte) -1;
        java.util.zip.Inflater inflater12 = gzipSource3.inflater;
        java.util.zip.CRC32 cRC32_13 = gzipSource3.crc;
        gzipSource0.crc = cRC32_13;
        java.util.zip.CRC32 cRC32_15 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource20 = gzipSource16.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_22 = null;
        gzipSource21.crc = cRC32_22;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource21.inflaterSource;
        java.util.zip.CRC32 cRC32_25 = gzipSource21.crc;
        java.util.zip.Inflater inflater26 = gzipSource21.inflater;
        gzipSource21.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source31 = gzipSource21.source;
        gzipSource16.source = source31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource16.inflaterSource;
        int int34 = gzipSource16.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource35);
        gzipSource35.section = 'a';
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer39 = gzipSource35.buffer;
        gzipSource0.buffer = okBuffer39;
        gzipSource0.section = 1;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer39);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater7 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        gzipSource13.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource13);
        com.squareup.okhttp.internal.bytes.Deadline deadline21 = null;
        gzipSource19.require((-1), deadline21);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        gzipSource23.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource23);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = null;
        gzipSource23.inflaterSource = inflaterSource30;
        gzipSource19.source = inflaterSource30;
        java.util.zip.CRC32 cRC32_33 = gzipSource19.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer34 = gzipSource19.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource19.inflaterSource;
        gzipSource8.inflaterSource = inflaterSource35;
        gzipSource0.inflaterSource = inflaterSource35;
        com.squareup.okhttp.internal.bytes.Source source38 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline40 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long41 = gzipSource0.seek((byte) 0, deadline40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source38);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        java.util.zip.CRC32 cRC32_12 = gzipSource8.crc;
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource8.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        java.util.zip.Inflater inflater20 = gzipSource15.inflater;
        gzipSource15.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source25 = gzipSource15.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater27 = null;
        gzipSource26.inflater = inflater27;
        int int29 = gzipSource26.section;
        gzipSource26.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource26.inflaterSource;
        gzipSource15.source = gzipSource26;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource35.inflater = inflater45;
        gzipSource34.inflater = inflater45;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer48 = gzipSource34.buffer;
        gzipSource15.updateCrc(okBuffer48, (long) '#', (long) (-1));
        gzipSource8.updateCrc(okBuffer48, (long) 0, 0L);
        gzipSource0.buffer = okBuffer48;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater57 = gzipSource56.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = null;
        gzipSource56.inflaterSource = inflaterSource58;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = null;
        gzipSource56.buffer = okBuffer60;
        com.squareup.okhttp.internal.bytes.Source source62 = gzipSource56.source;
        gzipSource56.section = (short) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource65 = gzipSource56.inflaterSource;
        java.util.zip.CRC32 cRC32_66 = gzipSource56.crc;
        java.util.zip.CRC32 cRC32_67 = gzipSource56.crc;
        gzipSource0.crc = cRC32_67;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_67);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.Inflater inflater15 = gzipSource14.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        gzipSource0.source = gzipSource16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        gzipSource19.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        com.squareup.okhttp.internal.bytes.Deadline deadline27 = null;
        gzipSource25.require((-1), deadline27);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        gzipSource29.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource29);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = null;
        gzipSource29.inflaterSource = inflaterSource36;
        gzipSource25.source = inflaterSource36;
        java.util.zip.CRC32 cRC32_39 = gzipSource25.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        gzipSource40.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        java.util.zip.Inflater inflater47 = gzipSource46.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource48);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater52 = null;
        gzipSource51.inflater = inflater52;
        int int54 = gzipSource51.section;
        gzipSource51.section = (byte) -1;
        java.util.zip.CRC32 cRC32_57 = null;
        gzipSource51.crc = cRC32_57;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_60 = null;
        gzipSource59.crc = cRC32_60;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater63 = null;
        gzipSource62.inflater = inflater63;
        int int65 = gzipSource62.section;
        gzipSource62.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource62);
        java.util.zip.Inflater inflater69 = gzipSource68.inflater;
        gzipSource59.inflater = inflater69;
        gzipSource51.inflater = inflater69;
        gzipSource50.inflater = inflater69;
        gzipSource49.inflater = inflater69;
        int int74 = gzipSource49.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater76 = null;
        gzipSource75.inflater = inflater76;
        int int78 = gzipSource75.section;
        gzipSource75.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource81 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource75);
        java.util.zip.Inflater inflater82 = gzipSource81.inflater;
        gzipSource81.section = (byte) -1;
        java.util.zip.Inflater inflater85 = gzipSource81.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource86 = gzipSource81.inflaterSource;
        gzipSource49.inflaterSource = inflaterSource86;
        gzipSource25.inflaterSource = inflaterSource86;
        gzipSource16.inflaterSource = inflaterSource86;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource90 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) inflaterSource86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater69);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource86);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource12.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource12.inflaterSource;
        java.util.zip.CRC32 cRC32_16 = gzipSource12.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource17.inflaterSource;
        gzipSource17.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource17.inflater = inflater31;
        gzipSource12.inflater = inflater31;
        com.squareup.okhttp.internal.bytes.Source source34 = gzipSource12.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource12.inflaterSource;
        gzipSource11.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.Deadline deadline38 = null;
        gzipSource12.require((int) (byte) 0, deadline38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((int) (short) 0, deadline8);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource6.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        gzipSource6.require((int) (byte) -1, deadline12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source10);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.Inflater inflater15 = gzipSource14.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        gzipSource0.source = gzipSource16;
        int int19 = gzipSource16.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource20 = gzipSource16.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource20);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        java.lang.Class<?> wildcardClass5 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        int int30 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        com.squareup.okhttp.internal.bytes.Deadline deadline32 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource31.consumeTrailer(deadline32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource0.buffer = okBuffer8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer17 = gzipSource10.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline19 = null;
        long long20 = gzipSource0.read(okBuffer17, (long) (short) 0, deadline19);
        java.lang.Class<?> wildcardClass21 = okBuffer17.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        gzipSource10.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = gzipSource10.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource19.inflater = inflater29;
        gzipSource18.inflater = inflater29;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource18.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = null;
        gzipSource18.inflaterSource = inflaterSource33;
        java.util.zip.CRC32 cRC32_35 = gzipSource18.crc;
        int int36 = gzipSource18.section;
        gzipSource10.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.Deadline deadline39 = null;
        gzipSource18.require((-1), deadline39);
        com.squareup.okhttp.internal.bytes.Deadline deadline42 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource18.require(1, deadline42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater3 = null;
        gzipSource2.inflater = inflater3;
        int int5 = gzipSource2.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource2.inflaterSource;
        gzipSource2.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        gzipSource2.require((int) (short) -1, deadline10);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = null;
        gzipSource12.inflaterSource = inflaterSource19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource12.inflaterSource;
        gzipSource2.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = null;
        gzipSource12.inflaterSource = inflaterSource24;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = gzipSource12.buffer;
        gzipSource0.buffer = okBuffer26;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        gzipSource0.checkEqual("hi!", 1, 1);
        com.squareup.okhttp.internal.bytes.Deadline deadline34 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) ' ', deadline34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer26);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        int int8 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long19 = gzipSource10.seek((byte) 0, deadline18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        int int5 = gzipSource0.section;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", 2, 0);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000000 != expected 0x000002");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource20 = null;
        gzipSource19.inflaterSource = inflaterSource20;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource21.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = null;
        gzipSource21.buffer = okBuffer26;
        int int28 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.Source source29 = null;
        gzipSource21.source = source29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.CRC32 cRC32_32 = gzipSource21.crc;
        gzipSource10.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer34 = gzipSource10.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource35.inflaterSource;
        java.util.zip.CRC32 cRC32_39 = gzipSource35.crc;
        java.util.zip.Inflater inflater40 = gzipSource35.inflater;
        gzipSource35.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source45 = gzipSource35.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource46.inflaterSource;
        gzipSource35.source = gzipSource46;
        com.squareup.okhttp.internal.bytes.Source source54 = gzipSource35.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        gzipSource55.section = (byte) -1;
        java.util.zip.CRC32 cRC32_61 = null;
        gzipSource55.crc = cRC32_61;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_64 = null;
        gzipSource63.crc = cRC32_64;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater67 = null;
        gzipSource66.inflater = inflater67;
        int int69 = gzipSource66.section;
        gzipSource66.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource66);
        java.util.zip.Inflater inflater73 = gzipSource72.inflater;
        gzipSource63.inflater = inflater73;
        gzipSource55.inflater = inflater73;
        gzipSource35.inflater = inflater73;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource77 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater78 = null;
        gzipSource77.inflater = inflater78;
        int int80 = gzipSource77.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource81 = gzipSource77.inflaterSource;
        gzipSource77.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline85 = null;
        gzipSource77.require((int) (short) -1, deadline85);
        com.squareup.okhttp.internal.bytes.Source source87 = gzipSource77.source;
        int int88 = gzipSource77.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer89 = null;
        gzipSource77.buffer = okBuffer89;
        gzipSource35.source = okBuffer89;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer92 = gzipSource35.buffer;
        gzipSource10.buffer = okBuffer92;
        com.squareup.okhttp.internal.bytes.Source source94 = gzipSource10.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source45);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source54);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater73);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source94);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource15.inflaterSource;
        gzipSource15.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline23 = null;
        gzipSource15.require((int) (short) -1, deadline23);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        gzipSource25.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource25);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = null;
        gzipSource25.inflaterSource = inflaterSource32;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource25.inflaterSource;
        gzipSource15.source = gzipSource25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource25);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = null;
        gzipSource25.inflaterSource = inflaterSource37;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer39 = gzipSource25.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource25.buffer;
        gzipSource0.buffer = okBuffer40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_44 = null;
        gzipSource43.crc = cRC32_44;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        java.util.zip.Inflater inflater53 = gzipSource52.inflater;
        gzipSource43.inflater = inflater53;
        gzipSource42.inflater = inflater53;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer56 = gzipSource42.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource57 = null;
        gzipSource42.inflaterSource = inflaterSource57;
        java.util.zip.CRC32 cRC32_59 = gzipSource42.crc;
        gzipSource0.crc = cRC32_59;
        com.squareup.okhttp.internal.bytes.Source source61 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater63 = null;
        gzipSource62.inflater = inflater63;
        int int65 = gzipSource62.section;
        gzipSource62.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource62);
        java.util.zip.Inflater inflater69 = gzipSource68.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource68);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource70);
        java.util.zip.CRC32 cRC32_72 = gzipSource71.crc;
        java.util.zip.CRC32 cRC32_73 = gzipSource71.crc;
        gzipSource0.crc = cRC32_73;
        com.squareup.okhttp.internal.bytes.Deadline deadline75 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source61);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_73);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource11.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource19.inflater = inflater29;
        gzipSource11.inflater = inflater29;
        gzipSource10.inflater = inflater29;
        gzipSource0.inflater = inflater29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        java.util.zip.Inflater inflater41 = gzipSource40.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        gzipSource42.section = (byte) 0;
        gzipSource42.section = (-1);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource42.inflaterSource;
        gzipSource0.inflaterSource = inflaterSource47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater50 = null;
        gzipSource49.inflater = inflater50;
        int int52 = gzipSource49.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource53 = gzipSource49.inflaterSource;
        java.util.zip.Inflater inflater54 = gzipSource49.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource55 = gzipSource49.inflaterSource;
        java.util.zip.Inflater inflater56 = gzipSource49.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        int int61 = gzipSource58.section;
        gzipSource58.section = (byte) -1;
        java.util.zip.CRC32 cRC32_64 = null;
        gzipSource58.crc = cRC32_64;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_67 = null;
        gzipSource66.crc = cRC32_67;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater70 = null;
        gzipSource69.inflater = inflater70;
        int int72 = gzipSource69.section;
        gzipSource69.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource69);
        java.util.zip.Inflater inflater76 = gzipSource75.inflater;
        gzipSource66.inflater = inflater76;
        gzipSource58.inflater = inflater76;
        gzipSource57.inflater = inflater76;
        gzipSource49.inflater = inflater76;
        gzipSource0.source = gzipSource49;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater56);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater76);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        int int12 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.Source source13 = gzipSource8.source;
        gzipSource8.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer16 = gzipSource8.buffer;
        gzipSource8.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer19 = gzipSource8.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource20.inflaterSource;
        gzipSource20.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        java.util.zip.Inflater inflater34 = gzipSource33.inflater;
        gzipSource20.inflater = inflater34;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = null;
        gzipSource20.inflaterSource = inflaterSource36;
        gzipSource8.source = gzipSource20;
        gzipSource6.source = gzipSource8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = gzipSource40.inflaterSource;
        gzipSource40.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer47 = gzipSource40.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer47);
        gzipSource6.source = okBuffer47;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer47);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource11.inflaterSource;
        gzipSource0.source = gzipSource11;
        com.squareup.okhttp.internal.bytes.Source source19 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        java.util.zip.CRC32 cRC32_26 = null;
        gzipSource20.crc = cRC32_26;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer28 = null;
        gzipSource20.buffer = okBuffer28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        java.util.zip.Inflater inflater35 = gzipSource30.inflater;
        gzipSource30.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source40 = gzipSource30.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource41.inflaterSource;
        gzipSource30.source = gzipSource41;
        com.squareup.okhttp.internal.bytes.Source source49 = gzipSource30.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater51 = null;
        gzipSource50.inflater = inflater51;
        int int53 = gzipSource50.section;
        gzipSource50.section = (byte) -1;
        java.util.zip.CRC32 cRC32_56 = null;
        gzipSource50.crc = cRC32_56;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_59 = null;
        gzipSource58.crc = cRC32_59;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater62 = null;
        gzipSource61.inflater = inflater62;
        int int64 = gzipSource61.section;
        gzipSource61.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource61);
        java.util.zip.Inflater inflater68 = gzipSource67.inflater;
        gzipSource58.inflater = inflater68;
        gzipSource50.inflater = inflater68;
        gzipSource30.inflater = inflater68;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater73 = null;
        gzipSource72.inflater = inflater73;
        int int75 = gzipSource72.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource76 = gzipSource72.inflaterSource;
        gzipSource72.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline80 = null;
        gzipSource72.require((int) (short) -1, deadline80);
        com.squareup.okhttp.internal.bytes.Source source82 = gzipSource72.source;
        int int83 = gzipSource72.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer84 = null;
        gzipSource72.buffer = okBuffer84;
        gzipSource30.source = okBuffer84;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer87 = gzipSource30.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline89 = null;
        long long90 = gzipSource20.read(okBuffer87, 10L, deadline89);
        gzipSource0.source = okBuffer87;
        com.squareup.okhttp.internal.bytes.Deadline deadline92 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline92);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source49);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater68);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 100 + "'", int83 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + (-1L) + "'", long90 == (-1L));
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource15.inflaterSource;
        gzipSource15.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline23 = null;
        gzipSource15.require((int) (short) -1, deadline23);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        gzipSource25.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource25);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = null;
        gzipSource25.inflaterSource = inflaterSource32;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource25.inflaterSource;
        gzipSource15.source = gzipSource25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource25);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = null;
        gzipSource25.inflaterSource = inflaterSource37;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer39 = gzipSource25.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource25.buffer;
        gzipSource0.buffer = okBuffer40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_44 = null;
        gzipSource43.crc = cRC32_44;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        java.util.zip.Inflater inflater53 = gzipSource52.inflater;
        gzipSource43.inflater = inflater53;
        gzipSource42.inflater = inflater53;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer56 = gzipSource42.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource57 = null;
        gzipSource42.inflaterSource = inflaterSource57;
        java.util.zip.CRC32 cRC32_59 = gzipSource42.crc;
        gzipSource0.crc = cRC32_59;
        com.squareup.okhttp.internal.bytes.Source source61 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater63 = null;
        gzipSource62.inflater = inflater63;
        int int65 = gzipSource62.section;
        gzipSource62.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource62);
        java.util.zip.Inflater inflater69 = gzipSource68.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource68);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource70);
        java.util.zip.CRC32 cRC32_72 = gzipSource71.crc;
        java.util.zip.CRC32 cRC32_73 = gzipSource71.crc;
        gzipSource0.crc = cRC32_73;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer75 = gzipSource0.buffer;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source61);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer75);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater23 = gzipSource0.inflater;
        java.lang.Class<?> wildcardClass24 = inflater23.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource19.checkEqual("", 1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000023 != expected 0x000001");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater2 = null;
        gzipSource1.inflater = inflater2;
        int int4 = gzipSource1.section;
        gzipSource1.section = (byte) -1;
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource1.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource1.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        java.util.zip.CRC32 cRC32_23 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Source source24 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source24);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        gzipSource0.section = 0;
        com.squareup.okhttp.internal.bytes.Deadline deadline35 = null;
        gzipSource0.require((int) (byte) -1, deadline35);
        java.lang.Class<?> wildcardClass37 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource0.buffer = okBuffer8;
        gzipSource0.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.Deadline deadline13 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require(100, deadline13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        gzipSource8.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        gzipSource15.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        java.util.zip.Inflater inflater22 = gzipSource21.inflater;
        gzipSource8.inflater = inflater22;
        gzipSource0.inflater = inflater22;
        int int25 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_25 = null;
        gzipSource24.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource24.inflaterSource;
        java.util.zip.CRC32 cRC32_28 = gzipSource24.crc;
        java.util.zip.Inflater inflater29 = gzipSource24.inflater;
        gzipSource24.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source34 = gzipSource24.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        gzipSource35.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource35.inflaterSource;
        gzipSource24.source = gzipSource35;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_45 = null;
        gzipSource44.crc = cRC32_45;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        gzipSource47.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource47);
        java.util.zip.Inflater inflater54 = gzipSource53.inflater;
        gzipSource44.inflater = inflater54;
        gzipSource43.inflater = inflater54;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer57 = gzipSource43.buffer;
        gzipSource24.updateCrc(okBuffer57, (long) '#', (long) (-1));
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer57, (long) 1, (long) 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer57);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.CRC32 cRC32_28 = gzipSource27.crc;
        gzipSource0.crc = cRC32_28;
        java.util.zip.CRC32 cRC32_30 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource0.crc = cRC32_31;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_30);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource11.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource19.inflater = inflater29;
        gzipSource11.inflater = inflater29;
        gzipSource10.inflater = inflater29;
        gzipSource9.inflater = inflater29;
        int int34 = gzipSource9.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        gzipSource35.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource35);
        java.util.zip.Inflater inflater42 = gzipSource41.inflater;
        gzipSource41.section = (byte) -1;
        java.util.zip.Inflater inflater45 = gzipSource41.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource46 = gzipSource41.inflaterSource;
        gzipSource9.inflaterSource = inflaterSource46;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_49 = null;
        gzipSource48.crc = cRC32_49;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource48.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource48.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        com.squareup.okhttp.internal.bytes.Deadline deadline61 = null;
        gzipSource59.require((-1), deadline61);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater64 = null;
        gzipSource63.inflater = inflater64;
        int int66 = gzipSource63.section;
        gzipSource63.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource63);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource70 = null;
        gzipSource63.inflaterSource = inflaterSource70;
        gzipSource59.source = inflaterSource70;
        java.util.zip.CRC32 cRC32_73 = gzipSource59.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer74 = gzipSource59.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource75 = gzipSource59.inflaterSource;
        gzipSource48.inflaterSource = inflaterSource75;
        gzipSource9.inflaterSource = inflaterSource75;
        com.squareup.okhttp.internal.bytes.Deadline deadline78 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource9.close(deadline78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource52);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource75);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.Inflater inflater14 = gzipSource13.inflater;
        gzipSource0.inflater = inflater14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        gzipSource16.section = (byte) -1;
        java.util.zip.CRC32 cRC32_22 = null;
        gzipSource16.crc = cRC32_22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_25 = null;
        gzipSource24.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        java.util.zip.Inflater inflater34 = gzipSource33.inflater;
        gzipSource24.inflater = inflater34;
        gzipSource16.inflater = inflater34;
        gzipSource0.inflater = inflater34;
        com.squareup.okhttp.internal.bytes.Deadline deadline38 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater34);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        gzipSource10.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = gzipSource10.crc;
        com.squareup.okhttp.internal.bytes.Source source18 = null;
        gzipSource10.source = source18;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_17);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = null;
        gzipSource0.buffer = okBuffer12;
        int int14 = gzipSource0.section;
        java.util.zip.Inflater inflater15 = gzipSource0.inflater;
        int int16 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.Source source26 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource27.inflaterSource;
        java.util.zip.Inflater inflater31 = gzipSource27.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource27.buffer;
        gzipSource7.buffer = okBuffer32;
        gzipSource0.source = okBuffer32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource35.inflater = inflater45;
        gzipSource0.inflater = inflater45;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_49 = null;
        gzipSource48.crc = cRC32_49;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource48.inflaterSource;
        int int52 = gzipSource48.section;
        com.squareup.okhttp.internal.bytes.Source source53 = gzipSource48.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        gzipSource48.source = gzipSource54;
        java.util.zip.CRC32 cRC32_58 = gzipSource48.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater60 = null;
        gzipSource59.inflater = inflater60;
        int int62 = gzipSource59.section;
        gzipSource59.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource59);
        com.squareup.okhttp.internal.bytes.Deadline deadline67 = null;
        gzipSource65.require((-1), deadline67);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater70 = null;
        gzipSource69.inflater = inflater70;
        int int72 = gzipSource69.section;
        gzipSource69.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource69);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource76 = null;
        gzipSource69.inflaterSource = inflaterSource76;
        gzipSource65.source = inflaterSource76;
        java.util.zip.CRC32 cRC32_79 = gzipSource65.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource65.buffer;
        gzipSource48.updateCrc(okBuffer80, (long) (short) 100, (long) (short) -1);
        gzipSource0.updateCrc(okBuffer80, 0L, 0L);
        com.squareup.okhttp.internal.bytes.Source source87 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline89 = null;
        gzipSource0.require((int) (byte) 0, deadline89);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", (int) (byte) 1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0xffffffff != expected 0x000001");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source87);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        java.util.zip.CRC32 cRC32_22 = gzipSource21.crc;
        java.util.zip.CRC32 cRC32_23 = gzipSource21.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_23);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource3.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource3.buffer = okBuffer8;
        gzipSource3.section = (byte) -1;
        java.util.zip.Inflater inflater12 = gzipSource3.inflater;
        java.util.zip.CRC32 cRC32_13 = gzipSource3.crc;
        gzipSource0.crc = cRC32_13;
        java.util.zip.CRC32 cRC32_15 = gzipSource0.crc;
        int int16 = gzipSource0.section;
        int int17 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource21.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = null;
        gzipSource21.buffer = okBuffer26;
        int int28 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.Source source29 = null;
        gzipSource21.source = source29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.CRC32 cRC32_32 = gzipSource21.crc;
        gzipSource10.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer34 = gzipSource10.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer35 = null;
        gzipSource10.buffer = okBuffer35;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer34);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = null;
        gzipSource0.inflaterSource = inflaterSource32;
        java.util.zip.CRC32 cRC32_34 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        gzipSource35.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline42 = null;
        gzipSource35.require((int) (byte) -1, deadline42);
        gzipSource35.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source46 = gzipSource35.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        gzipSource47.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource47);
        java.util.zip.Inflater inflater54 = gzipSource53.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource55);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        int int61 = gzipSource58.section;
        gzipSource58.section = (byte) -1;
        java.util.zip.CRC32 cRC32_64 = null;
        gzipSource58.crc = cRC32_64;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_67 = null;
        gzipSource66.crc = cRC32_67;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater70 = null;
        gzipSource69.inflater = inflater70;
        int int72 = gzipSource69.section;
        gzipSource69.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource69);
        java.util.zip.Inflater inflater76 = gzipSource75.inflater;
        gzipSource66.inflater = inflater76;
        gzipSource58.inflater = inflater76;
        gzipSource57.inflater = inflater76;
        gzipSource56.inflater = inflater76;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource81 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource56);
        gzipSource35.source = gzipSource81;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource83 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource35);
        gzipSource0.source = gzipSource83;
        com.squareup.okhttp.internal.bytes.Deadline deadline86 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long87 = gzipSource83.seek((byte) 10, deadline86);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater54);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater76);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = null;
        gzipSource0.buffer = okBuffer12;
        int int14 = gzipSource0.section;
        gzipSource0.section = 100;
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        gzipSource0.source = gzipSource6;
        gzipSource0.section = (short) 0;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = gzipSource12.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = null;
        gzipSource12.inflaterSource = inflaterSource14;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer16 = null;
        gzipSource12.buffer = okBuffer16;
        java.util.zip.Inflater inflater18 = gzipSource12.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource12.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        java.util.zip.Inflater inflater27 = gzipSource26.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource26);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource28);
        gzipSource12.source = gzipSource28;
        int int31 = gzipSource28.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource28.inflaterSource;
        gzipSource0.inflaterSource = inflaterSource32;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", 97, 10);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x00000a != expected 0x000061");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource32);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        java.util.zip.Inflater inflater10 = gzipSource0.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource0.buffer = okBuffer8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        java.lang.Class<?> wildcardClass12 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        int int22 = gzipSource6.section;
        java.util.zip.CRC32 cRC32_23 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.Source source24 = gzipSource6.source;
        int int25 = gzipSource6.section;
        java.util.zip.Inflater inflater26 = gzipSource6.inflater;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.checkEqual("hi!", (int) (byte) 1, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000000 != expected 0x000001");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater26);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        int int35 = gzipSource32.section;
        gzipSource32.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        java.util.zip.CRC32 cRC32_39 = null;
        gzipSource32.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_42 = null;
        gzipSource41.crc = cRC32_42;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = gzipSource41.inflaterSource;
        java.util.zip.CRC32 cRC32_45 = gzipSource41.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource50 = gzipSource46.inflaterSource;
        gzipSource46.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        java.util.zip.Inflater inflater60 = gzipSource59.inflater;
        gzipSource46.inflater = inflater60;
        gzipSource41.inflater = inflater60;
        gzipSource32.inflater = inflater60;
        java.util.zip.CRC32 cRC32_64 = gzipSource32.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater66 = null;
        gzipSource65.inflater = inflater66;
        int int68 = gzipSource65.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource69 = gzipSource65.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_71 = null;
        gzipSource70.crc = cRC32_71;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource73 = gzipSource70.inflaterSource;
        java.util.zip.CRC32 cRC32_74 = gzipSource70.crc;
        java.util.zip.Inflater inflater75 = gzipSource70.inflater;
        gzipSource70.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source80 = gzipSource70.source;
        gzipSource65.source = source80;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource82 = gzipSource65.inflaterSource;
        int int83 = gzipSource65.section;
        gzipSource32.source = gzipSource65;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource85 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater86 = null;
        gzipSource85.inflater = inflater86;
        int int88 = gzipSource85.section;
        gzipSource85.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource91 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource85);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer92 = gzipSource85.buffer;
        gzipSource32.buffer = okBuffer92;
        com.squareup.okhttp.internal.bytes.Deadline deadline95 = null;
        long long96 = gzipSource0.read(okBuffer92, (long) ' ', deadline95);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource97 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_45);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_64);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource82);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int83 + "' != '" + 100 + "'", int83 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + (-1L) + "'", long96 == (-1L));
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        gzipSource0.checkEqual("hi!", (-1), (int) (byte) -1);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource17);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource20 = gzipSource19.inflaterSource;
        gzipSource0.inflaterSource = inflaterSource20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.lang.Class<?> wildcardClass23 = gzipSource22.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        java.util.zip.CRC32 cRC32_30 = gzipSource19.crc;
        com.squareup.okhttp.internal.bytes.Source source31 = gzipSource19.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_33 = null;
        gzipSource32.crc = cRC32_33;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource32.inflaterSource;
        java.util.zip.CRC32 cRC32_36 = gzipSource32.crc;
        java.util.zip.Inflater inflater37 = gzipSource32.inflater;
        gzipSource32.checkEqual("", 100, 100);
        java.util.zip.Inflater inflater42 = gzipSource32.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = gzipSource43.inflaterSource;
        gzipSource19.inflaterSource = inflaterSource44;
        int int46 = gzipSource19.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource44);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater12 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        gzipSource13.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource13);
        java.util.zip.Inflater inflater20 = gzipSource19.inflater;
        gzipSource19.section = (byte) -1;
        java.util.zip.Inflater inflater23 = gzipSource19.inflater;
        com.squareup.okhttp.internal.bytes.Source source24 = gzipSource19.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer25 = gzipSource19.buffer;
        java.util.zip.CRC32 cRC32_26 = gzipSource19.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        com.squareup.okhttp.internal.bytes.Source source34 = gzipSource27.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource27.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer36 = gzipSource27.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline38 = null;
        long long39 = gzipSource19.read(okBuffer36, 10L, deadline38);
        gzipSource0.buffer = okBuffer36;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = null;
        gzipSource0.inflaterSource = inflaterSource32;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer35 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline37 = null;
        long long38 = gzipSource0.read(okBuffer35, (long) 0, deadline37);
        com.squareup.okhttp.internal.bytes.Source source39 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source40 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source40);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        gzipSource10.section = ' ';
        com.squareup.okhttp.internal.bytes.Source source13 = gzipSource10.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source13);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource12.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource12.inflaterSource;
        java.util.zip.CRC32 cRC32_16 = gzipSource12.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource17.inflaterSource;
        gzipSource17.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource17.inflater = inflater31;
        gzipSource12.inflater = inflater31;
        com.squareup.okhttp.internal.bytes.Source source34 = gzipSource12.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource12.inflaterSource;
        gzipSource11.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater38 = null;
        gzipSource37.inflater = inflater38;
        int int40 = gzipSource37.section;
        gzipSource37.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource37);
        java.util.zip.CRC32 cRC32_44 = null;
        gzipSource37.crc = cRC32_44;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_47 = null;
        gzipSource46.crc = cRC32_47;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = gzipSource46.inflaterSource;
        java.util.zip.CRC32 cRC32_50 = gzipSource46.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater52 = null;
        gzipSource51.inflater = inflater52;
        int int54 = gzipSource51.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource55 = gzipSource51.inflaterSource;
        gzipSource51.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        int int61 = gzipSource58.section;
        gzipSource58.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource58);
        java.util.zip.Inflater inflater65 = gzipSource64.inflater;
        gzipSource51.inflater = inflater65;
        gzipSource46.inflater = inflater65;
        gzipSource37.inflater = inflater65;
        java.util.zip.CRC32 cRC32_69 = gzipSource37.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_72 = null;
        gzipSource71.crc = cRC32_72;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource74 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater75 = null;
        gzipSource74.inflater = inflater75;
        int int77 = gzipSource74.section;
        gzipSource74.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource80 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource74);
        java.util.zip.Inflater inflater81 = gzipSource80.inflater;
        gzipSource71.inflater = inflater81;
        gzipSource70.inflater = inflater81;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer84 = gzipSource70.buffer;
        gzipSource37.buffer = okBuffer84;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource86 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer84);
        gzipSource12.updateCrc(okBuffer84, (long) (byte) 100, (long) (short) -1);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource90 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer84);
        com.squareup.okhttp.internal.bytes.Source source91 = gzipSource90.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline92 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource90.consumeHeader(deadline92);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource55);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_69);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source91);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        gzipSource0.section = (byte) 1;
        java.util.zip.CRC32 cRC32_14 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource0.source;
        gzipSource0.section = 0;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource0.crc = cRC32_5;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        gzipSource27.inflater = inflater37;
        gzipSource26.inflater = inflater37;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource26.buffer;
        gzipSource7.updateCrc(okBuffer40, (long) '#', (long) (-1));
        gzipSource0.updateCrc(okBuffer40, (long) 0, 0L);
        int int47 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline50 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long51 = gzipSource0.seek((byte) 10, deadline50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource0.buffer = okBuffer8;
        gzipSource0.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.Source source12 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source12);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        gzipSource8.section = (byte) 0;
        gzipSource8.section = (-1);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource8.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource14);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        gzipSource0.checkEqual("hi!", (-1), (int) (byte) -1);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource12.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource12.inflaterSource;
        java.util.zip.CRC32 cRC32_16 = gzipSource12.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource17.inflaterSource;
        gzipSource17.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource17.inflater = inflater31;
        gzipSource12.inflater = inflater31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource12.inflaterSource;
        java.util.zip.Inflater inflater35 = gzipSource12.inflater;
        gzipSource0.inflater = inflater35;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", 3, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000064 != expected 0x000003");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater35);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.Source source26 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource27.inflaterSource;
        java.util.zip.Inflater inflater31 = gzipSource27.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource27.buffer;
        gzipSource7.buffer = okBuffer32;
        gzipSource0.source = okBuffer32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_37 = null;
        gzipSource36.crc = cRC32_37;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource36.inflaterSource;
        java.util.zip.CRC32 cRC32_40 = gzipSource36.crc;
        java.util.zip.Inflater inflater41 = gzipSource36.inflater;
        gzipSource36.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source46 = gzipSource36.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        gzipSource47.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource53 = gzipSource47.inflaterSource;
        gzipSource36.source = gzipSource47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource59 = gzipSource55.inflaterSource;
        java.util.zip.Inflater inflater60 = gzipSource55.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource61 = gzipSource55.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer62 = gzipSource55.buffer;
        gzipSource47.updateCrc(okBuffer62, 100L, 0L);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer62, (long) (byte) 2, (long) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource53);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer62);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource5 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer14 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = null;
        gzipSource0.inflaterSource = inflaterSource15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = null;
        gzipSource17.inflaterSource = inflaterSource21;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource17.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        gzipSource25.section = (byte) -1;
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource25.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_34 = null;
        gzipSource33.crc = cRC32_34;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater37 = null;
        gzipSource36.inflater = inflater37;
        int int39 = gzipSource36.section;
        gzipSource36.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource36);
        java.util.zip.Inflater inflater43 = gzipSource42.inflater;
        gzipSource33.inflater = inflater43;
        gzipSource25.inflater = inflater43;
        gzipSource24.inflater = inflater43;
        java.util.zip.CRC32 cRC32_47 = gzipSource24.crc;
        gzipSource17.crc = cRC32_47;
        gzipSource0.crc = cRC32_47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_47);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        gzipSource6.checkEqual("", (int) (short) 10, (int) (short) 10);
        java.lang.Class<?> wildcardClass25 = gzipSource6.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = null;
        gzipSource0.buffer = okBuffer12;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer14 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer9 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource11.crc = cRC32_12;
        java.util.zip.CRC32 cRC32_14 = null;
        gzipSource11.crc = cRC32_14;
        com.squareup.okhttp.internal.bytes.Source source16 = gzipSource11.source;
        java.util.zip.CRC32 cRC32_17 = gzipSource11.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource18.inflaterSource;
        java.util.zip.CRC32 cRC32_22 = gzipSource18.crc;
        java.util.zip.Inflater inflater23 = gzipSource18.inflater;
        gzipSource18.checkEqual("", 100, 100);
        java.util.zip.Inflater inflater28 = gzipSource18.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer29 = gzipSource18.buffer;
        gzipSource11.buffer = okBuffer29;
        gzipSource0.buffer = okBuffer29;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer29);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        int int30 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        com.squareup.okhttp.internal.bytes.Deadline deadline33 = null;
        gzipSource31.require((int) (byte) 0, deadline33);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource35.inflaterSource;
        java.util.zip.Inflater inflater39 = gzipSource35.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource35.buffer;
        gzipSource31.buffer = okBuffer40;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.Inflater inflater14 = gzipSource13.inflater;
        gzipSource0.inflater = inflater14;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource18.inflater = inflater28;
        gzipSource17.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.Deadline deadline33 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long34 = gzipSource0.seek((byte) 100, deadline33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        gzipSource0.section = 3;
        com.squareup.okhttp.internal.bytes.Deadline deadline21 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        gzipSource6.section = (byte) -1;
        java.util.zip.Inflater inflater10 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource6.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = gzipSource6.buffer;
        java.util.zip.CRC32 cRC32_13 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer14 = gzipSource6.buffer;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer14);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource11.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource19.inflater = inflater29;
        gzipSource11.inflater = inflater29;
        gzipSource10.inflater = inflater29;
        gzipSource9.inflater = inflater29;
        int int34 = gzipSource9.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        gzipSource35.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource35);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer42 = gzipSource35.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater44 = null;
        gzipSource43.inflater = inflater44;
        int int46 = gzipSource43.section;
        gzipSource43.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_50 = null;
        gzipSource49.crc = cRC32_50;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource49.inflaterSource;
        java.util.zip.CRC32 cRC32_53 = gzipSource49.crc;
        java.util.zip.Inflater inflater54 = gzipSource49.inflater;
        gzipSource49.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source59 = gzipSource49.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater61 = null;
        gzipSource60.inflater = inflater61;
        int int63 = gzipSource60.section;
        gzipSource60.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource66 = gzipSource60.inflaterSource;
        gzipSource49.source = gzipSource60;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_70 = null;
        gzipSource69.crc = cRC32_70;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater73 = null;
        gzipSource72.inflater = inflater73;
        int int75 = gzipSource72.section;
        gzipSource72.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource78 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource72);
        java.util.zip.Inflater inflater79 = gzipSource78.inflater;
        gzipSource69.inflater = inflater79;
        gzipSource68.inflater = inflater79;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer82 = gzipSource68.buffer;
        gzipSource49.updateCrc(okBuffer82, (long) '#', (long) (-1));
        com.squareup.okhttp.internal.bytes.Deadline deadline87 = null;
        long long88 = gzipSource43.read(okBuffer82, (long) (short) 0, deadline87);
        com.squareup.okhttp.internal.bytes.Deadline deadline90 = null;
        long long91 = gzipSource35.read(okBuffer82, 100L, deadline90);
        gzipSource9.buffer = okBuffer82;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource9.checkEqual("", 2, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000064 != expected 0x000002");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source59);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource66);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 0L + "'", long88 == 0L);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + (-1L) + "'", long91 == (-1L));
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        gzipSource11.checkEqual("hi!", (int) (short) 1, (int) (short) 1);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer16 = gzipSource11.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer17 = gzipSource11.buffer;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer17);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_11 = gzipSource0.crc;
        int int12 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer13 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline15 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long16 = gzipSource0.read(okBuffer13, (long) 2, deadline15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater2 = null;
        gzipSource1.inflater = inflater2;
        int int4 = gzipSource1.section;
        gzipSource1.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource1);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = null;
        gzipSource1.inflaterSource = inflaterSource8;
        java.util.zip.CRC32 cRC32_10 = gzipSource1.crc;
        gzipSource1.section = 100;
        com.squareup.okhttp.internal.bytes.Source source13 = gzipSource1.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer14 = gzipSource1.buffer;
        gzipSource0.buffer = okBuffer14;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer16 = gzipSource0.buffer;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer16);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource0.crc = cRC32_5;
        int int7 = gzipSource0.section;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", 2, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000064 != expected 0x000002");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer7 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        java.util.zip.CRC32 cRC32_12 = gzipSource8.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource13.inflaterSource;
        gzipSource13.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        java.util.zip.Inflater inflater27 = gzipSource26.inflater;
        gzipSource13.inflater = inflater27;
        gzipSource8.inflater = inflater27;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source31 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        java.util.zip.CRC32 cRC32_36 = gzipSource35.crc;
        gzipSource8.crc = cRC32_36;
        gzipSource0.crc = cRC32_36;
        int int39 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource6.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline23 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.consumeHeader(deadline23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource22);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater3 = null;
        gzipSource2.inflater = inflater3;
        int int5 = gzipSource2.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource2.inflaterSource;
        gzipSource2.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        gzipSource2.require((int) (short) -1, deadline10);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = null;
        gzipSource12.inflaterSource = inflaterSource19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource12.inflaterSource;
        gzipSource2.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = null;
        gzipSource12.inflaterSource = inflaterSource24;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = gzipSource12.buffer;
        gzipSource0.buffer = okBuffer26;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        int int29 = gzipSource28.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        int int5 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (short) 1, deadline7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        gzipSource0.section = 'a';
        int int16 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        gzipSource17.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource17);
        com.squareup.okhttp.internal.bytes.Deadline deadline25 = null;
        gzipSource23.require((-1), deadline25);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = null;
        gzipSource27.inflaterSource = inflaterSource34;
        gzipSource23.source = inflaterSource34;
        java.util.zip.CRC32 cRC32_37 = gzipSource23.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer38 = gzipSource23.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource23.inflaterSource;
        gzipSource0.inflaterSource = inflaterSource39;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 97 + "'", int16 == 97);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource39);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource10.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource18.inflater = inflater28;
        gzipSource10.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.Deadline deadline33 = null;
        gzipSource0.require((int) (short) -1, deadline33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater4 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline5 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater4);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer9 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer10 = gzipSource0.buffer;
        int int11 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource33.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource47.inflaterSource;
        gzipSource47.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        gzipSource54.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource54);
        java.util.zip.Inflater inflater61 = gzipSource60.inflater;
        gzipSource47.inflater = inflater61;
        gzipSource42.inflater = inflater61;
        gzipSource33.inflater = inflater61;
        java.util.zip.CRC32 cRC32_65 = gzipSource33.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_68 = null;
        gzipSource67.crc = cRC32_68;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater71 = null;
        gzipSource70.inflater = inflater71;
        int int73 = gzipSource70.section;
        gzipSource70.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource70);
        java.util.zip.Inflater inflater77 = gzipSource76.inflater;
        gzipSource67.inflater = inflater77;
        gzipSource66.inflater = inflater77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource66.buffer;
        gzipSource33.buffer = okBuffer80;
        gzipSource0.updateCrc(okBuffer80, (long) '#', (long) (short) 0);
        gzipSource0.checkEqual("hi!", (int) (short) 10, 10);
        com.squareup.okhttp.internal.bytes.Deadline deadline89 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_65);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        java.util.zip.Inflater inflater10 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource11.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        gzipSource13.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer19 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline21 = null;
        long long22 = gzipSource13.read(okBuffer19, (long) 100, deadline21);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater29 = null;
        gzipSource28.inflater = inflater29;
        int int31 = gzipSource28.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource28.inflaterSource;
        gzipSource28.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        gzipSource35.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource35);
        java.util.zip.Inflater inflater42 = gzipSource41.inflater;
        gzipSource28.inflater = inflater42;
        gzipSource23.inflater = inflater42;
        gzipSource13.inflater = inflater42;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline53 = null;
        gzipSource46.require((int) (byte) -1, deadline53);
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer57 = gzipSource46.buffer;
        gzipSource13.buffer = okBuffer57;
        gzipSource11.source = gzipSource13;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = gzipSource13.buffer;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer60);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        gzipSource0.require((int) (byte) -1, deadline7);
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline13 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        gzipSource0.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        gzipSource12.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        gzipSource19.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        java.util.zip.Inflater inflater26 = gzipSource25.inflater;
        gzipSource12.inflater = inflater26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = null;
        gzipSource12.inflaterSource = inflaterSource28;
        gzipSource0.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource31.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource31.inflaterSource;
        java.util.zip.CRC32 cRC32_35 = gzipSource31.crc;
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource31.crc = cRC32_36;
        gzipSource31.section = (-1);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        gzipSource40.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        com.squareup.okhttp.internal.bytes.Deadline deadline48 = null;
        gzipSource46.require((-1), deadline48);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater51 = null;
        gzipSource50.inflater = inflater51;
        int int53 = gzipSource50.section;
        gzipSource50.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource50);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource57 = null;
        gzipSource50.inflaterSource = inflaterSource57;
        gzipSource46.source = inflaterSource57;
        java.util.zip.CRC32 cRC32_60 = gzipSource46.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer61 = gzipSource46.buffer;
        int int62 = gzipSource46.section;
        java.util.zip.CRC32 cRC32_63 = gzipSource46.crc;
        com.squareup.okhttp.internal.bytes.Source source64 = gzipSource46.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater66 = null;
        gzipSource65.inflater = inflater66;
        int int68 = gzipSource65.section;
        gzipSource65.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource65);
        com.squareup.okhttp.internal.bytes.Deadline deadline73 = null;
        gzipSource71.require((-1), deadline73);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater76 = null;
        gzipSource75.inflater = inflater76;
        int int78 = gzipSource75.section;
        gzipSource75.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource81 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource75);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource82 = null;
        gzipSource75.inflaterSource = inflaterSource82;
        gzipSource71.source = inflaterSource82;
        java.util.zip.CRC32 cRC32_85 = gzipSource71.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer86 = gzipSource71.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource87 = gzipSource71.inflaterSource;
        gzipSource46.inflaterSource = inflaterSource87;
        gzipSource31.inflaterSource = inflaterSource87;
        gzipSource12.inflaterSource = inflaterSource87;
        gzipSource12.section = (short) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline93 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource12.consumeHeader(deadline93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer61);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source64);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource87);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater3 = null;
        gzipSource2.inflater = inflater3;
        int int5 = gzipSource2.section;
        gzipSource2.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource2);
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource2.source;
        gzipSource0.source = gzipSource2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_18 = null;
        gzipSource17.crc = cRC32_18;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource20 = gzipSource17.inflaterSource;
        java.util.zip.CRC32 cRC32_21 = gzipSource17.crc;
        java.util.zip.Inflater inflater22 = gzipSource17.inflater;
        gzipSource17.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source27 = gzipSource17.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater29 = null;
        gzipSource28.inflater = inflater29;
        int int31 = gzipSource28.section;
        gzipSource28.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource28.inflaterSource;
        gzipSource17.source = gzipSource28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_38 = null;
        gzipSource37.crc = cRC32_38;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        gzipSource40.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        java.util.zip.Inflater inflater47 = gzipSource46.inflater;
        gzipSource37.inflater = inflater47;
        gzipSource36.inflater = inflater47;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer50 = gzipSource36.buffer;
        gzipSource17.updateCrc(okBuffer50, (long) '#', (long) (-1));
        com.squareup.okhttp.internal.bytes.Deadline deadline55 = null;
        long long56 = gzipSource11.read(okBuffer50, (long) (short) 0, deadline55);
        gzipSource0.source = gzipSource11;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        gzipSource0.section = 0;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer17 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource10.inflaterSource;
        gzipSource10.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        gzipSource10.require((int) (short) -1, deadline18);
        com.squareup.okhttp.internal.bytes.Source source20 = gzipSource10.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource21.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource35.inflaterSource;
        gzipSource35.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        java.util.zip.Inflater inflater49 = gzipSource48.inflater;
        gzipSource35.inflater = inflater49;
        gzipSource30.inflater = inflater49;
        gzipSource21.inflater = inflater49;
        gzipSource10.inflater = inflater49;
        gzipSource0.inflater = inflater49;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource59 = gzipSource55.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = null;
        gzipSource55.buffer = okBuffer60;
        int int62 = gzipSource55.section;
        com.squareup.okhttp.internal.bytes.Source source63 = null;
        gzipSource55.source = source63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource55);
        java.util.zip.CRC32 cRC32_66 = gzipSource55.crc;
        gzipSource0.crc = cRC32_66;
        int int68 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource59);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource10.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        java.util.zip.Inflater inflater20 = gzipSource15.inflater;
        gzipSource15.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source25 = gzipSource15.source;
        gzipSource10.source = source25;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource10.inflaterSource;
        int int28 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource29.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer34 = null;
        gzipSource29.buffer = okBuffer34;
        int int36 = gzipSource29.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource29.inflaterSource;
        gzipSource10.source = gzipSource29;
        java.util.zip.Inflater inflater39 = gzipSource29.inflater;
        int int40 = gzipSource29.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource29);
        com.squareup.okhttp.internal.bytes.Deadline deadline43 = null;
        gzipSource41.require((int) (byte) 0, deadline43);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater46 = null;
        gzipSource45.inflater = inflater46;
        int int48 = gzipSource45.section;
        gzipSource45.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource45);
        java.util.zip.Inflater inflater52 = gzipSource51.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource51);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        java.util.zip.CRC32 cRC32_55 = gzipSource54.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater57 = null;
        gzipSource56.inflater = inflater57;
        int int59 = gzipSource56.section;
        gzipSource56.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource56);
        java.util.zip.Inflater inflater63 = gzipSource62.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource62);
        gzipSource64.section = (byte) 0;
        gzipSource64.section = (-1);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource69 = gzipSource64.inflaterSource;
        gzipSource54.inflaterSource = inflaterSource69;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer71 = gzipSource54.buffer;
        gzipSource41.buffer = okBuffer71;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource73 = gzipSource41.inflaterSource;
        gzipSource0.inflaterSource = inflaterSource73;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_55);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource73);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater2 = null;
        gzipSource1.inflater = inflater2;
        int int4 = gzipSource1.section;
        gzipSource1.section = (byte) -1;
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource1.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource1.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource23.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        java.util.zip.Inflater inflater35 = gzipSource30.inflater;
        gzipSource30.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source40 = gzipSource30.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource41.inflaterSource;
        gzipSource30.source = gzipSource41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        java.util.zip.Inflater inflater60 = gzipSource59.inflater;
        gzipSource50.inflater = inflater60;
        gzipSource49.inflater = inflater60;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer63 = gzipSource49.buffer;
        gzipSource30.updateCrc(okBuffer63, (long) '#', (long) (-1));
        gzipSource23.updateCrc(okBuffer63, (long) 0, 0L);
        gzipSource0.buffer = okBuffer63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_72 = null;
        gzipSource71.crc = cRC32_72;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource74 = gzipSource71.inflaterSource;
        java.util.zip.CRC32 cRC32_75 = gzipSource71.crc;
        java.util.zip.Inflater inflater76 = gzipSource71.inflater;
        java.util.zip.CRC32 cRC32_77 = null;
        gzipSource71.crc = cRC32_77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer79 = null;
        gzipSource71.buffer = okBuffer79;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer81 = null;
        gzipSource71.buffer = okBuffer81;
        gzipSource0.source = gzipSource71;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource84 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource85 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer86 = gzipSource0.buffer;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer86);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource11.inflaterSource;
        gzipSource0.source = gzipSource11;
        com.squareup.okhttp.internal.bytes.Source source19 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        java.util.zip.CRC32 cRC32_26 = null;
        gzipSource20.crc = cRC32_26;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_29 = null;
        gzipSource28.crc = cRC32_29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        gzipSource31.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource31);
        java.util.zip.Inflater inflater38 = gzipSource37.inflater;
        gzipSource28.inflater = inflater38;
        gzipSource20.inflater = inflater38;
        gzipSource0.inflater = inflater38;
        com.squareup.okhttp.internal.bytes.Deadline deadline43 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long44 = gzipSource0.seek((byte) 10, deadline43);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater38);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        java.util.zip.CRC32 cRC32_22 = gzipSource10.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline23 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource10.close(deadline23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_22);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource10.inflaterSource;
        gzipSource10.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        gzipSource10.require((int) (short) -1, deadline18);
        com.squareup.okhttp.internal.bytes.Source source20 = gzipSource10.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource21.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource35.inflaterSource;
        gzipSource35.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        java.util.zip.Inflater inflater49 = gzipSource48.inflater;
        gzipSource35.inflater = inflater49;
        gzipSource30.inflater = inflater49;
        gzipSource21.inflater = inflater49;
        gzipSource10.inflater = inflater49;
        gzipSource0.inflater = inflater49;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        gzipSource55.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource55);
        java.util.zip.Inflater inflater62 = gzipSource61.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource61);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource63);
        gzipSource0.source = gzipSource63;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", (int) (byte) 100, 2);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000002 != expected 0x000064");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater62);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline24 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource23.close(deadline24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        gzipSource8.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        gzipSource15.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        java.util.zip.Inflater inflater22 = gzipSource21.inflater;
        gzipSource8.inflater = inflater22;
        gzipSource0.inflater = inflater22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_26 = null;
        gzipSource25.crc = cRC32_26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource25.inflaterSource;
        java.util.zip.CRC32 cRC32_29 = gzipSource25.crc;
        java.util.zip.Inflater inflater30 = gzipSource25.inflater;
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource25.crc = cRC32_31;
        java.util.zip.Inflater inflater33 = gzipSource25.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource34.inflaterSource;
        gzipSource34.section = (byte) 100;
        int int41 = gzipSource34.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        java.util.zip.CRC32 cRC32_47 = null;
        gzipSource42.crc = cRC32_47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_50 = null;
        gzipSource49.crc = cRC32_50;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource49.inflaterSource;
        java.util.zip.CRC32 cRC32_53 = gzipSource49.crc;
        java.util.zip.Inflater inflater54 = gzipSource49.inflater;
        gzipSource49.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source59 = gzipSource49.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater61 = null;
        gzipSource60.inflater = inflater61;
        int int63 = gzipSource60.section;
        gzipSource60.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource66 = gzipSource60.inflaterSource;
        gzipSource49.source = gzipSource60;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_70 = null;
        gzipSource69.crc = cRC32_70;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater73 = null;
        gzipSource72.inflater = inflater73;
        int int75 = gzipSource72.section;
        gzipSource72.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource78 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource72);
        java.util.zip.Inflater inflater79 = gzipSource78.inflater;
        gzipSource69.inflater = inflater79;
        gzipSource68.inflater = inflater79;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer82 = gzipSource68.buffer;
        gzipSource49.updateCrc(okBuffer82, (long) '#', (long) (-1));
        gzipSource42.updateCrc(okBuffer82, (long) 0, 0L);
        gzipSource34.buffer = okBuffer82;
        gzipSource25.buffer = okBuffer82;
        gzipSource0.buffer = okBuffer82;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource92 = gzipSource0.inflaterSource;
        int int93 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source59);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource66);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource92);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int93 + "' != '" + 100 + "'", int93 == 100);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = null;
        gzipSource30.inflaterSource = inflaterSource37;
        java.util.zip.CRC32 cRC32_39 = gzipSource30.crc;
        gzipSource19.crc = cRC32_39;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource19.checkEqual("", (int) '4', 1);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000001 != expected 0x000034");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_39);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource4.crc = cRC32_5;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource4.inflaterSource;
        java.util.zip.CRC32 cRC32_8 = gzipSource4.crc;
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource4.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource11.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource11.inflaterSource;
        java.util.zip.CRC32 cRC32_15 = gzipSource11.crc;
        java.util.zip.Inflater inflater16 = gzipSource11.inflater;
        gzipSource11.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source21 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource22.inflaterSource;
        gzipSource11.source = gzipSource22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource31.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        java.util.zip.Inflater inflater41 = gzipSource40.inflater;
        gzipSource31.inflater = inflater41;
        gzipSource30.inflater = inflater41;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer44 = gzipSource30.buffer;
        gzipSource11.updateCrc(okBuffer44, (long) '#', (long) (-1));
        gzipSource4.updateCrc(okBuffer44, (long) 0, 0L);
        gzipSource0.updateCrc(okBuffer44, (long) (short) -1, 0L);
        com.squareup.okhttp.internal.bytes.Deadline deadline55 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (short) 1, deadline55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer44);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource11.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource19.inflater = inflater29;
        gzipSource11.inflater = inflater29;
        gzipSource10.inflater = inflater29;
        gzipSource0.inflater = inflater29;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline36 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer7 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        java.util.zip.CRC32 cRC32_12 = gzipSource8.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource13.inflaterSource;
        gzipSource13.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        java.util.zip.Inflater inflater27 = gzipSource26.inflater;
        gzipSource13.inflater = inflater27;
        gzipSource8.inflater = inflater27;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source31 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        java.util.zip.CRC32 cRC32_36 = gzipSource35.crc;
        gzipSource8.crc = cRC32_36;
        gzipSource0.crc = cRC32_36;
        java.util.zip.CRC32 cRC32_39 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Source source40 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource41);
        java.util.zip.Inflater inflater48 = gzipSource47.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource47);
        java.util.zip.CRC32 cRC32_50 = gzipSource49.crc;
        gzipSource0.crc = cRC32_50;
        java.util.zip.CRC32 cRC32_52 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_52);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource0.inflaterSource;
        int int19 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_22 = null;
        gzipSource21.crc = cRC32_22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource21.inflater = inflater31;
        gzipSource20.inflater = inflater31;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer34 = gzipSource20.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = null;
        gzipSource20.inflaterSource = inflaterSource35;
        java.util.zip.CRC32 cRC32_37 = gzipSource20.crc;
        int int38 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater40 = null;
        gzipSource39.inflater = inflater40;
        int int42 = gzipSource39.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = null;
        gzipSource39.inflaterSource = inflaterSource43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource39.inflaterSource;
        int int46 = gzipSource39.section;
        com.squareup.okhttp.internal.bytes.Source source47 = gzipSource39.source;
        com.squareup.okhttp.internal.bytes.Source source48 = gzipSource39.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer49 = gzipSource39.buffer;
        gzipSource20.buffer = okBuffer49;
        com.squareup.okhttp.internal.bytes.Deadline deadline52 = null;
        long long53 = gzipSource0.read(okBuffer49, 0L, deadline52);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer6 = gzipSource0.buffer;
        java.lang.Class<?> wildcardClass7 = okBuffer6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource10.inflaterSource;
        gzipSource10.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        gzipSource10.require((int) (short) -1, deadline18);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = null;
        gzipSource20.inflaterSource = inflaterSource27;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource29 = gzipSource20.inflaterSource;
        gzipSource10.source = gzipSource20;
        com.squareup.okhttp.internal.bytes.Source source31 = gzipSource10.source;
        gzipSource0.source = source31;
        com.squareup.okhttp.internal.bytes.Deadline deadline33 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source31);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        int int11 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource13.inflaterSource;
        gzipSource13.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline21 = null;
        gzipSource13.require((int) (short) -1, deadline21);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        gzipSource23.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource23);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = null;
        gzipSource23.inflaterSource = inflaterSource30;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource23.inflaterSource;
        gzipSource13.source = gzipSource23;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource23);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        gzipSource35.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource35);
        com.squareup.okhttp.internal.bytes.Deadline deadline43 = null;
        gzipSource41.require((-1), deadline43);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater46 = null;
        gzipSource45.inflater = inflater46;
        int int48 = gzipSource45.section;
        gzipSource45.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource45);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = null;
        gzipSource45.inflaterSource = inflaterSource52;
        gzipSource41.source = inflaterSource52;
        java.util.zip.CRC32 cRC32_55 = gzipSource41.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer56 = gzipSource41.buffer;
        java.util.zip.CRC32 cRC32_57 = gzipSource41.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        int int61 = gzipSource58.section;
        gzipSource58.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource58);
        java.util.zip.CRC32 cRC32_65 = null;
        gzipSource58.crc = cRC32_65;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_68 = null;
        gzipSource67.crc = cRC32_68;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource70 = gzipSource67.inflaterSource;
        java.util.zip.CRC32 cRC32_71 = gzipSource67.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater73 = null;
        gzipSource72.inflater = inflater73;
        int int75 = gzipSource72.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource76 = gzipSource72.inflaterSource;
        gzipSource72.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource79 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater80 = null;
        gzipSource79.inflater = inflater80;
        int int82 = gzipSource79.section;
        gzipSource79.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource85 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource79);
        java.util.zip.Inflater inflater86 = gzipSource85.inflater;
        gzipSource72.inflater = inflater86;
        gzipSource67.inflater = inflater86;
        gzipSource58.inflater = inflater86;
        gzipSource41.source = gzipSource58;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer91 = gzipSource41.buffer;
        gzipSource34.updateCrc(okBuffer91, (long) (byte) 0, (long) (byte) -1);
        gzipSource0.source = okBuffer91;
        int int96 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline98 = null;
        gzipSource0.require((int) (byte) 0, deadline98);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_57);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_71);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource76);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 100 + "'", int96 == 100);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        gzipSource0.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        gzipSource12.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        gzipSource19.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        java.util.zip.Inflater inflater26 = gzipSource25.inflater;
        gzipSource12.inflater = inflater26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = null;
        gzipSource12.inflaterSource = inflaterSource28;
        gzipSource0.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer31 = gzipSource0.buffer;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer31);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = null;
        gzipSource30.inflaterSource = inflaterSource37;
        java.util.zip.CRC32 cRC32_39 = gzipSource30.crc;
        gzipSource19.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource41.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_47 = null;
        gzipSource46.crc = cRC32_47;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = gzipSource46.inflaterSource;
        java.util.zip.CRC32 cRC32_50 = gzipSource46.crc;
        java.util.zip.Inflater inflater51 = gzipSource46.inflater;
        gzipSource46.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source56 = gzipSource46.source;
        gzipSource41.source = source56;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource41.inflaterSource;
        int int59 = gzipSource41.section;
        gzipSource41.section = 3;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater63 = null;
        gzipSource62.inflater = inflater63;
        int int65 = gzipSource62.section;
        gzipSource62.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource62);
        java.util.zip.Inflater inflater69 = gzipSource68.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource68);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource70);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater74 = null;
        gzipSource73.inflater = inflater74;
        int int76 = gzipSource73.section;
        gzipSource73.section = (byte) -1;
        java.util.zip.CRC32 cRC32_79 = null;
        gzipSource73.crc = cRC32_79;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource81 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_82 = null;
        gzipSource81.crc = cRC32_82;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource84 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater85 = null;
        gzipSource84.inflater = inflater85;
        int int87 = gzipSource84.section;
        gzipSource84.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource90 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource84);
        java.util.zip.Inflater inflater91 = gzipSource90.inflater;
        gzipSource81.inflater = inflater91;
        gzipSource73.inflater = inflater91;
        gzipSource72.inflater = inflater91;
        gzipSource71.inflater = inflater91;
        gzipSource41.inflater = inflater91;
        gzipSource19.inflater = inflater91;
        gzipSource19.section = (byte) 3;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater69);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int87 + "' != '" + 100 + "'", int87 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater91);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = null;
        gzipSource0.inflaterSource = inflaterSource8;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer7 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        java.util.zip.CRC32 cRC32_12 = gzipSource8.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource13.inflaterSource;
        gzipSource13.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        java.util.zip.Inflater inflater27 = gzipSource26.inflater;
        gzipSource13.inflater = inflater27;
        gzipSource8.inflater = inflater27;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source31 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        java.util.zip.CRC32 cRC32_36 = gzipSource35.crc;
        gzipSource8.crc = cRC32_36;
        gzipSource0.crc = cRC32_36;
        java.util.zip.CRC32 cRC32_39 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline42 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (byte) 3, deadline42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        java.util.zip.CRC32 cRC32_22 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline24 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long25 = gzipSource6.seek((byte) 100, deadline24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_22);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = null;
        gzipSource10.inflaterSource = inflaterSource22;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = gzipSource10.buffer;
        java.lang.Class<?> wildcardClass25 = gzipSource10.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource33.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource47.inflaterSource;
        gzipSource47.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        gzipSource54.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource54);
        java.util.zip.Inflater inflater61 = gzipSource60.inflater;
        gzipSource47.inflater = inflater61;
        gzipSource42.inflater = inflater61;
        gzipSource33.inflater = inflater61;
        java.util.zip.CRC32 cRC32_65 = gzipSource33.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_68 = null;
        gzipSource67.crc = cRC32_68;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater71 = null;
        gzipSource70.inflater = inflater71;
        int int73 = gzipSource70.section;
        gzipSource70.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource70);
        java.util.zip.Inflater inflater77 = gzipSource76.inflater;
        gzipSource67.inflater = inflater77;
        gzipSource66.inflater = inflater77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource66.buffer;
        gzipSource33.buffer = okBuffer80;
        gzipSource0.updateCrc(okBuffer80, (long) '#', (long) (short) 0);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer85 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource86 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer85);
        java.util.zip.Inflater inflater87 = gzipSource86.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource88 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource86);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource89 = gzipSource86.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_65);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource89);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource3.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource3.buffer = okBuffer8;
        gzipSource3.section = (byte) -1;
        java.util.zip.Inflater inflater12 = gzipSource3.inflater;
        java.util.zip.CRC32 cRC32_13 = gzipSource3.crc;
        gzipSource0.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource15.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer20 = null;
        gzipSource15.buffer = okBuffer20;
        int int22 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.Source source23 = null;
        gzipSource15.source = source23;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        java.util.zip.CRC32 cRC32_26 = gzipSource15.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        java.util.zip.CRC32 cRC32_31 = gzipSource30.crc;
        gzipSource15.crc = cRC32_31;
        gzipSource0.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_35 = null;
        gzipSource34.crc = cRC32_35;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource34.inflaterSource;
        java.util.zip.CRC32 cRC32_38 = gzipSource34.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater40 = null;
        gzipSource39.inflater = inflater40;
        int int42 = gzipSource39.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource39.inflaterSource;
        gzipSource39.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        java.util.zip.Inflater inflater53 = gzipSource52.inflater;
        gzipSource39.inflater = inflater53;
        gzipSource34.inflater = inflater53;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = gzipSource34.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source57 = gzipSource34.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource58);
        java.util.zip.CRC32 cRC32_62 = gzipSource61.crc;
        gzipSource34.crc = cRC32_62;
        java.util.zip.CRC32 cRC32_64 = gzipSource34.crc;
        gzipSource0.crc = cRC32_64;
        com.squareup.okhttp.internal.bytes.Source source66 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source66);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_10 = gzipSource0.crc;
        gzipSource0.section = (short) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline13 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_10);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource5 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((int) (byte) -1, deadline8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource5);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource11.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer16 = null;
        gzipSource11.buffer = okBuffer16;
        int int18 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.Source source19 = null;
        gzipSource11.source = source19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = null;
        gzipSource11.inflaterSource = inflaterSource21;
        java.util.zip.CRC32 cRC32_23 = gzipSource11.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource24.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer29 = null;
        gzipSource24.buffer = okBuffer29;
        gzipSource24.section = (byte) -1;
        gzipSource24.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        gzipSource24.section = (byte) 1;
        java.util.zip.CRC32 cRC32_38 = gzipSource24.crc;
        gzipSource11.crc = cRC32_38;
        gzipSource0.crc = cRC32_38;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource41.inflaterSource;
        gzipSource41.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline49 = null;
        gzipSource41.require((int) (short) -1, deadline49);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater52 = null;
        gzipSource51.inflater = inflater52;
        int int54 = gzipSource51.section;
        gzipSource51.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource51);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = null;
        gzipSource51.inflaterSource = inflaterSource58;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource60 = gzipSource51.inflaterSource;
        gzipSource41.source = gzipSource51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource51);
        java.util.zip.CRC32 cRC32_63 = gzipSource62.crc;
        gzipSource0.source = gzipSource62;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_63);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource0.inflaterSource;
        int int8 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        int int22 = gzipSource6.section;
        java.util.zip.CRC32 cRC32_23 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.Source source24 = gzipSource6.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline26 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.require((int) 'a', deadline26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source24);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        gzipSource19.section = 'a';
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource23);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        gzipSource14.section = (byte) -1;
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource14.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_23 = null;
        gzipSource22.crc = cRC32_23;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        gzipSource25.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource25);
        java.util.zip.Inflater inflater32 = gzipSource31.inflater;
        gzipSource22.inflater = inflater32;
        gzipSource14.inflater = inflater32;
        gzipSource13.inflater = inflater32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_37 = null;
        gzipSource36.crc = cRC32_37;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource36.inflaterSource;
        java.util.zip.CRC32 cRC32_40 = gzipSource36.crc;
        java.util.zip.CRC32 cRC32_41 = null;
        gzipSource36.crc = cRC32_41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_44 = null;
        gzipSource43.crc = cRC32_44;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource46 = gzipSource43.inflaterSource;
        java.util.zip.CRC32 cRC32_47 = gzipSource43.crc;
        java.util.zip.Inflater inflater48 = gzipSource43.inflater;
        gzipSource43.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source53 = gzipSource43.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        gzipSource54.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource60 = gzipSource54.inflaterSource;
        gzipSource43.source = gzipSource54;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_64 = null;
        gzipSource63.crc = cRC32_64;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater67 = null;
        gzipSource66.inflater = inflater67;
        int int69 = gzipSource66.section;
        gzipSource66.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource66);
        java.util.zip.Inflater inflater73 = gzipSource72.inflater;
        gzipSource63.inflater = inflater73;
        gzipSource62.inflater = inflater73;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer76 = gzipSource62.buffer;
        gzipSource43.updateCrc(okBuffer76, (long) '#', (long) (-1));
        gzipSource36.updateCrc(okBuffer76, (long) 0, 0L);
        gzipSource13.buffer = okBuffer76;
        gzipSource7.buffer = okBuffer76;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource85 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater86 = null;
        gzipSource85.inflater = inflater86;
        int int88 = gzipSource85.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource89 = gzipSource85.inflaterSource;
        gzipSource85.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer92 = gzipSource85.buffer;
        gzipSource7.buffer = okBuffer92;
        gzipSource0.buffer = okBuffer92;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source53);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource60);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer76);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer92);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.Source source21 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        com.squareup.okhttp.internal.bytes.Deadline deadline30 = null;
        gzipSource28.require((-1), deadline30);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        int int35 = gzipSource32.section;
        gzipSource32.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = null;
        gzipSource32.inflaterSource = inflaterSource39;
        gzipSource28.source = inflaterSource39;
        java.util.zip.CRC32 cRC32_42 = gzipSource28.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater44 = null;
        gzipSource43.inflater = inflater44;
        int int46 = gzipSource43.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource43.inflaterSource;
        gzipSource43.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline51 = null;
        gzipSource43.require((int) (short) -1, deadline51);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource60 = null;
        gzipSource53.inflaterSource = inflaterSource60;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource62 = gzipSource53.inflaterSource;
        gzipSource43.source = gzipSource53;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource65 = null;
        gzipSource53.inflaterSource = inflaterSource65;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer67 = gzipSource53.buffer;
        gzipSource28.updateCrc(okBuffer67, (long) (short) 100, (long) (byte) 0);
        gzipSource0.buffer = okBuffer67;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource72 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource72);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer6 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        long long9 = gzipSource0.read(okBuffer6, (long) 100, deadline8);
        int int10 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource11.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer16 = null;
        gzipSource11.buffer = okBuffer16;
        int int18 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.Source source19 = null;
        gzipSource11.source = source19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.CRC32 cRC32_22 = gzipSource11.crc;
        int int23 = gzipSource11.section;
        gzipSource0.source = gzipSource11;
        java.lang.Class<?> wildcardClass25 = gzipSource11.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        gzipSource5.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource5);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = null;
        gzipSource5.inflaterSource = inflaterSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        gzipSource14.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer20 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline22 = null;
        long long23 = gzipSource14.read(okBuffer20, (long) 100, deadline22);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_25 = null;
        gzipSource24.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource24.inflaterSource;
        java.util.zip.CRC32 cRC32_28 = gzipSource24.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource29.inflaterSource;
        gzipSource29.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater37 = null;
        gzipSource36.inflater = inflater37;
        int int39 = gzipSource36.section;
        gzipSource36.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource36);
        java.util.zip.Inflater inflater43 = gzipSource42.inflater;
        gzipSource29.inflater = inflater43;
        gzipSource24.inflater = inflater43;
        gzipSource14.inflater = inflater43;
        gzipSource5.inflater = inflater43;
        gzipSource0.inflater = inflater43;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_50 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater52 = null;
        gzipSource51.inflater = inflater52;
        int int54 = gzipSource51.section;
        gzipSource51.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource51);
        java.util.zip.CRC32 cRC32_58 = null;
        gzipSource51.crc = cRC32_58;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_61 = null;
        gzipSource60.crc = cRC32_61;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource63 = gzipSource60.inflaterSource;
        java.util.zip.CRC32 cRC32_64 = gzipSource60.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater66 = null;
        gzipSource65.inflater = inflater66;
        int int68 = gzipSource65.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource69 = gzipSource65.inflaterSource;
        gzipSource65.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater73 = null;
        gzipSource72.inflater = inflater73;
        int int75 = gzipSource72.section;
        gzipSource72.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource78 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource72);
        java.util.zip.Inflater inflater79 = gzipSource78.inflater;
        gzipSource65.inflater = inflater79;
        gzipSource60.inflater = inflater79;
        gzipSource51.inflater = inflater79;
        gzipSource51.section = 0;
        com.squareup.okhttp.internal.bytes.Deadline deadline86 = null;
        gzipSource51.require((int) (byte) -1, deadline86);
        java.util.zip.Inflater inflater88 = gzipSource51.inflater;
        gzipSource0.source = gzipSource51;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_64);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource69);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater88);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource3.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource3.buffer = okBuffer8;
        gzipSource3.section = (byte) -1;
        java.util.zip.Inflater inflater12 = gzipSource3.inflater;
        java.util.zip.CRC32 cRC32_13 = gzipSource3.crc;
        gzipSource0.crc = cRC32_13;
        java.util.zip.CRC32 cRC32_15 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Source source16 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = null;
        gzipSource17.inflaterSource = inflaterSource19;
        com.squareup.okhttp.internal.bytes.Source source21 = gzipSource17.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer22 = gzipSource17.buffer;
        gzipSource0.buffer = okBuffer22;
        com.squareup.okhttp.internal.bytes.Deadline deadline25 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long26 = gzipSource0.seek((byte) 100, deadline25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer22);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater4 = gzipSource0.inflater;
        int int5 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        gzipSource8.inflater = inflater18;
        gzipSource7.inflater = inflater18;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource7.inflaterSource;
        java.util.zip.Inflater inflater22 = gzipSource7.inflater;
        gzipSource0.inflater = inflater22;
        com.squareup.okhttp.internal.bytes.Deadline deadline24 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater22);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        int int9 = gzipSource6.section;
        gzipSource6.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        java.util.zip.Inflater inflater13 = gzipSource12.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        gzipSource14.section = (byte) 0;
        gzipSource14.section = (-1);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource14.inflaterSource;
        gzipSource0.inflaterSource = inflaterSource19;
        java.util.zip.Inflater inflater21 = null;
        gzipSource0.inflater = inflater21;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", (int) (byte) 100, 0);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000000 != expected 0x000064");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource19);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.Inflater inflater14 = gzipSource13.inflater;
        gzipSource0.inflater = inflater14;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = null;
        gzipSource0.inflaterSource = inflaterSource16;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer18 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_25 = null;
        gzipSource24.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource24.inflaterSource;
        java.util.zip.CRC32 cRC32_28 = gzipSource24.crc;
        java.util.zip.Inflater inflater29 = gzipSource24.inflater;
        gzipSource24.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source34 = gzipSource24.source;
        gzipSource19.source = source34;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = gzipSource19.inflaterSource;
        int int37 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        java.util.zip.Inflater inflater39 = gzipSource38.inflater;
        gzipSource0.source = gzipSource38;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater39);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        gzipSource0.checkEqual("hi!", (-1), (int) (byte) -1);
        java.util.zip.CRC32 cRC32_11 = gzipSource0.crc;
        gzipSource0.section = 'a';
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_11);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer14 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = null;
        gzipSource0.inflaterSource = inflaterSource15;
        java.util.zip.CRC32 cRC32_17 = gzipSource0.crc;
        int int18 = gzipSource0.section;
        java.util.zip.CRC32 cRC32_19 = gzipSource0.crc;
        java.util.zip.Inflater inflater20 = gzipSource0.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater20);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource4.inflaterSource;
        gzipSource4.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        gzipSource4.require((int) (short) -1, deadline12);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        gzipSource14.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = null;
        gzipSource14.inflaterSource = inflaterSource21;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource14.inflaterSource;
        gzipSource4.source = gzipSource14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = null;
        gzipSource14.inflaterSource = inflaterSource26;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer28 = gzipSource14.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer29 = gzipSource14.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline31 = null;
        long long32 = gzipSource0.read(okBuffer29, (long) 0, deadline31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.Source source26 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource27.inflaterSource;
        java.util.zip.Inflater inflater31 = gzipSource27.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource27.buffer;
        gzipSource7.buffer = okBuffer32;
        gzipSource0.source = okBuffer32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        gzipSource35.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource35);
        java.util.zip.Inflater inflater42 = gzipSource41.inflater;
        gzipSource41.section = (byte) -1;
        java.util.zip.Inflater inflater45 = gzipSource41.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        java.util.zip.Inflater inflater53 = gzipSource52.inflater;
        gzipSource52.section = (byte) -1;
        java.util.zip.Inflater inflater56 = gzipSource52.inflater;
        gzipSource41.inflater = inflater56;
        java.util.zip.CRC32 cRC32_58 = gzipSource41.crc;
        gzipSource0.crc = cRC32_58;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = gzipSource0.buffer;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer60);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        java.util.zip.CRC32 cRC32_22 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        gzipSource23.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource23);
        java.util.zip.CRC32 cRC32_30 = null;
        gzipSource23.crc = cRC32_30;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_33 = null;
        gzipSource32.crc = cRC32_33;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource32.inflaterSource;
        java.util.zip.CRC32 cRC32_36 = gzipSource32.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater38 = null;
        gzipSource37.inflater = inflater38;
        int int40 = gzipSource37.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource37.inflaterSource;
        gzipSource37.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        java.util.zip.Inflater inflater51 = gzipSource50.inflater;
        gzipSource37.inflater = inflater51;
        gzipSource32.inflater = inflater51;
        gzipSource23.inflater = inflater51;
        gzipSource6.source = gzipSource23;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater57 = null;
        gzipSource56.inflater = inflater57;
        int int59 = gzipSource56.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource60 = gzipSource56.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_62 = null;
        gzipSource61.crc = cRC32_62;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource64 = gzipSource61.inflaterSource;
        java.util.zip.CRC32 cRC32_65 = gzipSource61.crc;
        java.util.zip.Inflater inflater66 = gzipSource61.inflater;
        gzipSource61.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source71 = gzipSource61.source;
        gzipSource56.source = source71;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer73 = gzipSource56.buffer;
        gzipSource6.buffer = okBuffer73;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer73);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        java.util.zip.Inflater inflater10 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater9 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        gzipSource13.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource13);
        java.util.zip.Inflater inflater20 = gzipSource19.inflater;
        gzipSource10.inflater = inflater20;
        gzipSource0.inflater = inflater20;
        com.squareup.okhttp.internal.bytes.Deadline deadline24 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require(0, deadline24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater20);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        gzipSource12.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline20 = null;
        gzipSource12.require((int) (short) -1, deadline20);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource29 = null;
        gzipSource22.inflaterSource = inflaterSource29;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource22.inflaterSource;
        gzipSource12.source = gzipSource22;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer33 = gzipSource22.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline35 = null;
        long long36 = 0L; // flaky: gzipSource0.read(okBuffer33, (long) 'a', deadline35);
        com.squareup.okhttp.internal.bytes.Deadline deadline38 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long39 = gzipSource0.seek((byte) 3, deadline38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        int int9 = gzipSource6.section;
        gzipSource6.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        java.util.zip.Inflater inflater13 = gzipSource12.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        gzipSource14.section = (byte) 0;
        gzipSource14.section = (-1);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource14.inflaterSource;
        gzipSource0.inflaterSource = inflaterSource19;
        java.util.zip.Inflater inflater21 = null;
        gzipSource0.inflater = inflater21;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer24, 10L, 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        gzipSource0.source = gzipSource6;
        gzipSource0.section = (short) 0;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", (int) (short) 0, (int) (byte) 2);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000002 != expected 0x000000");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        gzipSource0.section = (short) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_10 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_10);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_4 = gzipSource3.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        gzipSource16.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource16.inflaterSource;
        gzipSource5.source = gzipSource16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource24.inflaterSource;
        java.util.zip.Inflater inflater29 = gzipSource24.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource24.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer31 = gzipSource24.buffer;
        gzipSource16.updateCrc(okBuffer31, 100L, 0L);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource3.updateCrc(okBuffer31, (long) (short) 1, (long) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer31);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        int int9 = gzipSource6.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource6.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = null;
        gzipSource6.buffer = okBuffer11;
        int int13 = gzipSource6.section;
        java.util.zip.Inflater inflater14 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        java.util.zip.Inflater inflater20 = gzipSource15.inflater;
        java.util.zip.CRC32 cRC32_21 = null;
        gzipSource15.crc = cRC32_21;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource23.inflaterSource;
        gzipSource23.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        gzipSource23.inflater = inflater37;
        gzipSource15.inflater = inflater37;
        gzipSource6.source = gzipSource15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource41.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_47 = null;
        gzipSource46.crc = cRC32_47;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = gzipSource46.inflaterSource;
        java.util.zip.CRC32 cRC32_50 = gzipSource46.crc;
        java.util.zip.Inflater inflater51 = gzipSource46.inflater;
        gzipSource46.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source56 = gzipSource46.source;
        gzipSource41.source = source56;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource41.inflaterSource;
        int int59 = gzipSource41.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater61 = null;
        gzipSource60.inflater = inflater61;
        int int63 = gzipSource60.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource64 = gzipSource60.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer65 = null;
        gzipSource60.buffer = okBuffer65;
        int int67 = gzipSource60.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource68 = gzipSource60.inflaterSource;
        gzipSource41.source = gzipSource60;
        java.util.zip.Inflater inflater70 = gzipSource60.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater72 = null;
        gzipSource71.inflater = inflater72;
        int int74 = gzipSource71.section;
        gzipSource71.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource77 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource71);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource78 = null;
        gzipSource71.inflaterSource = inflaterSource78;
        java.util.zip.CRC32 cRC32_80 = gzipSource71.crc;
        gzipSource60.crc = cRC32_80;
        gzipSource6.crc = cRC32_80;
        gzipSource0.crc = cRC32_80;
        com.squareup.okhttp.internal.bytes.Deadline deadline85 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require(97, deadline85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource64);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater70);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_80);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer22 = gzipSource0.buffer;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer22);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer14 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = null;
        gzipSource0.inflaterSource = inflaterSource15;
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        gzipSource0.require(0, deadline18);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = null;
        gzipSource20.inflaterSource = inflaterSource24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource20.inflaterSource;
        int int27 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.Source source28 = gzipSource20.source;
        com.squareup.okhttp.internal.bytes.Source source29 = gzipSource20.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        gzipSource20.source = gzipSource30;
        gzipSource0.source = gzipSource20;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater10 = null;
        gzipSource9.inflater = inflater10;
        int int12 = gzipSource9.section;
        gzipSource9.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource9);
        java.util.zip.Inflater inflater16 = gzipSource15.inflater;
        gzipSource15.section = (byte) -1;
        java.util.zip.Inflater inflater19 = gzipSource15.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        java.util.zip.Inflater inflater27 = gzipSource26.inflater;
        gzipSource26.section = (byte) -1;
        java.util.zip.Inflater inflater30 = gzipSource26.inflater;
        gzipSource15.inflater = inflater30;
        gzipSource0.inflater = inflater30;
        com.squareup.okhttp.internal.bytes.Deadline deadline34 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long35 = gzipSource0.seek((byte) 100, deadline34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater30);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        int int33 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource7.inflaterSource;
        gzipSource7.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer14 = gzipSource7.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource20.inflaterSource;
        gzipSource20.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        java.util.zip.Inflater inflater34 = gzipSource33.inflater;
        gzipSource20.inflater = inflater34;
        gzipSource15.inflater = inflater34;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource15.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source38 = gzipSource15.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater40 = null;
        gzipSource39.inflater = inflater40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource39);
        java.util.zip.CRC32 cRC32_43 = gzipSource42.crc;
        gzipSource15.crc = cRC32_43;
        gzipSource7.crc = cRC32_43;
        java.util.zip.CRC32 cRC32_46 = gzipSource7.crc;
        gzipSource0.crc = cRC32_46;
        com.squareup.okhttp.internal.bytes.Deadline deadline49 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long50 = gzipSource0.seek((byte) -1, deadline49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_46);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        java.util.zip.Inflater inflater10 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource11.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer16 = null;
        gzipSource11.buffer = okBuffer16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = null;
        gzipSource11.inflaterSource = inflaterSource18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        java.util.zip.Inflater inflater27 = gzipSource26.inflater;
        gzipSource26.section = (byte) -1;
        java.util.zip.Inflater inflater30 = gzipSource26.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        gzipSource31.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource31);
        java.util.zip.Inflater inflater38 = gzipSource37.inflater;
        gzipSource37.section = (byte) -1;
        java.util.zip.Inflater inflater41 = gzipSource37.inflater;
        gzipSource26.inflater = inflater41;
        gzipSource11.inflater = inflater41;
        gzipSource0.inflater = inflater41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater41);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline23 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        java.util.zip.Inflater inflater14 = gzipSource9.inflater;
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource9.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource17.inflaterSource;
        gzipSource17.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource17.inflater = inflater31;
        gzipSource9.inflater = inflater31;
        gzipSource0.source = gzipSource9;
        gzipSource0.section = 0;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater38 = null;
        gzipSource37.inflater = inflater38;
        int int40 = gzipSource37.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource37.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer42 = null;
        gzipSource37.buffer = okBuffer42;
        int int44 = gzipSource37.section;
        com.squareup.okhttp.internal.bytes.Source source45 = null;
        gzipSource37.source = source45;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource37);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource37);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_50 = null;
        gzipSource49.crc = cRC32_50;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource49.inflaterSource;
        java.util.zip.CRC32 cRC32_53 = gzipSource49.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource54.inflaterSource;
        gzipSource54.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater62 = null;
        gzipSource61.inflater = inflater62;
        int int64 = gzipSource61.section;
        gzipSource61.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource61);
        java.util.zip.Inflater inflater68 = gzipSource67.inflater;
        gzipSource54.inflater = inflater68;
        gzipSource49.inflater = inflater68;
        com.squareup.okhttp.internal.bytes.Source source71 = gzipSource49.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource72 = gzipSource49.inflaterSource;
        gzipSource48.source = gzipSource49;
        java.util.zip.Inflater inflater74 = gzipSource48.inflater;
        gzipSource0.inflater = inflater74;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_53);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater74);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater7 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource8.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        gzipSource13.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource13);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource20 = null;
        gzipSource13.inflaterSource = inflaterSource20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer28 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline30 = null;
        long long31 = gzipSource22.read(okBuffer28, (long) 100, deadline30);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_33 = null;
        gzipSource32.crc = cRC32_33;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource32.inflaterSource;
        java.util.zip.CRC32 cRC32_36 = gzipSource32.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater38 = null;
        gzipSource37.inflater = inflater38;
        int int40 = gzipSource37.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource37.inflaterSource;
        gzipSource37.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        java.util.zip.Inflater inflater51 = gzipSource50.inflater;
        gzipSource37.inflater = inflater51;
        gzipSource32.inflater = inflater51;
        gzipSource22.inflater = inflater51;
        gzipSource13.inflater = inflater51;
        gzipSource8.inflater = inflater51;
        gzipSource0.inflater = inflater51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource58);
        java.util.zip.CRC32 cRC32_62 = gzipSource61.crc;
        gzipSource0.crc = cRC32_62;
        java.lang.Class<?> wildcardClass64 = cRC32_62.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.Source source26 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource27.inflaterSource;
        java.util.zip.Inflater inflater31 = gzipSource27.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource27.buffer;
        gzipSource7.buffer = okBuffer32;
        gzipSource0.source = okBuffer32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource35);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        gzipSource11.section = (byte) 2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        gzipSource14.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        java.util.zip.Inflater inflater21 = gzipSource20.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        gzipSource25.section = (byte) -1;
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource25.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_34 = null;
        gzipSource33.crc = cRC32_34;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater37 = null;
        gzipSource36.inflater = inflater37;
        int int39 = gzipSource36.section;
        gzipSource36.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource36);
        java.util.zip.Inflater inflater43 = gzipSource42.inflater;
        gzipSource33.inflater = inflater43;
        gzipSource25.inflater = inflater43;
        gzipSource24.inflater = inflater43;
        gzipSource23.inflater = inflater43;
        gzipSource11.source = gzipSource23;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater50 = null;
        gzipSource49.inflater = inflater50;
        int int52 = gzipSource49.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource53 = gzipSource49.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_55 = null;
        gzipSource54.crc = cRC32_55;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource57 = gzipSource54.inflaterSource;
        java.util.zip.CRC32 cRC32_58 = gzipSource54.crc;
        java.util.zip.Inflater inflater59 = gzipSource54.inflater;
        gzipSource54.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source64 = gzipSource54.source;
        gzipSource49.source = source64;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource66 = gzipSource49.inflaterSource;
        int int67 = gzipSource49.section;
        gzipSource49.section = 3;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater71 = null;
        gzipSource70.inflater = inflater71;
        int int73 = gzipSource70.section;
        gzipSource70.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource70);
        com.squareup.okhttp.internal.bytes.Deadline deadline78 = null;
        gzipSource76.require((-1), deadline78);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource80 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater81 = null;
        gzipSource80.inflater = inflater81;
        int int83 = gzipSource80.section;
        gzipSource80.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource86 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource80);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource87 = null;
        gzipSource80.inflaterSource = inflaterSource87;
        gzipSource76.source = inflaterSource87;
        java.util.zip.CRC32 cRC32_90 = gzipSource76.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer91 = gzipSource76.buffer;
        gzipSource49.updateCrc(okBuffer91, (long) (short) 100, (long) (short) -1);
        gzipSource11.source = okBuffer91;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater43);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource66);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int83 + "' != '" + 100 + "'", int83 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer91);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource0.crc = cRC32_5;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        gzipSource27.inflater = inflater37;
        gzipSource26.inflater = inflater37;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource26.buffer;
        gzipSource7.updateCrc(okBuffer40, (long) '#', (long) (-1));
        gzipSource0.updateCrc(okBuffer40, (long) 0, 0L);
        com.squareup.okhttp.internal.bytes.Source source47 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater49 = null;
        gzipSource48.inflater = inflater49;
        int int51 = gzipSource48.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource48.inflaterSource;
        gzipSource48.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline56 = null;
        gzipSource48.require((int) (short) -1, deadline56);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        int int61 = gzipSource58.section;
        gzipSource58.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource58);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource65 = null;
        gzipSource58.inflaterSource = inflaterSource65;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource67 = gzipSource58.inflaterSource;
        gzipSource48.source = gzipSource58;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource58);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource70 = null;
        gzipSource58.inflaterSource = inflaterSource70;
        int int72 = gzipSource58.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource58);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource74 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater75 = null;
        gzipSource74.inflater = inflater75;
        int int77 = gzipSource74.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource78 = null;
        gzipSource74.inflaterSource = inflaterSource78;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource80 = gzipSource74.inflaterSource;
        int int81 = gzipSource74.section;
        com.squareup.okhttp.internal.bytes.Source source82 = gzipSource74.source;
        com.squareup.okhttp.internal.bytes.Source source83 = gzipSource74.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource84 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_85 = null;
        gzipSource84.crc = cRC32_85;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource87 = gzipSource84.inflaterSource;
        gzipSource74.source = gzipSource84;
        gzipSource84.section = (byte) -1;
        java.util.zip.CRC32 cRC32_91 = gzipSource84.crc;
        java.util.zip.Inflater inflater92 = gzipSource84.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer93 = gzipSource84.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline95 = null;
        long long96 = gzipSource73.read(okBuffer93, 0L, deadline95);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer93, 10L, (long) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource52);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource80);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + 0L + "'", long96 == 0L);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        gzipSource0.checkEqual("hi!", (-1), (int) (byte) -1);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        gzipSource8.section = (byte) 0;
        gzipSource8.section = (-1);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.CRC32 cRC32_15 = gzipSource14.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        gzipSource16.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = null;
        gzipSource23.inflaterSource = inflaterSource27;
        com.squareup.okhttp.internal.bytes.Source source29 = gzipSource23.source;
        java.util.zip.CRC32 cRC32_30 = gzipSource23.crc;
        gzipSource16.crc = cRC32_30;
        gzipSource14.crc = cRC32_30;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_30);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_7 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int13 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline22 = null;
        gzipSource14.require((int) (short) -1, deadline22);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = null;
        gzipSource24.inflaterSource = inflaterSource31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource24.inflaterSource;
        gzipSource14.source = gzipSource24;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = null;
        gzipSource24.inflaterSource = inflaterSource36;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer38 = gzipSource24.buffer;
        gzipSource12.buffer = okBuffer38;
        gzipSource8.buffer = okBuffer38;
        gzipSource0.buffer = okBuffer38;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer38);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        gzipSource6.section = (byte) -1;
        java.util.zip.Inflater inflater10 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        gzipSource17.section = (byte) -1;
        java.util.zip.Inflater inflater21 = gzipSource17.inflater;
        gzipSource6.inflater = inflater21;
        java.util.zip.CRC32 cRC32_23 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        gzipSource32.section = (byte) 0;
        gzipSource32.section = (-1);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource32.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        gzipSource38.section = 0;
        java.util.zip.Inflater inflater41 = gzipSource38.inflater;
        gzipSource6.inflater = inflater41;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater41);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        gzipSource0.section = 3;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        com.squareup.okhttp.internal.bytes.Deadline deadline29 = null;
        gzipSource27.require((-1), deadline29);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        gzipSource31.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource31);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = null;
        gzipSource31.inflaterSource = inflaterSource38;
        gzipSource27.source = inflaterSource38;
        java.util.zip.CRC32 cRC32_41 = gzipSource27.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer42 = gzipSource27.buffer;
        gzipSource0.updateCrc(okBuffer42, (long) (short) 100, (long) (short) -1);
        com.squareup.okhttp.internal.bytes.Source source46 = gzipSource0.source;
        gzipSource0.section = (byte) 2;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source46);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = null;
        gzipSource0.inflaterSource = inflaterSource6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer13 = null;
        gzipSource8.buffer = okBuffer13;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource8.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.Source source19 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer20 = null;
        gzipSource8.buffer = okBuffer20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater27 = null;
        gzipSource26.inflater = inflater27;
        int int29 = gzipSource26.section;
        gzipSource26.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource26);
        java.util.zip.Inflater inflater33 = gzipSource32.inflater;
        gzipSource23.inflater = inflater33;
        gzipSource22.inflater = inflater33;
        gzipSource8.inflater = inflater33;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_39 = null;
        gzipSource38.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource41);
        java.util.zip.Inflater inflater48 = gzipSource47.inflater;
        gzipSource38.inflater = inflater48;
        gzipSource37.inflater = inflater48;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource37.inflaterSource;
        java.util.zip.Inflater inflater52 = gzipSource37.inflater;
        gzipSource8.inflater = inflater52;
        gzipSource0.inflater = inflater52;
        java.util.zip.Inflater inflater55 = gzipSource0.inflater;
        java.util.zip.Inflater inflater56 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_57 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource58);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer9 = gzipSource0.buffer;
        java.util.zip.CRC32 cRC32_10 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = gzipSource0.buffer;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer11);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        gzipSource8.section = (byte) 0;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = null;
        gzipSource11.inflaterSource = inflaterSource15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource11.inflaterSource;
        int int18 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.Source source19 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.Source source20 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource11.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource8.updateCrc(okBuffer21, (long) '#', 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource3.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource3.buffer = okBuffer8;
        gzipSource3.section = (byte) -1;
        java.util.zip.Inflater inflater12 = gzipSource3.inflater;
        java.util.zip.CRC32 cRC32_13 = gzipSource3.crc;
        gzipSource0.crc = cRC32_13;
        java.util.zip.CRC32 cRC32_15 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Source source16 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = null;
        gzipSource17.inflaterSource = inflaterSource19;
        com.squareup.okhttp.internal.bytes.Source source21 = gzipSource17.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer22 = gzipSource17.buffer;
        gzipSource0.buffer = okBuffer22;
        gzipSource0.section = 1;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer22);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        java.util.zip.CRC32 cRC32_9 = gzipSource0.crc;
        gzipSource0.section = 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = null;
        gzipSource0.buffer = okBuffer12;
        com.squareup.okhttp.internal.bytes.Deadline deadline15 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long16 = gzipSource0.seek((byte) 0, deadline15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_9);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        gzipSource6.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        java.lang.Class<?> wildcardClass12 = gzipSource10.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        int int22 = gzipSource6.section;
        java.util.zip.CRC32 cRC32_23 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.Source source24 = gzipSource6.source;
        java.util.zip.CRC32 cRC32_25 = gzipSource6.crc;
        gzipSource6.section = (short) 0;
        java.util.zip.Inflater inflater28 = gzipSource6.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        java.util.zip.Inflater inflater14 = gzipSource9.inflater;
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource9.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource17.inflaterSource;
        gzipSource17.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource17.inflater = inflater31;
        gzipSource9.inflater = inflater31;
        gzipSource0.source = gzipSource9;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource35.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_41 = null;
        gzipSource40.crc = cRC32_41;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource40.inflaterSource;
        java.util.zip.CRC32 cRC32_44 = gzipSource40.crc;
        java.util.zip.Inflater inflater45 = gzipSource40.inflater;
        gzipSource40.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source50 = gzipSource40.source;
        gzipSource35.source = source50;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource35.inflaterSource;
        int int53 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource54.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer59 = null;
        gzipSource54.buffer = okBuffer59;
        int int61 = gzipSource54.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource62 = gzipSource54.inflaterSource;
        gzipSource35.source = gzipSource54;
        java.util.zip.Inflater inflater64 = gzipSource54.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater66 = null;
        gzipSource65.inflater = inflater66;
        int int68 = gzipSource65.section;
        gzipSource65.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource65);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource72 = null;
        gzipSource65.inflaterSource = inflaterSource72;
        java.util.zip.CRC32 cRC32_74 = gzipSource65.crc;
        gzipSource54.crc = cRC32_74;
        gzipSource0.crc = cRC32_74;
        java.util.zip.CRC32 cRC32_77 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource52);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater64);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_77);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource0.crc = cRC32_5;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        gzipSource27.inflater = inflater37;
        gzipSource26.inflater = inflater37;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource26.buffer;
        gzipSource7.updateCrc(okBuffer40, (long) '#', (long) (-1));
        gzipSource0.updateCrc(okBuffer40, (long) 0, 0L);
        com.squareup.okhttp.internal.bytes.Source source47 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer48 = gzipSource0.buffer;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer48);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater4 = gzipSource0.inflater;
        gzipSource0.section = (byte) 0;
        java.util.zip.Inflater inflater7 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        gzipSource8.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer15 = gzipSource8.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource16.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource16.inflaterSource;
        java.util.zip.CRC32 cRC32_20 = gzipSource16.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource21.inflaterSource;
        gzipSource21.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater29 = null;
        gzipSource28.inflater = inflater29;
        int int31 = gzipSource28.section;
        gzipSource28.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource28);
        java.util.zip.Inflater inflater35 = gzipSource34.inflater;
        gzipSource21.inflater = inflater35;
        gzipSource16.inflater = inflater35;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource16.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source39 = gzipSource16.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        java.util.zip.CRC32 cRC32_44 = gzipSource43.crc;
        gzipSource16.crc = cRC32_44;
        gzipSource8.crc = cRC32_44;
        gzipSource0.crc = cRC32_44;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_44);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource5 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        gzipSource0.require((int) (byte) 0, deadline7);
        java.util.zip.CRC32 cRC32_9 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer10 = gzipSource0.buffer;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer10);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        gzipSource6.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource10.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        java.util.zip.Inflater inflater20 = gzipSource15.inflater;
        gzipSource15.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source25 = gzipSource15.source;
        gzipSource10.source = source25;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource10.inflaterSource;
        int int28 = gzipSource10.section;
        gzipSource10.section = 3;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        gzipSource31.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource31);
        java.util.zip.Inflater inflater38 = gzipSource37.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource37);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource39);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        java.util.zip.CRC32 cRC32_48 = null;
        gzipSource42.crc = cRC32_48;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        java.util.zip.Inflater inflater60 = gzipSource59.inflater;
        gzipSource50.inflater = inflater60;
        gzipSource42.inflater = inflater60;
        gzipSource41.inflater = inflater60;
        gzipSource40.inflater = inflater60;
        gzipSource10.inflater = inflater60;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_67 = null;
        gzipSource66.crc = cRC32_67;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource69 = gzipSource66.inflaterSource;
        int int70 = gzipSource66.section;
        com.squareup.okhttp.internal.bytes.Source source71 = gzipSource66.source;
        gzipSource66.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer74 = gzipSource66.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer75 = gzipSource66.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource66);
        com.squareup.okhttp.internal.bytes.Source source77 = gzipSource76.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer78 = gzipSource76.buffer;
        gzipSource10.buffer = okBuffer78;
        com.squareup.okhttp.internal.bytes.Deadline deadline81 = null;
        long long82 = gzipSource6.read(okBuffer78, (long) 3, deadline81);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource69);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + (-1L) + "'", long82 == (-1L));
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        gzipSource6.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int11 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource12.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource12.inflaterSource;
        java.util.zip.CRC32 cRC32_16 = gzipSource12.crc;
        java.util.zip.Inflater inflater17 = gzipSource12.inflater;
        java.util.zip.CRC32 cRC32_18 = null;
        gzipSource12.crc = cRC32_18;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer20 = gzipSource12.buffer;
        gzipSource10.updateCrc(okBuffer20, (long) '4', (long) (-1));
        gzipSource6.buffer = okBuffer20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        gzipSource25.section = 0;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource25);
        java.util.zip.CRC32 cRC32_29 = gzipSource25.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource30.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer35 = null;
        gzipSource30.buffer = okBuffer35;
        int int37 = gzipSource30.section;
        com.squareup.okhttp.internal.bytes.Source source38 = null;
        gzipSource30.source = source38;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource40 = null;
        gzipSource30.inflaterSource = inflaterSource40;
        java.util.zip.CRC32 cRC32_42 = gzipSource30.crc;
        gzipSource25.crc = cRC32_42;
        gzipSource6.crc = cRC32_42;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = null;
        gzipSource6.inflaterSource = inflaterSource45;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_42);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        java.util.zip.Inflater inflater14 = gzipSource9.inflater;
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource9.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource17.inflaterSource;
        gzipSource17.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource17.inflater = inflater31;
        gzipSource9.inflater = inflater31;
        gzipSource0.source = gzipSource9;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource35.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_41 = null;
        gzipSource40.crc = cRC32_41;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource40.inflaterSource;
        java.util.zip.CRC32 cRC32_44 = gzipSource40.crc;
        java.util.zip.Inflater inflater45 = gzipSource40.inflater;
        gzipSource40.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source50 = gzipSource40.source;
        gzipSource35.source = source50;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource35.inflaterSource;
        int int53 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource54.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer59 = null;
        gzipSource54.buffer = okBuffer59;
        int int61 = gzipSource54.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource62 = gzipSource54.inflaterSource;
        gzipSource35.source = gzipSource54;
        java.util.zip.Inflater inflater64 = gzipSource54.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater66 = null;
        gzipSource65.inflater = inflater66;
        int int68 = gzipSource65.section;
        gzipSource65.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource65);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource72 = null;
        gzipSource65.inflaterSource = inflaterSource72;
        java.util.zip.CRC32 cRC32_74 = gzipSource65.crc;
        gzipSource54.crc = cRC32_74;
        gzipSource0.crc = cRC32_74;
        com.squareup.okhttp.internal.bytes.Source source77 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_78 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource79 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater80 = null;
        gzipSource79.inflater = inflater80;
        int int82 = gzipSource79.section;
        gzipSource79.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource85 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource79);
        java.util.zip.Inflater inflater86 = gzipSource85.inflater;
        gzipSource85.section = (byte) -1;
        java.util.zip.Inflater inflater89 = gzipSource85.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource90 = gzipSource85.inflaterSource;
        gzipSource0.inflaterSource = inflaterSource90;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource52);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater64);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_78);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource90);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource7.inflaterSource;
        gzipSource7.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer14 = gzipSource7.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource20.inflaterSource;
        gzipSource20.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        java.util.zip.Inflater inflater34 = gzipSource33.inflater;
        gzipSource20.inflater = inflater34;
        gzipSource15.inflater = inflater34;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource15.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source38 = gzipSource15.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater40 = null;
        gzipSource39.inflater = inflater40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource39);
        java.util.zip.CRC32 cRC32_43 = gzipSource42.crc;
        gzipSource15.crc = cRC32_43;
        gzipSource7.crc = cRC32_43;
        java.util.zip.CRC32 cRC32_46 = gzipSource7.crc;
        gzipSource0.crc = cRC32_46;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater49 = null;
        gzipSource48.inflater = inflater49;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater52 = null;
        gzipSource51.inflater = inflater52;
        int int54 = gzipSource51.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource55 = gzipSource51.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer56 = null;
        gzipSource51.buffer = okBuffer56;
        gzipSource51.section = (byte) -1;
        java.util.zip.Inflater inflater60 = gzipSource51.inflater;
        java.util.zip.CRC32 cRC32_61 = gzipSource51.crc;
        gzipSource48.crc = cRC32_61;
        gzipSource0.crc = cRC32_61;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_61);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource15.inflaterSource;
        gzipSource15.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline23 = null;
        gzipSource15.require((int) (short) -1, deadline23);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        gzipSource25.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource25);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = null;
        gzipSource25.inflaterSource = inflaterSource32;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource25.inflaterSource;
        gzipSource15.source = gzipSource25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource25);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = null;
        gzipSource25.inflaterSource = inflaterSource37;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer39 = gzipSource25.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource25.buffer;
        gzipSource0.buffer = okBuffer40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_44 = null;
        gzipSource43.crc = cRC32_44;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        java.util.zip.Inflater inflater53 = gzipSource52.inflater;
        gzipSource43.inflater = inflater53;
        gzipSource42.inflater = inflater53;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer56 = gzipSource42.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource57 = null;
        gzipSource42.inflaterSource = inflaterSource57;
        java.util.zip.CRC32 cRC32_59 = gzipSource42.crc;
        gzipSource0.crc = cRC32_59;
        com.squareup.okhttp.internal.bytes.Source source61 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater63 = null;
        gzipSource62.inflater = inflater63;
        int int65 = gzipSource62.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource66 = gzipSource62.inflaterSource;
        gzipSource62.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer69 = gzipSource62.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer69);
        com.squareup.okhttp.internal.bytes.Deadline deadline72 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long73 = gzipSource0.read(okBuffer69, (long) 10, deadline72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source61);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer69);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource11.inflaterSource;
        gzipSource0.source = gzipSource11;
        gzipSource11.section = (short) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        com.squareup.okhttp.internal.bytes.Source source28 = gzipSource21.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource29 = gzipSource21.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer30 = gzipSource21.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource31.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource31.inflaterSource;
        java.util.zip.CRC32 cRC32_35 = gzipSource31.crc;
        java.util.zip.Inflater inflater36 = gzipSource31.inflater;
        gzipSource31.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source41 = gzipSource31.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource48 = gzipSource42.inflaterSource;
        gzipSource31.source = gzipSource42;
        com.squareup.okhttp.internal.bytes.Source source50 = gzipSource31.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater52 = null;
        gzipSource51.inflater = inflater52;
        int int54 = gzipSource51.section;
        gzipSource51.section = (byte) -1;
        java.util.zip.CRC32 cRC32_57 = null;
        gzipSource51.crc = cRC32_57;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_60 = null;
        gzipSource59.crc = cRC32_60;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater63 = null;
        gzipSource62.inflater = inflater63;
        int int65 = gzipSource62.section;
        gzipSource62.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource62);
        java.util.zip.Inflater inflater69 = gzipSource68.inflater;
        gzipSource59.inflater = inflater69;
        gzipSource51.inflater = inflater69;
        gzipSource31.inflater = inflater69;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater74 = null;
        gzipSource73.inflater = inflater74;
        int int76 = gzipSource73.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource77 = gzipSource73.inflaterSource;
        gzipSource73.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline81 = null;
        gzipSource73.require((int) (short) -1, deadline81);
        com.squareup.okhttp.internal.bytes.Source source83 = gzipSource73.source;
        int int84 = gzipSource73.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer85 = null;
        gzipSource73.buffer = okBuffer85;
        gzipSource31.source = okBuffer85;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer88 = gzipSource31.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline90 = null;
        long long91 = gzipSource21.read(okBuffer88, 0L, deadline90);
        com.squareup.okhttp.internal.bytes.Deadline deadline93 = null;
        long long94 = 0L; // flaky: gzipSource11.read(okBuffer88, (long) 3, deadline93);
        com.squareup.okhttp.internal.bytes.Deadline deadline95 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource11.close(deadline95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater69);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 100 + "'", int84 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 0L + "'", long91 == 0L);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + long94 + "' != '" + (-1L) + "'", long94 == (-1L));
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer19 = null;
        gzipSource14.buffer = okBuffer19;
        gzipSource14.section = (byte) -1;
        java.util.zip.Inflater inflater23 = gzipSource14.inflater;
        java.util.zip.CRC32 cRC32_24 = gzipSource14.crc;
        gzipSource11.crc = cRC32_24;
        java.util.zip.CRC32 cRC32_26 = gzipSource11.crc;
        com.squareup.okhttp.internal.bytes.Source source27 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer28 = gzipSource11.buffer;
        gzipSource0.buffer = okBuffer28;
        com.squareup.okhttp.internal.bytes.Deadline deadline30 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer28);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        java.util.zip.CRC32 cRC32_30 = gzipSource19.crc;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline33 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long34 = gzipSource19.seek((byte) -1, deadline33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        java.util.zip.CRC32 cRC32_30 = gzipSource19.crc;
        com.squareup.okhttp.internal.bytes.Source source31 = gzipSource19.source;
        int int32 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_34 = null;
        gzipSource33.crc = cRC32_34;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = gzipSource33.inflaterSource;
        java.util.zip.CRC32 cRC32_37 = gzipSource33.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer38 = null;
        gzipSource33.buffer = okBuffer38;
        gzipSource33.section = ' ';
        gzipSource19.source = gzipSource33;
        com.squareup.okhttp.internal.bytes.Deadline deadline43 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource19.consumeHeader(deadline43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_37);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.Inflater inflater14 = gzipSource13.inflater;
        gzipSource0.inflater = inflater14;
        java.util.zip.CRC32 cRC32_16 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_17 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_17);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource11.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource19.inflater = inflater29;
        gzipSource11.inflater = inflater29;
        gzipSource10.inflater = inflater29;
        gzipSource0.inflater = inflater29;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer34 = gzipSource0.buffer;
        java.util.zip.Inflater inflater35 = gzipSource0.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater35);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_11 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.CRC32 cRC32_16 = gzipSource15.crc;
        gzipSource0.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_16);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        gzipSource0.checkEqual("hi!", (-1), (int) (byte) -1);
        gzipSource0.section = (short) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource13.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer18 = null;
        gzipSource13.buffer = okBuffer18;
        int int20 = gzipSource13.section;
        java.util.zip.Inflater inflater21 = gzipSource13.inflater;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource13.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource23.inflaterSource;
        gzipSource23.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline31 = null;
        gzipSource23.require((int) (short) -1, deadline31);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource40 = null;
        gzipSource33.inflaterSource = inflaterSource40;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = gzipSource33.inflaterSource;
        gzipSource23.source = gzipSource33;
        com.squareup.okhttp.internal.bytes.Source source44 = gzipSource23.source;
        gzipSource13.source = source44;
        gzipSource0.source = gzipSource13;
        int int47 = gzipSource13.section;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource13.checkEqual("", (-1), (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000064 != expected 0xffffffff");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source44);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater15 = gzipSource0.inflater;
        java.lang.Class<?> wildcardClass16 = inflater15.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource21.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = null;
        gzipSource21.buffer = okBuffer26;
        int int28 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.Source source29 = null;
        gzipSource21.source = source29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.CRC32 cRC32_32 = gzipSource21.crc;
        gzipSource10.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer34 = gzipSource10.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource35.inflaterSource;
        java.util.zip.CRC32 cRC32_39 = gzipSource35.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = gzipSource40.inflaterSource;
        gzipSource40.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        gzipSource47.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource47);
        java.util.zip.Inflater inflater54 = gzipSource53.inflater;
        gzipSource40.inflater = inflater54;
        gzipSource35.inflater = inflater54;
        com.squareup.okhttp.internal.bytes.Source source57 = gzipSource35.source;
        int int58 = gzipSource35.section;
        java.util.zip.CRC32 cRC32_59 = gzipSource35.crc;
        com.squareup.okhttp.internal.bytes.Source source60 = gzipSource35.source;
        gzipSource10.source = source60;
        com.squareup.okhttp.internal.bytes.Deadline deadline63 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource10.require((int) (short) 10, deadline63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource44);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source57);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source60);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        gzipSource8.inflater = inflater18;
        gzipSource0.inflater = inflater18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource21.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_27 = null;
        gzipSource26.crc = cRC32_27;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource29 = gzipSource26.inflaterSource;
        java.util.zip.CRC32 cRC32_30 = gzipSource26.crc;
        java.util.zip.Inflater inflater31 = gzipSource26.inflater;
        gzipSource26.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source36 = gzipSource26.source;
        gzipSource21.source = source36;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource21.inflaterSource;
        java.util.zip.CRC32 cRC32_39 = gzipSource21.crc;
        gzipSource0.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.Source source41 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source41);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_14 = null;
        gzipSource13.crc = cRC32_14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        gzipSource16.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        java.util.zip.Inflater inflater23 = gzipSource22.inflater;
        gzipSource13.inflater = inflater23;
        gzipSource12.inflater = inflater23;
        gzipSource0.inflater = inflater23;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource27.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = null;
        gzipSource27.buffer = okBuffer32;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = null;
        gzipSource27.inflaterSource = inflaterSource36;
        com.squareup.okhttp.internal.bytes.Source source38 = gzipSource27.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer39 = null;
        gzipSource27.buffer = okBuffer39;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater46 = null;
        gzipSource45.inflater = inflater46;
        int int48 = gzipSource45.section;
        gzipSource45.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource45);
        java.util.zip.Inflater inflater52 = gzipSource51.inflater;
        gzipSource42.inflater = inflater52;
        gzipSource41.inflater = inflater52;
        gzipSource27.inflater = inflater52;
        gzipSource0.inflater = inflater52;
        gzipSource0.section = (-1);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater60 = null;
        gzipSource59.inflater = inflater60;
        int int62 = gzipSource59.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource63 = gzipSource59.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer64 = null;
        gzipSource59.buffer = okBuffer64;
        gzipSource59.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource68 = null;
        gzipSource59.inflaterSource = inflaterSource68;
        com.squareup.okhttp.internal.bytes.Source source70 = gzipSource59.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer71 = null;
        gzipSource59.buffer = okBuffer71;
        int int73 = gzipSource59.section;
        gzipSource59.section = 100;
        gzipSource0.source = gzipSource59;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater52);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_10 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        gzipSource12.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer19 = gzipSource12.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_21 = null;
        gzipSource20.crc = cRC32_21;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource20.inflaterSource;
        java.util.zip.CRC32 cRC32_24 = gzipSource20.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource29 = gzipSource25.inflaterSource;
        gzipSource25.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        int int35 = gzipSource32.section;
        gzipSource32.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        java.util.zip.Inflater inflater39 = gzipSource38.inflater;
        gzipSource25.inflater = inflater39;
        gzipSource20.inflater = inflater39;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = gzipSource20.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source43 = gzipSource20.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        java.util.zip.CRC32 cRC32_48 = gzipSource47.crc;
        gzipSource20.crc = cRC32_48;
        gzipSource12.crc = cRC32_48;
        java.util.zip.CRC32 cRC32_51 = gzipSource12.crc;
        gzipSource0.crc = cRC32_51;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_51);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer6 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        long long9 = gzipSource0.read(okBuffer6, (long) 100, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        java.util.zip.CRC32 cRC32_14 = gzipSource10.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource15.inflaterSource;
        gzipSource15.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource15.inflater = inflater29;
        gzipSource10.inflater = inflater29;
        gzipSource0.inflater = inflater29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline40 = null;
        gzipSource33.require((int) (byte) -1, deadline40);
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer44 = gzipSource33.buffer;
        gzipSource0.buffer = okBuffer44;
        java.util.zip.CRC32 cRC32_46 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_46);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater3 = null;
        gzipSource2.inflater = inflater3;
        int int5 = gzipSource2.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource2.inflaterSource;
        gzipSource2.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        gzipSource2.require((int) (short) -1, deadline10);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = null;
        gzipSource12.inflaterSource = inflaterSource19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource12.inflaterSource;
        gzipSource2.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = null;
        gzipSource12.inflaterSource = inflaterSource24;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = gzipSource12.buffer;
        gzipSource0.buffer = okBuffer26;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        gzipSource0.checkEqual("hi!", 1, 1);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", 0, 2);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000002 != expected 0x000000");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer26);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.Inflater inflater15 = gzipSource14.inflater;
        gzipSource0.inflater = inflater15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_18 = null;
        gzipSource17.crc = cRC32_18;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource20 = gzipSource17.inflaterSource;
        java.util.zip.CRC32 cRC32_21 = gzipSource17.crc;
        java.util.zip.Inflater inflater22 = gzipSource17.inflater;
        java.util.zip.CRC32 cRC32_23 = null;
        gzipSource17.crc = cRC32_23;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer25 = null;
        gzipSource17.buffer = okBuffer25;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer27 = null;
        gzipSource17.buffer = okBuffer27;
        java.util.zip.Inflater inflater29 = gzipSource17.inflater;
        com.squareup.okhttp.internal.bytes.Source source30 = gzipSource17.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        gzipSource31.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource31);
        com.squareup.okhttp.internal.bytes.Deadline deadline39 = null;
        gzipSource37.require((-1), deadline39);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource41);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource48 = null;
        gzipSource41.inflaterSource = inflaterSource48;
        gzipSource37.source = inflaterSource48;
        java.util.zip.CRC32 cRC32_51 = gzipSource37.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer52 = gzipSource37.buffer;
        java.util.zip.CRC32 cRC32_53 = gzipSource37.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource54.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_60 = null;
        gzipSource59.crc = cRC32_60;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource62 = gzipSource59.inflaterSource;
        java.util.zip.CRC32 cRC32_63 = gzipSource59.crc;
        java.util.zip.Inflater inflater64 = gzipSource59.inflater;
        gzipSource59.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source69 = gzipSource59.source;
        gzipSource54.source = source69;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource71 = gzipSource54.inflaterSource;
        int int72 = gzipSource54.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource54);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource74 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource73);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource75 = gzipSource73.inflaterSource;
        gzipSource37.inflaterSource = inflaterSource75;
        gzipSource17.inflaterSource = inflaterSource75;
        gzipSource0.inflaterSource = inflaterSource75;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_53);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource71);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource75);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = null;
        gzipSource0.inflaterSource = inflaterSource6;
        com.squareup.okhttp.internal.bytes.Deadline deadline9 = null;
        gzipSource0.require((-1), deadline9);
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        gzipSource10.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = gzipSource10.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource19.inflater = inflater29;
        gzipSource18.inflater = inflater29;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource18.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = null;
        gzipSource18.inflaterSource = inflaterSource33;
        java.util.zip.CRC32 cRC32_35 = gzipSource18.crc;
        int int36 = gzipSource18.section;
        gzipSource10.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.Deadline deadline39 = null;
        gzipSource18.require((-1), deadline39);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource41);
        java.util.zip.Inflater inflater48 = gzipSource47.inflater;
        gzipSource47.section = (byte) -1;
        java.util.zip.Inflater inflater51 = gzipSource47.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource47.inflaterSource;
        gzipSource18.source = gzipSource47;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource52);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource2.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource5 = gzipSource2.inflaterSource;
        java.util.zip.CRC32 cRC32_6 = gzipSource2.crc;
        java.util.zip.Inflater inflater7 = gzipSource2.inflater;
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource2.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer10 = gzipSource2.buffer;
        gzipSource0.updateCrc(okBuffer10, (long) '4', (long) (-1));
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        java.util.zip.CRC32 cRC32_18 = null;
        gzipSource15.crc = cRC32_18;
        com.squareup.okhttp.internal.bytes.Source source20 = gzipSource15.source;
        java.util.zip.CRC32 cRC32_21 = gzipSource15.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_23 = null;
        gzipSource22.crc = cRC32_23;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource22.inflaterSource;
        java.util.zip.CRC32 cRC32_26 = gzipSource22.crc;
        java.util.zip.Inflater inflater27 = gzipSource22.inflater;
        gzipSource22.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source32 = gzipSource22.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource33.inflaterSource;
        gzipSource22.source = gzipSource33;
        com.squareup.okhttp.internal.bytes.Source source41 = gzipSource22.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.Inflater inflater46 = gzipSource42.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer47 = gzipSource42.buffer;
        gzipSource22.buffer = okBuffer47;
        gzipSource15.source = okBuffer47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        java.util.zip.Inflater inflater60 = gzipSource59.inflater;
        gzipSource50.inflater = inflater60;
        gzipSource15.inflater = inflater60;
        gzipSource0.inflater = inflater60;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater65 = null;
        gzipSource64.inflater = inflater65;
        int int67 = gzipSource64.section;
        gzipSource64.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource64);
        java.util.zip.CRC32 cRC32_71 = gzipSource70.crc;
        gzipSource0.crc = cRC32_71;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_71);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater7 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_14 = null;
        gzipSource13.crc = cRC32_14;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource13.inflaterSource;
        java.util.zip.CRC32 cRC32_17 = gzipSource13.crc;
        java.util.zip.Inflater inflater18 = gzipSource13.inflater;
        gzipSource13.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource13.source;
        gzipSource8.source = source23;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource8.inflaterSource;
        int int26 = gzipSource8.section;
        gzipSource8.section = 3;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        gzipSource29.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource29);
        java.util.zip.Inflater inflater36 = gzipSource35.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource35);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource37);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        gzipSource40.section = (byte) -1;
        java.util.zip.CRC32 cRC32_46 = null;
        gzipSource40.crc = cRC32_46;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_49 = null;
        gzipSource48.crc = cRC32_49;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater52 = null;
        gzipSource51.inflater = inflater52;
        int int54 = gzipSource51.section;
        gzipSource51.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource51);
        java.util.zip.Inflater inflater58 = gzipSource57.inflater;
        gzipSource48.inflater = inflater58;
        gzipSource40.inflater = inflater58;
        gzipSource39.inflater = inflater58;
        gzipSource38.inflater = inflater58;
        gzipSource8.inflater = inflater58;
        gzipSource0.inflater = inflater58;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater58);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((int) (short) 0, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        gzipSource16.require((-1), deadline18);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = null;
        gzipSource20.inflaterSource = inflaterSource27;
        gzipSource16.source = inflaterSource27;
        java.util.zip.CRC32 cRC32_30 = gzipSource16.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        gzipSource31.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource31);
        java.util.zip.Inflater inflater38 = gzipSource37.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource37);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource39);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        java.util.zip.CRC32 cRC32_48 = null;
        gzipSource42.crc = cRC32_48;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        java.util.zip.Inflater inflater60 = gzipSource59.inflater;
        gzipSource50.inflater = inflater60;
        gzipSource42.inflater = inflater60;
        gzipSource41.inflater = inflater60;
        gzipSource40.inflater = inflater60;
        int int65 = gzipSource40.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater67 = null;
        gzipSource66.inflater = inflater67;
        int int69 = gzipSource66.section;
        gzipSource66.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource66);
        java.util.zip.Inflater inflater73 = gzipSource72.inflater;
        gzipSource72.section = (byte) -1;
        java.util.zip.Inflater inflater76 = gzipSource72.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource77 = gzipSource72.inflaterSource;
        gzipSource40.inflaterSource = inflaterSource77;
        gzipSource16.inflaterSource = inflaterSource77;
        gzipSource6.inflaterSource = inflaterSource77;
        java.lang.Class<?> wildcardClass81 = gzipSource6.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source7 = null;
        gzipSource0.source = source7;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource7.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource12.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource12.inflaterSource;
        java.util.zip.CRC32 cRC32_16 = gzipSource12.crc;
        java.util.zip.Inflater inflater17 = gzipSource12.inflater;
        gzipSource12.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource12.source;
        gzipSource7.source = source22;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource7.inflaterSource;
        int int25 = gzipSource7.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater27 = null;
        gzipSource26.inflater = inflater27;
        int int29 = gzipSource26.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource26.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer31 = null;
        gzipSource26.buffer = okBuffer31;
        int int33 = gzipSource26.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource26.inflaterSource;
        gzipSource7.source = gzipSource26;
        java.util.zip.Inflater inflater36 = gzipSource26.inflater;
        int int37 = gzipSource26.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = gzipSource38.inflaterSource;
        gzipSource38.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater46 = null;
        gzipSource45.inflater = inflater46;
        int int48 = gzipSource45.section;
        gzipSource45.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource45);
        java.util.zip.Inflater inflater52 = gzipSource51.inflater;
        gzipSource38.inflater = inflater52;
        gzipSource26.inflater = inflater52;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        gzipSource55.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource55);
        com.squareup.okhttp.internal.bytes.Deadline deadline63 = null;
        gzipSource61.require((-1), deadline63);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater66 = null;
        gzipSource65.inflater = inflater66;
        int int68 = gzipSource65.section;
        gzipSource65.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource65);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource72 = null;
        gzipSource65.inflaterSource = inflaterSource72;
        gzipSource61.source = inflaterSource72;
        java.util.zip.CRC32 cRC32_75 = gzipSource61.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer76 = gzipSource61.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource77 = gzipSource61.inflaterSource;
        gzipSource26.inflaterSource = inflaterSource77;
        gzipSource0.inflaterSource = inflaterSource77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource0.buffer;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater52);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = null;
        gzipSource0.inflaterSource = inflaterSource6;
        gzipSource0.section = (byte) 2;
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        gzipSource0.require((int) (byte) 0, deadline11);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        gzipSource13.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer19 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline21 = null;
        long long22 = gzipSource13.read(okBuffer19, (long) 100, deadline21);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater29 = null;
        gzipSource28.inflater = inflater29;
        int int31 = gzipSource28.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource28.inflaterSource;
        gzipSource28.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        gzipSource35.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource35);
        java.util.zip.Inflater inflater42 = gzipSource41.inflater;
        gzipSource28.inflater = inflater42;
        gzipSource23.inflater = inflater42;
        gzipSource13.inflater = inflater42;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline53 = null;
        gzipSource46.require((int) (byte) -1, deadline53);
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer57 = gzipSource46.buffer;
        gzipSource13.buffer = okBuffer57;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater60 = null;
        gzipSource59.inflater = inflater60;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater63 = null;
        gzipSource62.inflater = inflater63;
        int int65 = gzipSource62.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource66 = gzipSource62.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer67 = null;
        gzipSource62.buffer = okBuffer67;
        gzipSource62.section = (byte) -1;
        java.util.zip.Inflater inflater71 = gzipSource62.inflater;
        java.util.zip.CRC32 cRC32_72 = gzipSource62.crc;
        gzipSource59.crc = cRC32_72;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource74 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int75 = gzipSource74.section;
        java.util.zip.CRC32 cRC32_76 = gzipSource74.crc;
        gzipSource59.crc = cRC32_76;
        gzipSource13.crc = cRC32_76;
        gzipSource0.crc = cRC32_76;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer57);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_72);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_76);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        int int13 = gzipSource9.section;
        com.squareup.okhttp.internal.bytes.Source source14 = gzipSource9.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = null;
        gzipSource9.inflaterSource = inflaterSource15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource17.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer22 = null;
        gzipSource17.buffer = okBuffer22;
        gzipSource17.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = null;
        gzipSource17.inflaterSource = inflaterSource26;
        com.squareup.okhttp.internal.bytes.Source source28 = gzipSource17.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer29 = null;
        gzipSource17.buffer = okBuffer29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_33 = null;
        gzipSource32.crc = cRC32_33;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        gzipSource35.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource35);
        java.util.zip.Inflater inflater42 = gzipSource41.inflater;
        gzipSource32.inflater = inflater42;
        gzipSource31.inflater = inflater42;
        gzipSource17.inflater = inflater42;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_48 = null;
        gzipSource47.crc = cRC32_48;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater51 = null;
        gzipSource50.inflater = inflater51;
        int int53 = gzipSource50.section;
        gzipSource50.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource50);
        java.util.zip.Inflater inflater57 = gzipSource56.inflater;
        gzipSource47.inflater = inflater57;
        gzipSource46.inflater = inflater57;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource60 = gzipSource46.inflaterSource;
        java.util.zip.Inflater inflater61 = gzipSource46.inflater;
        gzipSource17.inflater = inflater61;
        gzipSource9.inflater = inflater61;
        gzipSource0.inflater = inflater61;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource65 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource65);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer9 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource10.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = gzipSource10.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline13 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource10.close(deadline13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer12);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        java.util.zip.CRC32 cRC32_10 = gzipSource0.crc;
        java.util.zip.Inflater inflater11 = gzipSource0.inflater;
        int int12 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        gzipSource5.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource5);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = null;
        gzipSource5.inflaterSource = inflaterSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        gzipSource14.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer20 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline22 = null;
        long long23 = gzipSource14.read(okBuffer20, (long) 100, deadline22);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_25 = null;
        gzipSource24.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource24.inflaterSource;
        java.util.zip.CRC32 cRC32_28 = gzipSource24.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource29.inflaterSource;
        gzipSource29.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater37 = null;
        gzipSource36.inflater = inflater37;
        int int39 = gzipSource36.section;
        gzipSource36.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource36);
        java.util.zip.Inflater inflater43 = gzipSource42.inflater;
        gzipSource29.inflater = inflater43;
        gzipSource24.inflater = inflater43;
        gzipSource14.inflater = inflater43;
        gzipSource5.inflater = inflater43;
        gzipSource0.inflater = inflater43;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        gzipSource0.section = 97;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater43);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int22 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        java.util.zip.Inflater inflater28 = gzipSource23.inflater;
        java.util.zip.CRC32 cRC32_29 = null;
        gzipSource23.crc = cRC32_29;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer31 = gzipSource23.buffer;
        gzipSource21.updateCrc(okBuffer31, (long) '4', (long) (-1));
        com.squareup.okhttp.internal.bytes.Deadline deadline36 = null;
        long long37 = gzipSource10.read(okBuffer31, (long) 1, deadline36);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater10 = null;
        gzipSource9.inflater = inflater10;
        int int12 = gzipSource9.section;
        gzipSource9.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource9);
        java.util.zip.Inflater inflater16 = gzipSource15.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        java.util.zip.CRC32 cRC32_18 = gzipSource17.crc;
        gzipSource8.crc = cRC32_18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource8.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_23 = null;
        gzipSource22.crc = cRC32_23;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource22.inflaterSource;
        java.util.zip.CRC32 cRC32_26 = gzipSource22.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource27.inflaterSource;
        gzipSource27.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        java.util.zip.Inflater inflater41 = gzipSource40.inflater;
        gzipSource27.inflater = inflater41;
        gzipSource22.inflater = inflater41;
        com.squareup.okhttp.internal.bytes.Source source44 = gzipSource22.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource22.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer46 = gzipSource22.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline48 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long49 = gzipSource8.read(okBuffer46, (-1L), deadline48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: byteCount < 0: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer46);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource10.inflaterSource;
        gzipSource10.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        gzipSource10.require((int) (short) -1, deadline18);
        com.squareup.okhttp.internal.bytes.Source source20 = gzipSource10.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource21.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource35.inflaterSource;
        gzipSource35.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        java.util.zip.Inflater inflater49 = gzipSource48.inflater;
        gzipSource35.inflater = inflater49;
        gzipSource30.inflater = inflater49;
        gzipSource21.inflater = inflater49;
        gzipSource10.inflater = inflater49;
        gzipSource0.inflater = inflater49;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        gzipSource55.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource55);
        java.util.zip.Inflater inflater62 = gzipSource61.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource61);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource63);
        gzipSource0.source = gzipSource63;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer66 = gzipSource63.buffer;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer66);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.Inflater inflater15 = gzipSource14.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        gzipSource0.source = gzipSource16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource22.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer27 = null;
        gzipSource22.buffer = okBuffer27;
        gzipSource22.section = (byte) -1;
        java.util.zip.Inflater inflater31 = gzipSource22.inflater;
        java.util.zip.CRC32 cRC32_32 = gzipSource22.crc;
        gzipSource19.crc = cRC32_32;
        gzipSource16.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer35 = gzipSource16.buffer;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer35);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.Inflater inflater15 = gzipSource14.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        gzipSource0.source = gzipSource16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        gzipSource19.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        com.squareup.okhttp.internal.bytes.Deadline deadline27 = null;
        gzipSource25.require((-1), deadline27);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        gzipSource29.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource29);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = null;
        gzipSource29.inflaterSource = inflaterSource36;
        gzipSource25.source = inflaterSource36;
        java.util.zip.CRC32 cRC32_39 = gzipSource25.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        gzipSource40.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        java.util.zip.Inflater inflater47 = gzipSource46.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource48);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater52 = null;
        gzipSource51.inflater = inflater52;
        int int54 = gzipSource51.section;
        gzipSource51.section = (byte) -1;
        java.util.zip.CRC32 cRC32_57 = null;
        gzipSource51.crc = cRC32_57;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_60 = null;
        gzipSource59.crc = cRC32_60;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater63 = null;
        gzipSource62.inflater = inflater63;
        int int65 = gzipSource62.section;
        gzipSource62.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource62);
        java.util.zip.Inflater inflater69 = gzipSource68.inflater;
        gzipSource59.inflater = inflater69;
        gzipSource51.inflater = inflater69;
        gzipSource50.inflater = inflater69;
        gzipSource49.inflater = inflater69;
        int int74 = gzipSource49.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater76 = null;
        gzipSource75.inflater = inflater76;
        int int78 = gzipSource75.section;
        gzipSource75.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource81 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource75);
        java.util.zip.Inflater inflater82 = gzipSource81.inflater;
        gzipSource81.section = (byte) -1;
        java.util.zip.Inflater inflater85 = gzipSource81.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource86 = gzipSource81.inflaterSource;
        gzipSource49.inflaterSource = inflaterSource86;
        gzipSource25.inflaterSource = inflaterSource86;
        gzipSource16.inflaterSource = inflaterSource86;
        java.util.zip.Inflater inflater90 = gzipSource16.inflater;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource16.checkEqual("", (int) (byte) 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000020 != expected 0x000064");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater69);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater90);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer7 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource8.consumeTrailer(deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource9);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater2 = null;
        gzipSource1.inflater = inflater2;
        int int4 = gzipSource1.section;
        gzipSource1.section = (byte) -1;
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource1.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource1.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource23.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        java.util.zip.Inflater inflater35 = gzipSource30.inflater;
        gzipSource30.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source40 = gzipSource30.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource41.inflaterSource;
        gzipSource30.source = gzipSource41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        java.util.zip.Inflater inflater60 = gzipSource59.inflater;
        gzipSource50.inflater = inflater60;
        gzipSource49.inflater = inflater60;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer63 = gzipSource49.buffer;
        gzipSource30.updateCrc(okBuffer63, (long) '#', (long) (-1));
        gzipSource23.updateCrc(okBuffer63, (long) 0, 0L);
        gzipSource0.buffer = okBuffer63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_72 = null;
        gzipSource71.crc = cRC32_72;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource74 = gzipSource71.inflaterSource;
        java.util.zip.CRC32 cRC32_75 = gzipSource71.crc;
        java.util.zip.Inflater inflater76 = gzipSource71.inflater;
        java.util.zip.CRC32 cRC32_77 = null;
        gzipSource71.crc = cRC32_77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer79 = null;
        gzipSource71.buffer = okBuffer79;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer81 = null;
        gzipSource71.buffer = okBuffer81;
        gzipSource0.source = gzipSource71;
        com.squareup.okhttp.internal.bytes.Source source84 = gzipSource0.source;
        java.util.zip.Inflater inflater85 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline87 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long88 = gzipSource0.seek((byte) 3, deadline87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater85);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        gzipSource0.require((int) (byte) -1, deadline7);
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long13 = gzipSource0.seek((byte) 3, deadline12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource10.inflaterSource;
        gzipSource10.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        gzipSource10.require((int) (short) -1, deadline18);
        com.squareup.okhttp.internal.bytes.Source source20 = gzipSource10.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource21.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource35.inflaterSource;
        gzipSource35.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        java.util.zip.Inflater inflater49 = gzipSource48.inflater;
        gzipSource35.inflater = inflater49;
        gzipSource30.inflater = inflater49;
        gzipSource21.inflater = inflater49;
        gzipSource10.inflater = inflater49;
        gzipSource0.inflater = inflater49;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource59 = gzipSource55.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = null;
        gzipSource55.buffer = okBuffer60;
        int int62 = gzipSource55.section;
        com.squareup.okhttp.internal.bytes.Source source63 = null;
        gzipSource55.source = source63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource55);
        java.util.zip.CRC32 cRC32_66 = gzipSource55.crc;
        gzipSource0.crc = cRC32_66;
        com.squareup.okhttp.internal.bytes.Deadline deadline68 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource59);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_66);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        gzipSource0.source = gzipSource6;
        int int10 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", (int) (short) -1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000001 != expected 0xffffffff");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source11);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", (int) (byte) 0, (int) (byte) 2);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000002 != expected 0x000000");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource22.inflaterSource;
        java.util.zip.Inflater inflater27 = gzipSource22.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource22.inflaterSource;
        java.util.zip.Inflater inflater29 = gzipSource22.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        gzipSource31.section = (byte) -1;
        java.util.zip.CRC32 cRC32_37 = null;
        gzipSource31.crc = cRC32_37;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource39.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        java.util.zip.Inflater inflater49 = gzipSource48.inflater;
        gzipSource39.inflater = inflater49;
        gzipSource31.inflater = inflater49;
        gzipSource30.inflater = inflater49;
        gzipSource22.inflater = inflater49;
        gzipSource21.source = gzipSource22;
        java.util.zip.Inflater inflater55 = gzipSource22.inflater;
        gzipSource22.checkEqual("", 2, (int) (byte) 2);
        com.squareup.okhttp.internal.bytes.Deadline deadline60 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource22.close(deadline60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater55);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        gzipSource8.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        gzipSource15.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        java.util.zip.Inflater inflater22 = gzipSource21.inflater;
        gzipSource8.inflater = inflater22;
        gzipSource0.inflater = inflater22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_26 = null;
        gzipSource25.crc = cRC32_26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource25.inflaterSource;
        java.util.zip.CRC32 cRC32_29 = gzipSource25.crc;
        java.util.zip.Inflater inflater30 = gzipSource25.inflater;
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource25.crc = cRC32_31;
        java.util.zip.Inflater inflater33 = gzipSource25.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource34.inflaterSource;
        gzipSource34.section = (byte) 100;
        int int41 = gzipSource34.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        java.util.zip.CRC32 cRC32_47 = null;
        gzipSource42.crc = cRC32_47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_50 = null;
        gzipSource49.crc = cRC32_50;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource49.inflaterSource;
        java.util.zip.CRC32 cRC32_53 = gzipSource49.crc;
        java.util.zip.Inflater inflater54 = gzipSource49.inflater;
        gzipSource49.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source59 = gzipSource49.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater61 = null;
        gzipSource60.inflater = inflater61;
        int int63 = gzipSource60.section;
        gzipSource60.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource66 = gzipSource60.inflaterSource;
        gzipSource49.source = gzipSource60;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_70 = null;
        gzipSource69.crc = cRC32_70;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater73 = null;
        gzipSource72.inflater = inflater73;
        int int75 = gzipSource72.section;
        gzipSource72.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource78 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource72);
        java.util.zip.Inflater inflater79 = gzipSource78.inflater;
        gzipSource69.inflater = inflater79;
        gzipSource68.inflater = inflater79;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer82 = gzipSource68.buffer;
        gzipSource49.updateCrc(okBuffer82, (long) '#', (long) (-1));
        gzipSource42.updateCrc(okBuffer82, (long) 0, 0L);
        gzipSource34.buffer = okBuffer82;
        gzipSource25.buffer = okBuffer82;
        gzipSource0.buffer = okBuffer82;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource92 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer93 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline94 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source59);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource66);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer93);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer9 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        java.util.zip.CRC32 cRC32_14 = gzipSource10.crc;
        java.util.zip.Inflater inflater15 = gzipSource10.inflater;
        gzipSource10.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source20 = gzipSource10.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource21.inflaterSource;
        gzipSource10.source = gzipSource21;
        com.squareup.okhttp.internal.bytes.Source source29 = gzipSource10.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource30.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_39 = null;
        gzipSource38.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource41);
        java.util.zip.Inflater inflater48 = gzipSource47.inflater;
        gzipSource38.inflater = inflater48;
        gzipSource30.inflater = inflater48;
        gzipSource10.inflater = inflater48;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater53 = null;
        gzipSource52.inflater = inflater53;
        int int55 = gzipSource52.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = gzipSource52.inflaterSource;
        gzipSource52.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline60 = null;
        gzipSource52.require((int) (short) -1, deadline60);
        com.squareup.okhttp.internal.bytes.Source source62 = gzipSource52.source;
        int int63 = gzipSource52.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer64 = null;
        gzipSource52.buffer = okBuffer64;
        gzipSource10.source = okBuffer64;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer67 = gzipSource10.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline69 = null;
        long long70 = gzipSource0.read(okBuffer67, 0L, deadline69);
        java.util.zip.Inflater inflater71 = gzipSource0.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater48);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater71);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline5 = null;
        gzipSource0.require((-1), deadline5);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) 0, deadline8);
        java.lang.Class<?> wildcardClass10 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        java.util.zip.Inflater inflater10 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_12 = gzipSource11.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        gzipSource13.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource13);
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource13.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_23 = null;
        gzipSource22.crc = cRC32_23;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource22.inflaterSource;
        java.util.zip.CRC32 cRC32_26 = gzipSource22.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource27.inflaterSource;
        gzipSource27.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        java.util.zip.Inflater inflater41 = gzipSource40.inflater;
        gzipSource27.inflater = inflater41;
        gzipSource22.inflater = inflater41;
        gzipSource13.inflater = inflater41;
        java.util.zip.CRC32 cRC32_45 = gzipSource13.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        java.util.zip.Inflater inflater53 = gzipSource52.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource52);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource54);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater58 = null;
        gzipSource57.inflater = inflater58;
        int int60 = gzipSource57.section;
        gzipSource57.section = (byte) -1;
        java.util.zip.CRC32 cRC32_63 = null;
        gzipSource57.crc = cRC32_63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_66 = null;
        gzipSource65.crc = cRC32_66;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater69 = null;
        gzipSource68.inflater = inflater69;
        int int71 = gzipSource68.section;
        gzipSource68.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource74 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource68);
        java.util.zip.Inflater inflater75 = gzipSource74.inflater;
        gzipSource65.inflater = inflater75;
        gzipSource57.inflater = inflater75;
        gzipSource56.inflater = inflater75;
        gzipSource55.inflater = inflater75;
        gzipSource13.inflater = inflater75;
        java.util.zip.Inflater inflater81 = gzipSource13.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource82 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater83 = null;
        gzipSource82.inflater = inflater83;
        int int85 = gzipSource82.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource86 = gzipSource82.inflaterSource;
        gzipSource82.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer89 = gzipSource82.buffer;
        gzipSource13.buffer = okBuffer89;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer91 = gzipSource13.buffer;
        gzipSource11.source = gzipSource13;
        com.squareup.okhttp.internal.bytes.Deadline deadline93 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource11.consumeTrailer(deadline93);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_45);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater53);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater81);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer91);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource3.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource3.buffer = okBuffer8;
        gzipSource3.section = (byte) -1;
        java.util.zip.Inflater inflater12 = gzipSource3.inflater;
        java.util.zip.CRC32 cRC32_13 = gzipSource3.crc;
        gzipSource0.crc = cRC32_13;
        java.util.zip.CRC32 cRC32_15 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Source source16 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = null;
        gzipSource17.inflaterSource = inflaterSource19;
        com.squareup.okhttp.internal.bytes.Source source21 = gzipSource17.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer22 = gzipSource17.buffer;
        gzipSource0.buffer = okBuffer22;
        com.squareup.okhttp.internal.bytes.Deadline deadline25 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (byte) 3, deadline25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer22);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        java.util.zip.Inflater inflater2 = gzipSource0.inflater;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater2);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_30 = null;
        gzipSource29.crc = cRC32_30;
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource29.crc = cRC32_32;
        gzipSource0.source = gzipSource29;
        int int35 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline36 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater4 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer6 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        int int11 = gzipSource7.section;
        com.squareup.okhttp.internal.bytes.Source source12 = gzipSource7.source;
        gzipSource7.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer15 = gzipSource7.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer16 = gzipSource7.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        com.squareup.okhttp.internal.bytes.Source source18 = gzipSource17.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer19 = gzipSource17.buffer;
        gzipSource0.updateCrc(okBuffer19, (long) (byte) 100, 0L);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource23.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer28 = null;
        gzipSource23.buffer = okBuffer28;
        gzipSource23.section = (byte) -1;
        gzipSource23.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource23);
        gzipSource23.section = (byte) 1;
        java.util.zip.CRC32 cRC32_37 = gzipSource23.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource44.section = (byte) -1;
        java.util.zip.Inflater inflater48 = gzipSource44.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater50 = null;
        gzipSource49.inflater = inflater50;
        int int52 = gzipSource49.section;
        gzipSource49.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource49);
        java.util.zip.Inflater inflater56 = gzipSource55.inflater;
        gzipSource55.section = (byte) -1;
        java.util.zip.Inflater inflater59 = gzipSource55.inflater;
        gzipSource44.inflater = inflater59;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource61 = gzipSource44.inflaterSource;
        gzipSource23.inflaterSource = inflaterSource61;
        gzipSource0.inflaterSource = inflaterSource61;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater48);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource61);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        int int30 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource31.inflaterSource;
        gzipSource31.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource31.inflater = inflater45;
        gzipSource19.inflater = inflater45;
        com.squareup.okhttp.internal.bytes.Deadline deadline49 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource19.require((int) (byte) 1, deadline49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_33 = null;
        gzipSource32.crc = cRC32_33;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = null;
        gzipSource32.inflaterSource = inflaterSource35;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater38 = null;
        gzipSource37.inflater = inflater38;
        int int40 = gzipSource37.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource37.inflaterSource;
        gzipSource37.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline45 = null;
        gzipSource37.require((int) (short) -1, deadline45);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        gzipSource47.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource47);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource54 = null;
        gzipSource47.inflaterSource = inflaterSource54;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = gzipSource47.inflaterSource;
        gzipSource37.source = gzipSource47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource47);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource59 = null;
        gzipSource47.inflaterSource = inflaterSource59;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer61 = gzipSource47.buffer;
        gzipSource32.updateCrc(okBuffer61, 1L, (long) (byte) 0);
        gzipSource32.section = 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int68 = gzipSource67.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater70 = null;
        gzipSource69.inflater = inflater70;
        int int72 = gzipSource69.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource73 = gzipSource69.inflaterSource;
        gzipSource69.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline77 = null;
        gzipSource69.require((int) (short) -1, deadline77);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource79 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater80 = null;
        gzipSource79.inflater = inflater80;
        int int82 = gzipSource79.section;
        gzipSource79.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource85 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource79);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource86 = null;
        gzipSource79.inflaterSource = inflaterSource86;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource88 = gzipSource79.inflaterSource;
        gzipSource69.source = gzipSource79;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource90 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource79);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource91 = null;
        gzipSource79.inflaterSource = inflaterSource91;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer93 = gzipSource79.buffer;
        gzipSource67.buffer = okBuffer93;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer95 = gzipSource67.buffer;
        gzipSource32.buffer = okBuffer95;
        gzipSource0.buffer = okBuffer95;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer61);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource73);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer95);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        gzipSource0.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        gzipSource12.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        gzipSource19.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        java.util.zip.Inflater inflater26 = gzipSource25.inflater;
        gzipSource12.inflater = inflater26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = null;
        gzipSource12.inflaterSource = inflaterSource28;
        gzipSource0.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource31.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        java.util.zip.Inflater inflater41 = gzipSource40.inflater;
        gzipSource31.inflater = inflater41;
        java.util.zip.CRC32 cRC32_43 = gzipSource31.crc;
        com.squareup.okhttp.internal.bytes.Source source44 = gzipSource31.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_47 = null;
        gzipSource46.crc = cRC32_47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater50 = null;
        gzipSource49.inflater = inflater50;
        int int52 = gzipSource49.section;
        gzipSource49.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource49);
        java.util.zip.Inflater inflater56 = gzipSource55.inflater;
        gzipSource46.inflater = inflater56;
        gzipSource45.inflater = inflater56;
        gzipSource31.inflater = inflater56;
        gzipSource12.inflater = inflater56;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source44);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater56);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((int) (short) 0, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        gzipSource16.require((-1), deadline18);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = null;
        gzipSource20.inflaterSource = inflaterSource27;
        gzipSource16.source = inflaterSource27;
        java.util.zip.CRC32 cRC32_30 = gzipSource16.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        gzipSource31.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource31);
        java.util.zip.Inflater inflater38 = gzipSource37.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource37);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource39);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        java.util.zip.CRC32 cRC32_48 = null;
        gzipSource42.crc = cRC32_48;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        java.util.zip.Inflater inflater60 = gzipSource59.inflater;
        gzipSource50.inflater = inflater60;
        gzipSource42.inflater = inflater60;
        gzipSource41.inflater = inflater60;
        gzipSource40.inflater = inflater60;
        int int65 = gzipSource40.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater67 = null;
        gzipSource66.inflater = inflater67;
        int int69 = gzipSource66.section;
        gzipSource66.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource66);
        java.util.zip.Inflater inflater73 = gzipSource72.inflater;
        gzipSource72.section = (byte) -1;
        java.util.zip.Inflater inflater76 = gzipSource72.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource77 = gzipSource72.inflaterSource;
        gzipSource40.inflaterSource = inflaterSource77;
        gzipSource16.inflaterSource = inflaterSource77;
        gzipSource6.inflaterSource = inflaterSource77;
        int int81 = gzipSource6.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource77);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource11.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource11.inflaterSource;
        java.util.zip.CRC32 cRC32_15 = gzipSource11.crc;
        java.util.zip.Inflater inflater16 = gzipSource11.inflater;
        gzipSource11.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source21 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource22.inflaterSource;
        gzipSource11.source = gzipSource22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource31.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        java.util.zip.Inflater inflater41 = gzipSource40.inflater;
        gzipSource31.inflater = inflater41;
        gzipSource30.inflater = inflater41;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer44 = gzipSource30.buffer;
        gzipSource11.updateCrc(okBuffer44, (long) '#', (long) (-1));
        gzipSource0.buffer = okBuffer44;
        java.util.zip.Inflater inflater49 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline51 = null;
        gzipSource0.require(0, deadline51);
        com.squareup.okhttp.internal.bytes.Source source53 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source54 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_56 = null;
        gzipSource55.crc = cRC32_56;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource55.inflaterSource;
        java.util.zip.Inflater inflater59 = gzipSource55.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = gzipSource55.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer61 = gzipSource55.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline63 = null;
        long long64 = 0L; // flaky: gzipSource0.read(okBuffer61, (long) ' ', deadline63);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer61);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource3.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource3.buffer = okBuffer8;
        gzipSource3.section = (byte) -1;
        java.util.zip.Inflater inflater12 = gzipSource3.inflater;
        java.util.zip.CRC32 cRC32_13 = gzipSource3.crc;
        gzipSource0.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource15.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer20 = null;
        gzipSource15.buffer = okBuffer20;
        int int22 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.Source source23 = null;
        gzipSource15.source = source23;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        java.util.zip.CRC32 cRC32_26 = gzipSource15.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        java.util.zip.CRC32 cRC32_31 = gzipSource30.crc;
        gzipSource15.crc = cRC32_31;
        gzipSource0.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_35 = null;
        gzipSource34.crc = cRC32_35;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource34.inflaterSource;
        java.util.zip.CRC32 cRC32_38 = gzipSource34.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater40 = null;
        gzipSource39.inflater = inflater40;
        int int42 = gzipSource39.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource39.inflaterSource;
        gzipSource39.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        java.util.zip.Inflater inflater53 = gzipSource52.inflater;
        gzipSource39.inflater = inflater53;
        gzipSource34.inflater = inflater53;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = gzipSource34.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source57 = gzipSource34.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource58);
        java.util.zip.CRC32 cRC32_62 = gzipSource61.crc;
        gzipSource34.crc = cRC32_62;
        java.util.zip.CRC32 cRC32_64 = gzipSource34.crc;
        gzipSource0.crc = cRC32_64;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource66 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source67 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source67);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater4 = gzipSource0.inflater;
        int int5 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        gzipSource8.inflater = inflater18;
        gzipSource7.inflater = inflater18;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource7.inflaterSource;
        java.util.zip.Inflater inflater22 = gzipSource7.inflater;
        gzipSource0.inflater = inflater22;
        gzipSource0.section = (byte) 10;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater22);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        gzipSource6.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long13 = gzipSource6.seek((byte) 2, deadline12);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = null;
        gzipSource0.inflaterSource = inflaterSource10;
        java.util.zip.CRC32 cRC32_12 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        gzipSource13.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource13);
        java.util.zip.Inflater inflater20 = gzipSource19.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        java.util.zip.CRC32 cRC32_22 = gzipSource21.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        int int27 = gzipSource23.section;
        com.squareup.okhttp.internal.bytes.Source source28 = gzipSource23.source;
        gzipSource23.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer31 = gzipSource23.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource23.buffer;
        gzipSource21.buffer = okBuffer32;
        gzipSource0.buffer = okBuffer32;
        com.squareup.okhttp.internal.bytes.Deadline deadline35 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer32);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        java.util.zip.CRC32 cRC32_21 = gzipSource19.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline23 = null;
        gzipSource19.require((int) (short) -1, deadline23);
        com.squareup.okhttp.internal.bytes.Deadline deadline26 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long27 = gzipSource19.seek((byte) 0, deadline26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_21);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        java.util.zip.CRC32 cRC32_30 = gzipSource19.crc;
        com.squareup.okhttp.internal.bytes.Source source31 = gzipSource19.source;
        int int32 = gzipSource19.section;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource19.checkEqual("", (int) (short) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000000 != expected 0xffffffff");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        gzipSource10.checkEqual("hi!", (-1), (int) (byte) -1);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater23 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_25 = null;
        gzipSource24.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource24.inflaterSource;
        java.util.zip.CRC32 cRC32_28 = gzipSource24.crc;
        java.util.zip.Inflater inflater29 = gzipSource24.inflater;
        java.util.zip.CRC32 cRC32_30 = null;
        gzipSource24.crc = cRC32_30;
        java.util.zip.Inflater inflater32 = gzipSource24.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource33.inflaterSource;
        gzipSource33.section = (byte) 100;
        int int40 = gzipSource33.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_42 = null;
        gzipSource41.crc = cRC32_42;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = gzipSource41.inflaterSource;
        java.util.zip.CRC32 cRC32_45 = gzipSource41.crc;
        java.util.zip.CRC32 cRC32_46 = null;
        gzipSource41.crc = cRC32_46;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_49 = null;
        gzipSource48.crc = cRC32_49;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource48.inflaterSource;
        java.util.zip.CRC32 cRC32_52 = gzipSource48.crc;
        java.util.zip.Inflater inflater53 = gzipSource48.inflater;
        gzipSource48.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source58 = gzipSource48.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater60 = null;
        gzipSource59.inflater = inflater60;
        int int62 = gzipSource59.section;
        gzipSource59.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource65 = gzipSource59.inflaterSource;
        gzipSource48.source = gzipSource59;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_69 = null;
        gzipSource68.crc = cRC32_69;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater72 = null;
        gzipSource71.inflater = inflater72;
        int int74 = gzipSource71.section;
        gzipSource71.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource77 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource71);
        java.util.zip.Inflater inflater78 = gzipSource77.inflater;
        gzipSource68.inflater = inflater78;
        gzipSource67.inflater = inflater78;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer81 = gzipSource67.buffer;
        gzipSource48.updateCrc(okBuffer81, (long) '#', (long) (-1));
        gzipSource41.updateCrc(okBuffer81, (long) 0, 0L);
        gzipSource33.buffer = okBuffer81;
        gzipSource24.buffer = okBuffer81;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource90 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer81);
        gzipSource0.source = okBuffer81;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource65);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer81);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater2 = null;
        gzipSource1.inflater = inflater2;
        int int4 = gzipSource1.section;
        gzipSource1.section = (byte) -1;
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource1.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource1.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource23.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        java.util.zip.Inflater inflater35 = gzipSource30.inflater;
        gzipSource30.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source40 = gzipSource30.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource41.inflaterSource;
        gzipSource30.source = gzipSource41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        java.util.zip.Inflater inflater60 = gzipSource59.inflater;
        gzipSource50.inflater = inflater60;
        gzipSource49.inflater = inflater60;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer63 = gzipSource49.buffer;
        gzipSource30.updateCrc(okBuffer63, (long) '#', (long) (-1));
        gzipSource23.updateCrc(okBuffer63, (long) 0, 0L);
        gzipSource0.buffer = okBuffer63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_72 = null;
        gzipSource71.crc = cRC32_72;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource74 = gzipSource71.inflaterSource;
        java.util.zip.CRC32 cRC32_75 = gzipSource71.crc;
        java.util.zip.Inflater inflater76 = gzipSource71.inflater;
        java.util.zip.CRC32 cRC32_77 = null;
        gzipSource71.crc = cRC32_77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer79 = null;
        gzipSource71.buffer = okBuffer79;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer81 = null;
        gzipSource71.buffer = okBuffer81;
        gzipSource0.source = gzipSource71;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource84 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline85 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater76);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_30 = null;
        gzipSource29.crc = cRC32_30;
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource29.crc = cRC32_32;
        gzipSource0.source = gzipSource29;
        int int35 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater37 = null;
        gzipSource36.inflater = inflater37;
        int int39 = gzipSource36.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource40 = gzipSource36.inflaterSource;
        gzipSource36.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline44 = null;
        gzipSource36.require((int) (short) -1, deadline44);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource53 = null;
        gzipSource46.inflaterSource = inflaterSource53;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource55 = gzipSource46.inflaterSource;
        gzipSource36.source = gzipSource46;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = null;
        gzipSource46.inflaterSource = inflaterSource58;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = gzipSource46.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer61 = gzipSource46.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline63 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long64 = gzipSource0.read(okBuffer61, (long) (byte) 3, deadline63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer61);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        gzipSource10.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = gzipSource10.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource19.inflater = inflater29;
        gzipSource18.inflater = inflater29;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource18.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = null;
        gzipSource18.inflaterSource = inflaterSource33;
        java.util.zip.CRC32 cRC32_35 = gzipSource18.crc;
        int int36 = gzipSource18.section;
        gzipSource10.source = gzipSource18;
        gzipSource10.section = '4';
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 2;
        java.util.zip.Inflater inflater11 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater14 = gzipSource0.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater14);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        gzipSource0.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        gzipSource12.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        gzipSource19.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        java.util.zip.Inflater inflater26 = gzipSource25.inflater;
        gzipSource12.inflater = inflater26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = null;
        gzipSource12.inflaterSource = inflaterSource28;
        gzipSource0.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource31.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource31.inflaterSource;
        java.util.zip.CRC32 cRC32_35 = gzipSource31.crc;
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource31.crc = cRC32_36;
        gzipSource31.section = (-1);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        gzipSource40.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        com.squareup.okhttp.internal.bytes.Deadline deadline48 = null;
        gzipSource46.require((-1), deadline48);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater51 = null;
        gzipSource50.inflater = inflater51;
        int int53 = gzipSource50.section;
        gzipSource50.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource50);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource57 = null;
        gzipSource50.inflaterSource = inflaterSource57;
        gzipSource46.source = inflaterSource57;
        java.util.zip.CRC32 cRC32_60 = gzipSource46.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer61 = gzipSource46.buffer;
        int int62 = gzipSource46.section;
        java.util.zip.CRC32 cRC32_63 = gzipSource46.crc;
        com.squareup.okhttp.internal.bytes.Source source64 = gzipSource46.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater66 = null;
        gzipSource65.inflater = inflater66;
        int int68 = gzipSource65.section;
        gzipSource65.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource65);
        com.squareup.okhttp.internal.bytes.Deadline deadline73 = null;
        gzipSource71.require((-1), deadline73);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater76 = null;
        gzipSource75.inflater = inflater76;
        int int78 = gzipSource75.section;
        gzipSource75.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource81 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource75);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource82 = null;
        gzipSource75.inflaterSource = inflaterSource82;
        gzipSource71.source = inflaterSource82;
        java.util.zip.CRC32 cRC32_85 = gzipSource71.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer86 = gzipSource71.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource87 = gzipSource71.inflaterSource;
        gzipSource46.inflaterSource = inflaterSource87;
        gzipSource31.inflaterSource = inflaterSource87;
        gzipSource12.inflaterSource = inflaterSource87;
        gzipSource12.section = (short) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline94 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long95 = gzipSource12.seek((byte) 1, deadline94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer61);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source64);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource87);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = null;
        gzipSource0.buffer = okBuffer12;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer14 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource0.source;
        java.util.zip.Inflater inflater16 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (byte) 10, deadline18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater16);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource10.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource18.inflater = inflater28;
        gzipSource10.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_33 = null;
        gzipSource32.crc = cRC32_33;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource32.inflaterSource;
        java.util.zip.CRC32 cRC32_36 = gzipSource32.crc;
        java.util.zip.Inflater inflater37 = gzipSource32.inflater;
        java.util.zip.CRC32 cRC32_38 = null;
        gzipSource32.crc = cRC32_38;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = null;
        gzipSource32.buffer = okBuffer40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer49 = gzipSource42.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline51 = null;
        long long52 = gzipSource32.read(okBuffer49, (long) (short) 0, deadline51);
        gzipSource0.updateCrc(okBuffer49, (long) 2, (long) 0);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", (int) '#', (int) (byte) 2);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000002 != expected 0x000023");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = null;
        gzipSource10.inflaterSource = inflaterSource14;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource10.inflaterSource;
        int int17 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.Source source18 = gzipSource10.source;
        com.squareup.okhttp.internal.bytes.Source source19 = gzipSource10.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_21 = null;
        gzipSource20.crc = cRC32_21;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource20.inflaterSource;
        gzipSource10.source = gzipSource20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource29 = gzipSource25.inflaterSource;
        gzipSource25.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline33 = null;
        gzipSource25.require((int) (short) -1, deadline33);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        gzipSource35.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource35);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = null;
        gzipSource35.inflaterSource = inflaterSource42;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = gzipSource35.inflaterSource;
        gzipSource25.source = gzipSource35;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource35);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = null;
        gzipSource35.inflaterSource = inflaterSource47;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer49 = gzipSource35.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer50 = gzipSource35.buffer;
        gzipSource10.buffer = okBuffer50;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer50);
        gzipSource0.buffer = okBuffer50;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer50);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater4 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer6 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        int int11 = gzipSource7.section;
        com.squareup.okhttp.internal.bytes.Source source12 = gzipSource7.source;
        gzipSource7.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer15 = gzipSource7.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer16 = gzipSource7.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        com.squareup.okhttp.internal.bytes.Source source18 = gzipSource17.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer19 = gzipSource17.buffer;
        gzipSource0.updateCrc(okBuffer19, (long) (byte) 100, 0L);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource23.inflaterSource;
        java.util.zip.Inflater inflater28 = gzipSource23.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource29 = gzipSource23.inflaterSource;
        java.util.zip.Inflater inflater30 = gzipSource23.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        int int35 = gzipSource32.section;
        gzipSource32.section = (byte) -1;
        java.util.zip.CRC32 cRC32_38 = null;
        gzipSource32.crc = cRC32_38;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_41 = null;
        gzipSource40.crc = cRC32_41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater44 = null;
        gzipSource43.inflater = inflater44;
        int int46 = gzipSource43.section;
        gzipSource43.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource43);
        java.util.zip.Inflater inflater50 = gzipSource49.inflater;
        gzipSource40.inflater = inflater50;
        gzipSource32.inflater = inflater50;
        gzipSource31.inflater = inflater50;
        gzipSource23.inflater = inflater50;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_56 = null;
        gzipSource55.crc = cRC32_56;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource55.inflaterSource;
        java.util.zip.CRC32 cRC32_59 = gzipSource55.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater61 = null;
        gzipSource60.inflater = inflater61;
        int int63 = gzipSource60.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource64 = gzipSource60.inflaterSource;
        gzipSource60.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater68 = null;
        gzipSource67.inflater = inflater68;
        int int70 = gzipSource67.section;
        gzipSource67.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource67);
        java.util.zip.Inflater inflater74 = gzipSource73.inflater;
        gzipSource60.inflater = inflater74;
        gzipSource55.inflater = inflater74;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource77 = gzipSource55.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source78 = gzipSource55.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource79 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater80 = null;
        gzipSource79.inflater = inflater80;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource82 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource79);
        java.util.zip.CRC32 cRC32_83 = gzipSource82.crc;
        gzipSource55.crc = cRC32_83;
        gzipSource23.crc = cRC32_83;
        gzipSource0.crc = cRC32_83;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_59);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource64);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_83);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.Inflater inflater40 = gzipSource39.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource39);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource41);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        java.util.zip.CRC32 cRC32_50 = null;
        gzipSource44.crc = cRC32_50;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_53 = null;
        gzipSource52.crc = cRC32_53;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        gzipSource55.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource55);
        java.util.zip.Inflater inflater62 = gzipSource61.inflater;
        gzipSource52.inflater = inflater62;
        gzipSource44.inflater = inflater62;
        gzipSource43.inflater = inflater62;
        gzipSource42.inflater = inflater62;
        gzipSource0.inflater = inflater62;
        java.util.zip.Inflater inflater68 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater70 = null;
        gzipSource69.inflater = inflater70;
        int int72 = gzipSource69.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource73 = gzipSource69.inflaterSource;
        gzipSource69.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer76 = gzipSource69.buffer;
        gzipSource0.buffer = okBuffer76;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource78 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer76);
        int int79 = gzipSource78.section;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource78.checkEqual("", (int) ' ', 97);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000061 != expected 0x000020");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater68);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer76);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int79 + "' != '" + 100 + "'", int79 == 100);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource3.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource3.buffer = okBuffer8;
        gzipSource3.section = (byte) -1;
        java.util.zip.Inflater inflater12 = gzipSource3.inflater;
        java.util.zip.CRC32 cRC32_13 = gzipSource3.crc;
        gzipSource0.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int16 = gzipSource15.section;
        java.util.zip.CRC32 cRC32_17 = gzipSource15.crc;
        gzipSource0.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource20.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_26 = null;
        gzipSource25.crc = cRC32_26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource25.inflaterSource;
        java.util.zip.CRC32 cRC32_29 = gzipSource25.crc;
        java.util.zip.Inflater inflater30 = gzipSource25.inflater;
        gzipSource25.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source35 = gzipSource25.source;
        gzipSource20.source = source35;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource20.inflaterSource;
        int int38 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater40 = null;
        gzipSource39.inflater = inflater40;
        int int42 = gzipSource39.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource39.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer44 = null;
        gzipSource39.buffer = okBuffer44;
        int int46 = gzipSource39.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource39.inflaterSource;
        gzipSource20.source = gzipSource39;
        java.util.zip.Inflater inflater49 = gzipSource39.inflater;
        int int50 = gzipSource39.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource39);
        com.squareup.okhttp.internal.bytes.Deadline deadline53 = null;
        gzipSource51.require((int) (byte) 0, deadline53);
        java.util.zip.CRC32 cRC32_55 = gzipSource51.crc;
        gzipSource0.crc = cRC32_55;
        int int57 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_55);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = null;
        gzipSource0.buffer = okBuffer12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        java.util.zip.Inflater inflater25 = gzipSource24.inflater;
        gzipSource15.inflater = inflater25;
        gzipSource14.inflater = inflater25;
        gzipSource0.inflater = inflater25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource29.inflaterSource;
        gzipSource29.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater37 = null;
        gzipSource36.inflater = inflater37;
        int int39 = gzipSource36.section;
        gzipSource36.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource36);
        java.util.zip.Inflater inflater43 = gzipSource42.inflater;
        gzipSource29.inflater = inflater43;
        gzipSource0.inflater = inflater43;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater43);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        gzipSource6.checkEqual("", (int) (short) 10, (int) (short) 10);
        gzipSource6.checkEqual("hi!", (int) (short) 0, (int) (byte) 0);
        java.util.zip.Inflater inflater29 = gzipSource6.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        gzipSource0.checkEqual("hi!", (-1), (int) (byte) -1);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource12.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource12.inflaterSource;
        java.util.zip.CRC32 cRC32_16 = gzipSource12.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource17.inflaterSource;
        gzipSource17.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource17.inflater = inflater31;
        gzipSource12.inflater = inflater31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource12.inflaterSource;
        java.util.zip.Inflater inflater35 = gzipSource12.inflater;
        gzipSource0.inflater = inflater35;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater38 = null;
        gzipSource37.inflater = inflater38;
        int int40 = gzipSource37.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource37.inflaterSource;
        gzipSource37.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline45 = null;
        gzipSource37.require((int) (short) -1, deadline45);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        gzipSource47.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource47);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource54 = null;
        gzipSource47.inflaterSource = inflaterSource54;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = gzipSource47.inflaterSource;
        gzipSource37.source = gzipSource47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource47);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource59 = null;
        gzipSource47.inflaterSource = inflaterSource59;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer61 = gzipSource47.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer62 = gzipSource47.buffer;
        gzipSource0.buffer = okBuffer62;
        gzipSource0.section = (short) -1;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer62);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (byte) 2, deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.CRC32 cRC32_28 = gzipSource27.crc;
        gzipSource0.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = gzipSource30.inflaterSource;
        gzipSource30.section = '4';
        gzipSource0.source = gzipSource30;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource40 = gzipSource30.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline41 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource30.close(deadline41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource40);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource3.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource3.buffer = okBuffer8;
        gzipSource3.section = (byte) -1;
        java.util.zip.Inflater inflater12 = gzipSource3.inflater;
        java.util.zip.CRC32 cRC32_13 = gzipSource3.crc;
        gzipSource0.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource15.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_21 = null;
        gzipSource20.crc = cRC32_21;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource20.inflaterSource;
        java.util.zip.CRC32 cRC32_24 = gzipSource20.crc;
        java.util.zip.Inflater inflater25 = gzipSource20.inflater;
        gzipSource20.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source30 = gzipSource20.source;
        gzipSource15.source = source30;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource15.inflaterSource;
        int int33 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        java.util.zip.Inflater inflater35 = gzipSource34.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater37 = null;
        gzipSource36.inflater = inflater37;
        int int39 = gzipSource36.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource40 = gzipSource36.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_42 = null;
        gzipSource41.crc = cRC32_42;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = gzipSource41.inflaterSource;
        java.util.zip.CRC32 cRC32_45 = gzipSource41.crc;
        java.util.zip.Inflater inflater46 = gzipSource41.inflater;
        gzipSource41.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source51 = gzipSource41.source;
        gzipSource36.source = source51;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource53 = gzipSource36.inflaterSource;
        int int54 = gzipSource36.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource59 = gzipSource55.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = null;
        gzipSource55.buffer = okBuffer60;
        int int62 = gzipSource55.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource63 = gzipSource55.inflaterSource;
        gzipSource36.source = gzipSource55;
        java.util.zip.Inflater inflater65 = gzipSource55.inflater;
        java.util.zip.CRC32 cRC32_66 = gzipSource55.crc;
        gzipSource34.crc = cRC32_66;
        gzipSource0.source = gzipSource34;
        com.squareup.okhttp.internal.bytes.Deadline deadline70 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource34.require((int) (byte) 1, deadline70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource53);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource59);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_66);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline5 = null;
        gzipSource0.require((-1), deadline5);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) 0, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        gzipSource16.require((-1), deadline18);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = null;
        gzipSource20.inflaterSource = inflaterSource27;
        gzipSource16.source = inflaterSource27;
        java.util.zip.CRC32 cRC32_30 = gzipSource16.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer31 = gzipSource16.buffer;
        java.util.zip.CRC32 cRC32_32 = gzipSource16.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource33.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource47.inflaterSource;
        gzipSource47.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        gzipSource54.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource54);
        java.util.zip.Inflater inflater61 = gzipSource60.inflater;
        gzipSource47.inflater = inflater61;
        gzipSource42.inflater = inflater61;
        gzipSource33.inflater = inflater61;
        gzipSource16.source = gzipSource33;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer66 = gzipSource16.buffer;
        gzipSource0.updateCrc(okBuffer66, (long) (byte) 3, (long) (-1));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer66);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource0.inflaterSource;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) inflaterSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: source == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.Source source21 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_22 = gzipSource0.crc;
        gzipSource0.section = 2;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_22);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer6 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        long long9 = gzipSource0.read(okBuffer6, (long) 100, deadline8);
        int int10 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = null;
        gzipSource11.inflaterSource = inflaterSource18;
        java.util.zip.CRC32 cRC32_20 = gzipSource11.crc;
        gzipSource11.section = 100;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = gzipSource11.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline26 = null;
        long long27 = gzipSource0.read(okBuffer24, (long) (byte) 10, deadline26);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater29 = null;
        gzipSource28.inflater = inflater29;
        int int31 = gzipSource28.section;
        gzipSource28.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource28);
        java.util.zip.Inflater inflater35 = gzipSource34.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        java.util.zip.CRC32 cRC32_37 = gzipSource36.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_39 = null;
        gzipSource38.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource38.inflaterSource;
        int int42 = gzipSource38.section;
        com.squareup.okhttp.internal.bytes.Source source43 = gzipSource38.source;
        gzipSource38.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer46 = gzipSource38.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer47 = gzipSource38.buffer;
        gzipSource36.buffer = okBuffer47;
        com.squareup.okhttp.internal.bytes.Deadline deadline50 = null;
        long long51 = gzipSource0.read(okBuffer47, (long) (short) 1, deadline50);
        java.lang.Class<?> wildcardClass52 = okBuffer47.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater4 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource5 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        com.squareup.okhttp.internal.bytes.Deadline deadline16 = null;
        gzipSource14.require((-1), deadline16);
        java.util.zip.CRC32 cRC32_18 = gzipSource14.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource19.inflaterSource;
        java.util.zip.CRC32 cRC32_23 = gzipSource19.crc;
        java.util.zip.Inflater inflater24 = gzipSource19.inflater;
        gzipSource19.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source29 = gzipSource19.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = gzipSource30.inflaterSource;
        gzipSource19.source = gzipSource30;
        com.squareup.okhttp.internal.bytes.Source source38 = gzipSource19.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource39.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = gzipSource39.inflaterSource;
        java.util.zip.Inflater inflater43 = gzipSource39.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer44 = gzipSource39.buffer;
        gzipSource19.buffer = okBuffer44;
        gzipSource14.source = okBuffer44;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource47.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer52 = null;
        gzipSource47.buffer = okBuffer52;
        gzipSource47.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = null;
        gzipSource47.inflaterSource = inflaterSource56;
        com.squareup.okhttp.internal.bytes.Source source58 = gzipSource47.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer59 = null;
        gzipSource47.buffer = okBuffer59;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_63 = null;
        gzipSource62.crc = cRC32_63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater66 = null;
        gzipSource65.inflater = inflater66;
        int int68 = gzipSource65.section;
        gzipSource65.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource65);
        java.util.zip.Inflater inflater72 = gzipSource71.inflater;
        gzipSource62.inflater = inflater72;
        gzipSource61.inflater = inflater72;
        gzipSource47.inflater = inflater72;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource77 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_78 = null;
        gzipSource77.crc = cRC32_78;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource80 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater81 = null;
        gzipSource80.inflater = inflater81;
        int int83 = gzipSource80.section;
        gzipSource80.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource86 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource80);
        java.util.zip.Inflater inflater87 = gzipSource86.inflater;
        gzipSource77.inflater = inflater87;
        gzipSource76.inflater = inflater87;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource90 = gzipSource76.inflaterSource;
        java.util.zip.Inflater inflater91 = gzipSource76.inflater;
        gzipSource47.inflater = inflater91;
        java.util.zip.Inflater inflater93 = gzipSource47.inflater;
        gzipSource14.inflater = inflater93;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource95 = gzipSource14.inflaterSource;
        gzipSource0.inflaterSource = inflaterSource95;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer44);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater72);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int83 + "' != '" + 100 + "'", int83 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource95);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater3 = null;
        gzipSource2.inflater = inflater3;
        int int5 = gzipSource2.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource2.inflaterSource;
        gzipSource2.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        gzipSource2.require((int) (short) -1, deadline10);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = null;
        gzipSource12.inflaterSource = inflaterSource19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource12.inflaterSource;
        gzipSource2.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = null;
        gzipSource12.inflaterSource = inflaterSource24;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = gzipSource12.buffer;
        gzipSource0.buffer = okBuffer26;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer28 = gzipSource0.buffer;
        java.util.zip.Inflater inflater29 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Source source30 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source30);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        gzipSource0.checkEqual("", (int) (short) 0, (int) (short) 0);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_9 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_9);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        gzipSource0.section = 0;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        gzipSource0.section = (short) -1;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_6);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater2 = null;
        gzipSource1.inflater = inflater2;
        int int4 = gzipSource1.section;
        gzipSource1.section = (byte) -1;
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource1.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource1.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        int int23 = gzipSource0.section;
        int int24 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_26 = null;
        gzipSource25.crc = cRC32_26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource25.inflaterSource;
        java.util.zip.CRC32 cRC32_29 = gzipSource25.crc;
        java.util.zip.Inflater inflater30 = gzipSource25.inflater;
        gzipSource25.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source35 = gzipSource25.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater37 = null;
        gzipSource36.inflater = inflater37;
        int int39 = gzipSource36.section;
        gzipSource36.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = gzipSource36.inflaterSource;
        gzipSource25.source = gzipSource36;
        com.squareup.okhttp.internal.bytes.Source source44 = gzipSource25.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater46 = null;
        gzipSource45.inflater = inflater46;
        int int48 = gzipSource45.section;
        gzipSource45.section = (byte) -1;
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource45.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_54 = null;
        gzipSource53.crc = cRC32_54;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater57 = null;
        gzipSource56.inflater = inflater57;
        int int59 = gzipSource56.section;
        gzipSource56.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource56);
        java.util.zip.Inflater inflater63 = gzipSource62.inflater;
        gzipSource53.inflater = inflater63;
        gzipSource45.inflater = inflater63;
        gzipSource25.inflater = inflater63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater68 = null;
        gzipSource67.inflater = inflater68;
        int int70 = gzipSource67.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource71 = gzipSource67.inflaterSource;
        gzipSource67.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline75 = null;
        gzipSource67.require((int) (short) -1, deadline75);
        com.squareup.okhttp.internal.bytes.Source source77 = gzipSource67.source;
        int int78 = gzipSource67.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer79 = null;
        gzipSource67.buffer = okBuffer79;
        gzipSource25.source = okBuffer79;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer82 = gzipSource25.buffer;
        gzipSource0.buffer = okBuffer82;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source44);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater63);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer82);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        java.util.zip.CRC32 cRC32_9 = gzipSource8.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource11.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        gzipSource14.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        java.util.zip.Inflater inflater21 = gzipSource20.inflater;
        gzipSource11.inflater = inflater21;
        gzipSource10.inflater = inflater21;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = gzipSource10.buffer;
        java.util.zip.CRC32 cRC32_25 = gzipSource10.crc;
        gzipSource8.crc = cRC32_25;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource8.checkEqual("", (int) '4', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000023 != expected 0x000034");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_25);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource10.inflaterSource;
        gzipSource10.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        gzipSource10.require((int) (short) -1, deadline18);
        com.squareup.okhttp.internal.bytes.Source source20 = gzipSource10.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource21.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource35.inflaterSource;
        gzipSource35.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        java.util.zip.Inflater inflater49 = gzipSource48.inflater;
        gzipSource35.inflater = inflater49;
        gzipSource30.inflater = inflater49;
        gzipSource21.inflater = inflater49;
        gzipSource10.inflater = inflater49;
        gzipSource0.inflater = inflater49;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        gzipSource55.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource55);
        java.util.zip.Inflater inflater62 = gzipSource61.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource61);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource63);
        gzipSource0.source = gzipSource63;
        com.squareup.okhttp.internal.bytes.Deadline deadline67 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long68 = gzipSource63.seek((byte) 2, deadline67);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater62);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource11.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource11.inflaterSource;
        java.util.zip.CRC32 cRC32_15 = gzipSource11.crc;
        java.util.zip.Inflater inflater16 = gzipSource11.inflater;
        gzipSource11.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source21 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource22.inflaterSource;
        gzipSource11.source = gzipSource22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource31.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        java.util.zip.Inflater inflater41 = gzipSource40.inflater;
        gzipSource31.inflater = inflater41;
        gzipSource30.inflater = inflater41;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer44 = gzipSource30.buffer;
        gzipSource11.updateCrc(okBuffer44, (long) '#', (long) (-1));
        gzipSource0.buffer = okBuffer44;
        java.util.zip.Inflater inflater49 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline51 = null;
        gzipSource0.require(0, deadline51);
        com.squareup.okhttp.internal.bytes.Deadline deadline54 = null;
        gzipSource0.require((int) (short) 0, deadline54);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater49);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater3 = null;
        gzipSource2.inflater = inflater3;
        int int5 = gzipSource2.section;
        gzipSource2.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource2);
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource2.source;
        gzipSource0.source = gzipSource2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_18 = null;
        gzipSource17.crc = cRC32_18;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource20 = gzipSource17.inflaterSource;
        java.util.zip.CRC32 cRC32_21 = gzipSource17.crc;
        java.util.zip.Inflater inflater22 = gzipSource17.inflater;
        gzipSource17.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source27 = gzipSource17.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater29 = null;
        gzipSource28.inflater = inflater29;
        int int31 = gzipSource28.section;
        gzipSource28.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource28.inflaterSource;
        gzipSource17.source = gzipSource28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_38 = null;
        gzipSource37.crc = cRC32_38;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        gzipSource40.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        java.util.zip.Inflater inflater47 = gzipSource46.inflater;
        gzipSource37.inflater = inflater47;
        gzipSource36.inflater = inflater47;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer50 = gzipSource36.buffer;
        gzipSource17.updateCrc(okBuffer50, (long) '#', (long) (-1));
        com.squareup.okhttp.internal.bytes.Deadline deadline55 = null;
        long long56 = gzipSource11.read(okBuffer50, (long) (short) 0, deadline55);
        gzipSource0.source = gzipSource11;
        gzipSource0.section = 2;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource12.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource12.inflaterSource;
        java.util.zip.CRC32 cRC32_16 = gzipSource12.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource17.inflaterSource;
        gzipSource17.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource17.inflater = inflater31;
        gzipSource12.inflater = inflater31;
        com.squareup.okhttp.internal.bytes.Source source34 = gzipSource12.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource12.inflaterSource;
        gzipSource11.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater38 = null;
        gzipSource37.inflater = inflater38;
        int int40 = gzipSource37.section;
        gzipSource37.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource37);
        java.util.zip.CRC32 cRC32_44 = null;
        gzipSource37.crc = cRC32_44;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_47 = null;
        gzipSource46.crc = cRC32_47;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = gzipSource46.inflaterSource;
        java.util.zip.CRC32 cRC32_50 = gzipSource46.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater52 = null;
        gzipSource51.inflater = inflater52;
        int int54 = gzipSource51.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource55 = gzipSource51.inflaterSource;
        gzipSource51.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        int int61 = gzipSource58.section;
        gzipSource58.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource58);
        java.util.zip.Inflater inflater65 = gzipSource64.inflater;
        gzipSource51.inflater = inflater65;
        gzipSource46.inflater = inflater65;
        gzipSource37.inflater = inflater65;
        java.util.zip.CRC32 cRC32_69 = gzipSource37.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_72 = null;
        gzipSource71.crc = cRC32_72;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource74 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater75 = null;
        gzipSource74.inflater = inflater75;
        int int77 = gzipSource74.section;
        gzipSource74.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource80 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource74);
        java.util.zip.Inflater inflater81 = gzipSource80.inflater;
        gzipSource71.inflater = inflater81;
        gzipSource70.inflater = inflater81;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer84 = gzipSource70.buffer;
        gzipSource37.buffer = okBuffer84;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource86 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer84);
        gzipSource12.updateCrc(okBuffer84, (long) (byte) 100, (long) (short) -1);
        gzipSource12.section = (short) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline93 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource12.require((int) (short) 1, deadline93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource55);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_69);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer84);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        java.util.zip.CRC32 cRC32_30 = gzipSource19.crc;
        com.squareup.okhttp.internal.bytes.Source source31 = gzipSource19.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_33 = null;
        gzipSource32.crc = cRC32_33;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource32.inflaterSource;
        java.util.zip.CRC32 cRC32_36 = gzipSource32.crc;
        java.util.zip.Inflater inflater37 = gzipSource32.inflater;
        gzipSource32.checkEqual("", 100, 100);
        java.util.zip.Inflater inflater42 = gzipSource32.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = gzipSource43.inflaterSource;
        gzipSource19.inflaterSource = inflaterSource44;
        com.squareup.okhttp.internal.bytes.Deadline deadline46 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource19.consumeTrailer(deadline46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource44);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        java.util.zip.CRC32 cRC32_14 = null;
        gzipSource8.crc = cRC32_14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource16.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        gzipSource19.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        java.util.zip.Inflater inflater26 = gzipSource25.inflater;
        gzipSource16.inflater = inflater26;
        gzipSource8.inflater = inflater26;
        gzipSource7.inflater = inflater26;
        java.util.zip.CRC32 cRC32_30 = gzipSource7.crc;
        gzipSource0.crc = cRC32_30;
        int int32 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource0.inflaterSource;
        int int19 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource20.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline23 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long24 = gzipSource20.seek((byte) 10, deadline23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource21);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.Deadline deadline20 = null;
        gzipSource18.require((int) (short) 0, deadline20);
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource18.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource18.inflaterSource;
        gzipSource0.inflaterSource = inflaterSource23;
        java.util.zip.CRC32 cRC32_25 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_25);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((int) (short) 0, deadline8);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource6.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource6.inflaterSource;
        java.util.zip.Inflater inflater12 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline13 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.consumeHeader(deadline13);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater12);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource0.crc = cRC32_5;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        gzipSource27.inflater = inflater37;
        gzipSource26.inflater = inflater37;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource26.buffer;
        gzipSource7.updateCrc(okBuffer40, (long) '#', (long) (-1));
        gzipSource0.updateCrc(okBuffer40, (long) 0, 0L);
        com.squareup.okhttp.internal.bytes.Source source47 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource48 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource49.checkEqual("hi!", 97, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x00000a != expected 0x000061");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource48);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        gzipSource0.source = gzipSource6;
        int int10 = gzipSource0.section;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", (int) (byte) 3, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x00000a != expected 0x000003");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.Inflater inflater15 = gzipSource14.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        gzipSource0.source = gzipSource16;
        java.util.zip.Inflater inflater19 = gzipSource16.inflater;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        gzipSource0.checkEqual("hi!", (-1), (int) (byte) -1);
        gzipSource0.section = (short) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_14 = null;
        gzipSource13.crc = cRC32_14;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = null;
        gzipSource13.inflaterSource = inflaterSource16;
        com.squareup.okhttp.internal.bytes.Source source18 = gzipSource13.source;
        java.util.zip.CRC32 cRC32_19 = gzipSource13.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource20.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer25 = null;
        gzipSource20.buffer = okBuffer25;
        int int27 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource20.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        gzipSource29.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource29);
        java.util.zip.Inflater inflater36 = gzipSource35.inflater;
        gzipSource35.section = (byte) -1;
        java.util.zip.Inflater inflater39 = gzipSource35.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        gzipSource40.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        java.util.zip.Inflater inflater47 = gzipSource46.inflater;
        gzipSource46.section = (byte) -1;
        java.util.zip.Inflater inflater50 = gzipSource46.inflater;
        gzipSource35.inflater = inflater50;
        gzipSource20.inflater = inflater50;
        gzipSource13.inflater = inflater50;
        gzipSource0.inflater = inflater50;
        int int55 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        gzipSource0.require(0, deadline12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.Source source26 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource27.inflaterSource;
        java.util.zip.Inflater inflater31 = gzipSource27.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource27.buffer;
        gzipSource7.buffer = okBuffer32;
        gzipSource0.source = okBuffer32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource35.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = null;
        gzipSource35.buffer = okBuffer40;
        int int42 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.Source source43 = null;
        gzipSource35.source = source43;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource35);
        gzipSource0.source = gzipSource45;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        gzipSource47.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource47);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource54 = null;
        gzipSource47.inflaterSource = inflaterSource54;
        java.util.zip.CRC32 cRC32_56 = gzipSource47.crc;
        gzipSource47.section = 100;
        com.squareup.okhttp.internal.bytes.Source source59 = gzipSource47.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = gzipSource47.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource45.updateCrc(okBuffer60, 100L, (long) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer60);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        java.util.zip.Inflater inflater8 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.require((int) '4', deadline10);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater8);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        java.util.zip.CRC32 cRC32_9 = gzipSource8.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource11.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        gzipSource14.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        java.util.zip.Inflater inflater21 = gzipSource20.inflater;
        gzipSource11.inflater = inflater21;
        gzipSource10.inflater = inflater21;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = gzipSource10.buffer;
        java.util.zip.CRC32 cRC32_25 = gzipSource10.crc;
        gzipSource8.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource8.inflaterSource;
        java.lang.Class<?> wildcardClass28 = gzipSource8.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource0.crc = cRC32_5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_14 = null;
        gzipSource13.crc = cRC32_14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        gzipSource16.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        java.util.zip.Inflater inflater23 = gzipSource22.inflater;
        gzipSource13.inflater = inflater23;
        gzipSource12.inflater = inflater23;
        gzipSource0.inflater = inflater23;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource27.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = null;
        gzipSource27.buffer = okBuffer32;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = null;
        gzipSource27.inflaterSource = inflaterSource36;
        com.squareup.okhttp.internal.bytes.Source source38 = gzipSource27.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer39 = null;
        gzipSource27.buffer = okBuffer39;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater46 = null;
        gzipSource45.inflater = inflater46;
        int int48 = gzipSource45.section;
        gzipSource45.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource45);
        java.util.zip.Inflater inflater52 = gzipSource51.inflater;
        gzipSource42.inflater = inflater52;
        gzipSource41.inflater = inflater52;
        gzipSource27.inflater = inflater52;
        gzipSource0.inflater = inflater52;
        int int57 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline58 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater52);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer14 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource15.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource16);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        int int22 = gzipSource6.section;
        java.util.zip.CRC32 cRC32_23 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.Source source24 = gzipSource6.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline26 = null;
        gzipSource6.require(0, deadline26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source24);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        java.util.zip.Inflater inflater14 = gzipSource9.inflater;
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource9.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource17.inflaterSource;
        gzipSource17.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource17.inflater = inflater31;
        gzipSource9.inflater = inflater31;
        gzipSource0.source = gzipSource9;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_37 = null;
        gzipSource36.crc = cRC32_37;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater40 = null;
        gzipSource39.inflater = inflater40;
        int int42 = gzipSource39.section;
        gzipSource39.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource39);
        java.util.zip.Inflater inflater46 = gzipSource45.inflater;
        gzipSource36.inflater = inflater46;
        gzipSource35.inflater = inflater46;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = gzipSource35.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer50 = gzipSource35.buffer;
        gzipSource0.source = gzipSource35;
        gzipSource0.section = 3;
        gzipSource0.section = (byte) 0;
        com.squareup.okhttp.internal.bytes.Source source56 = null;
        gzipSource0.source = source56;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer50);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int11 = gzipSource10.section;
        java.util.zip.CRC32 cRC32_12 = gzipSource10.crc;
        gzipSource0.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.Deadline deadline15 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long16 = gzipSource0.seek((byte) -1, deadline15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_12);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater4 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource5 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_14 = null;
        gzipSource13.crc = cRC32_14;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource13.inflaterSource;
        java.util.zip.CRC32 cRC32_17 = gzipSource13.crc;
        java.util.zip.Inflater inflater18 = gzipSource13.inflater;
        gzipSource13.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource13.source;
        gzipSource8.source = source23;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource8.inflaterSource;
        int int26 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource27.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = null;
        gzipSource27.buffer = okBuffer32;
        int int34 = gzipSource27.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource27.inflaterSource;
        gzipSource8.source = gzipSource27;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = null;
        gzipSource8.inflaterSource = inflaterSource37;
        java.util.zip.CRC32 cRC32_39 = gzipSource8.crc;
        gzipSource0.crc = cRC32_39;
        gzipSource0.section = '#';
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater44 = null;
        gzipSource43.inflater = inflater44;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource50 = gzipSource46.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer51 = null;
        gzipSource46.buffer = okBuffer51;
        gzipSource46.section = (byte) -1;
        java.util.zip.Inflater inflater55 = gzipSource46.inflater;
        java.util.zip.CRC32 cRC32_56 = gzipSource46.crc;
        gzipSource43.crc = cRC32_56;
        java.util.zip.CRC32 cRC32_58 = gzipSource43.crc;
        com.squareup.okhttp.internal.bytes.Source source59 = gzipSource43.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater61 = gzipSource60.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource62 = null;
        gzipSource60.inflaterSource = inflaterSource62;
        com.squareup.okhttp.internal.bytes.Source source64 = gzipSource60.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer65 = gzipSource60.buffer;
        gzipSource43.buffer = okBuffer65;
        gzipSource0.buffer = okBuffer65;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer65);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        gzipSource17.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource17);
        com.squareup.okhttp.internal.bytes.Deadline deadline25 = null;
        gzipSource23.require((-1), deadline25);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = null;
        gzipSource27.inflaterSource = inflaterSource34;
        gzipSource23.source = inflaterSource34;
        java.util.zip.CRC32 cRC32_37 = gzipSource23.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer38 = gzipSource23.buffer;
        java.util.zip.CRC32 cRC32_39 = gzipSource23.crc;
        gzipSource0.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource46 = gzipSource42.inflaterSource;
        gzipSource42.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer49 = gzipSource42.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource53 = gzipSource50.inflaterSource;
        java.util.zip.CRC32 cRC32_54 = gzipSource50.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource59 = gzipSource55.inflaterSource;
        gzipSource55.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater63 = null;
        gzipSource62.inflater = inflater63;
        int int65 = gzipSource62.section;
        gzipSource62.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource62);
        java.util.zip.Inflater inflater69 = gzipSource68.inflater;
        gzipSource55.inflater = inflater69;
        gzipSource50.inflater = inflater69;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource72 = gzipSource50.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source73 = gzipSource50.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource74 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater75 = null;
        gzipSource74.inflater = inflater75;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource77 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource74);
        java.util.zip.CRC32 cRC32_78 = gzipSource77.crc;
        gzipSource50.crc = cRC32_78;
        gzipSource42.crc = cRC32_78;
        java.util.zip.CRC32 cRC32_81 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer82 = gzipSource42.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline84 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long85 = gzipSource0.read(okBuffer82, (long) (short) 1, deadline84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_54);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource59);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer82);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_11 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.CRC32 cRC32_16 = gzipSource15.crc;
        gzipSource0.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource18.inflaterSource;
        java.util.zip.CRC32 cRC32_22 = gzipSource18.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        gzipSource23.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource23);
        java.util.zip.Inflater inflater30 = gzipSource29.inflater;
        gzipSource29.section = (byte) -1;
        java.util.zip.Inflater inflater33 = gzipSource29.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        java.util.zip.Inflater inflater41 = gzipSource40.inflater;
        gzipSource40.section = (byte) -1;
        java.util.zip.Inflater inflater44 = gzipSource40.inflater;
        gzipSource29.inflater = inflater44;
        gzipSource18.inflater = inflater44;
        gzipSource0.inflater = inflater44;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_49 = null;
        gzipSource48.crc = cRC32_49;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource48.inflaterSource;
        int int52 = gzipSource48.section;
        com.squareup.okhttp.internal.bytes.Source source53 = gzipSource48.source;
        gzipSource48.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer56 = gzipSource48.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer57 = gzipSource48.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer58 = gzipSource48.buffer;
        gzipSource0.updateCrc(okBuffer58, (long) 'a', (long) (byte) -1);
        java.util.zip.CRC32 cRC32_62 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_62);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.CRC32 cRC32_10 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource17);
        gzipSource19.section = (byte) 0;
        gzipSource19.section = (-1);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource19.inflaterSource;
        gzipSource9.inflaterSource = inflaterSource24;
        com.squareup.okhttp.internal.bytes.Deadline deadline27 = null;
        gzipSource9.require((int) (short) 0, deadline27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource24);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource11.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource11.inflaterSource;
        java.util.zip.CRC32 cRC32_15 = gzipSource11.crc;
        java.util.zip.Inflater inflater16 = gzipSource11.inflater;
        gzipSource11.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source21 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource22.inflaterSource;
        gzipSource11.source = gzipSource22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource31.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        java.util.zip.Inflater inflater41 = gzipSource40.inflater;
        gzipSource31.inflater = inflater41;
        gzipSource30.inflater = inflater41;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer44 = gzipSource30.buffer;
        gzipSource11.updateCrc(okBuffer44, (long) '#', (long) (-1));
        gzipSource0.buffer = okBuffer44;
        com.squareup.okhttp.internal.bytes.Deadline deadline49 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer44);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = null;
        gzipSource0.inflaterSource = inflaterSource32;
        gzipSource0.section = 0;
        java.util.zip.Inflater inflater36 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = gzipSource38.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer43 = null;
        gzipSource38.buffer = okBuffer43;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = null;
        gzipSource38.inflaterSource = inflaterSource47;
        com.squareup.okhttp.internal.bytes.Source source49 = gzipSource38.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer50 = null;
        gzipSource38.buffer = okBuffer50;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_54 = null;
        gzipSource53.crc = cRC32_54;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater57 = null;
        gzipSource56.inflater = inflater57;
        int int59 = gzipSource56.section;
        gzipSource56.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource56);
        java.util.zip.Inflater inflater63 = gzipSource62.inflater;
        gzipSource53.inflater = inflater63;
        gzipSource52.inflater = inflater63;
        gzipSource38.inflater = inflater63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_69 = null;
        gzipSource68.crc = cRC32_69;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater72 = null;
        gzipSource71.inflater = inflater72;
        int int74 = gzipSource71.section;
        gzipSource71.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource77 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource71);
        java.util.zip.Inflater inflater78 = gzipSource77.inflater;
        gzipSource68.inflater = inflater78;
        gzipSource67.inflater = inflater78;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource81 = gzipSource67.inflaterSource;
        java.util.zip.Inflater inflater82 = gzipSource67.inflater;
        gzipSource38.inflater = inflater82;
        java.util.zip.Inflater inflater84 = gzipSource38.inflater;
        gzipSource37.inflater = inflater84;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source49);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater63);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater84);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = null;
        gzipSource10.inflaterSource = inflaterSource22;
        int int24 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource10.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline26 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource10.close(deadline26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        int int8 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        java.util.zip.CRC32 cRC32_21 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource9.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource23.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer28 = null;
        gzipSource23.buffer = okBuffer28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = null;
        gzipSource23.inflaterSource = inflaterSource30;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        int int35 = gzipSource32.section;
        gzipSource32.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        com.squareup.okhttp.internal.bytes.Deadline deadline40 = null;
        gzipSource38.require((-1), deadline40);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = null;
        gzipSource42.inflaterSource = inflaterSource49;
        gzipSource38.source = inflaterSource49;
        java.util.zip.CRC32 cRC32_52 = gzipSource38.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer53 = gzipSource38.buffer;
        int int54 = gzipSource38.section;
        java.util.zip.CRC32 cRC32_55 = gzipSource38.crc;
        com.squareup.okhttp.internal.bytes.Source source56 = gzipSource38.source;
        gzipSource23.source = gzipSource38;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource38.inflaterSource;
        gzipSource9.inflaterSource = inflaterSource58;
        gzipSource0.inflaterSource = inflaterSource58;
        com.squareup.okhttp.internal.bytes.Source source61 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer53);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source61);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource11.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource11.inflaterSource;
        int int15 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.Source source16 = gzipSource11.source;
        gzipSource11.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer19 = gzipSource11.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer20 = gzipSource11.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer20);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer22 = gzipSource21.buffer;
        gzipSource8.buffer = okBuffer22;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer22);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        gzipSource0.section = (short) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = null;
        gzipSource0.inflaterSource = inflaterSource32;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = null;
        gzipSource0.inflaterSource = inflaterSource34;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_37 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_37);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource0.crc = cRC32_5;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        gzipSource27.inflater = inflater37;
        gzipSource26.inflater = inflater37;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource26.buffer;
        gzipSource7.updateCrc(okBuffer40, (long) '#', (long) (-1));
        gzipSource0.updateCrc(okBuffer40, (long) 0, 0L);
        int int47 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater49 = null;
        gzipSource48.inflater = inflater49;
        int int51 = gzipSource48.section;
        gzipSource48.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource48);
        java.util.zip.Inflater inflater55 = gzipSource54.inflater;
        gzipSource54.section = (byte) -1;
        java.util.zip.Inflater inflater58 = gzipSource54.inflater;
        com.squareup.okhttp.internal.bytes.Source source59 = gzipSource54.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = gzipSource54.buffer;
        java.util.zip.CRC32 cRC32_61 = gzipSource54.crc;
        gzipSource0.crc = cRC32_61;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_61);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        java.util.zip.Inflater inflater14 = gzipSource9.inflater;
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource9.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource17.inflaterSource;
        gzipSource17.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource17.inflater = inflater31;
        gzipSource9.inflater = inflater31;
        gzipSource0.source = gzipSource9;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource35.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_41 = null;
        gzipSource40.crc = cRC32_41;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource40.inflaterSource;
        java.util.zip.CRC32 cRC32_44 = gzipSource40.crc;
        java.util.zip.Inflater inflater45 = gzipSource40.inflater;
        gzipSource40.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source50 = gzipSource40.source;
        gzipSource35.source = source50;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource35.inflaterSource;
        int int53 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource54.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer59 = null;
        gzipSource54.buffer = okBuffer59;
        int int61 = gzipSource54.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource62 = gzipSource54.inflaterSource;
        gzipSource35.source = gzipSource54;
        java.util.zip.Inflater inflater64 = gzipSource54.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater66 = null;
        gzipSource65.inflater = inflater66;
        int int68 = gzipSource65.section;
        gzipSource65.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource65);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource72 = null;
        gzipSource65.inflaterSource = inflaterSource72;
        java.util.zip.CRC32 cRC32_74 = gzipSource65.crc;
        gzipSource54.crc = cRC32_74;
        gzipSource0.crc = cRC32_74;
        com.squareup.okhttp.internal.bytes.Source source77 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource78 = new com.squareup.okhttp.internal.bytes.GzipSource(source77);
        com.squareup.okhttp.internal.bytes.Deadline deadline79 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource78.consumeTrailer(deadline79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource52);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater64);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source77);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater3 = null;
        gzipSource2.inflater = inflater3;
        int int5 = gzipSource2.section;
        gzipSource2.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource2);
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource2.source;
        gzipSource0.source = gzipSource2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_18 = null;
        gzipSource17.crc = cRC32_18;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource20 = gzipSource17.inflaterSource;
        java.util.zip.CRC32 cRC32_21 = gzipSource17.crc;
        java.util.zip.Inflater inflater22 = gzipSource17.inflater;
        gzipSource17.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source27 = gzipSource17.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater29 = null;
        gzipSource28.inflater = inflater29;
        int int31 = gzipSource28.section;
        gzipSource28.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource28.inflaterSource;
        gzipSource17.source = gzipSource28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_38 = null;
        gzipSource37.crc = cRC32_38;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        gzipSource40.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        java.util.zip.Inflater inflater47 = gzipSource46.inflater;
        gzipSource37.inflater = inflater47;
        gzipSource36.inflater = inflater47;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer50 = gzipSource36.buffer;
        gzipSource17.updateCrc(okBuffer50, (long) '#', (long) (-1));
        com.squareup.okhttp.internal.bytes.Deadline deadline55 = null;
        long long56 = gzipSource11.read(okBuffer50, (long) (short) 0, deadline55);
        gzipSource0.source = gzipSource11;
        int int58 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        gzipSource59.section = 0;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource59);
        java.util.zip.CRC32 cRC32_63 = gzipSource59.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource59);
        gzipSource0.source = gzipSource64;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_63);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = null;
        gzipSource30.inflaterSource = inflaterSource37;
        java.util.zip.CRC32 cRC32_39 = gzipSource30.crc;
        gzipSource19.crc = cRC32_39;
        java.util.zip.Inflater inflater41 = gzipSource19.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline43 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource19.require(10, deadline43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater41);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        com.squareup.okhttp.internal.bytes.Deadline deadline15 = null;
        gzipSource13.require((-1), deadline15);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        gzipSource17.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource17);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = null;
        gzipSource17.inflaterSource = inflaterSource24;
        gzipSource13.source = inflaterSource24;
        java.util.zip.CRC32 cRC32_27 = gzipSource13.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer28 = gzipSource13.buffer;
        java.util.zip.CRC32 cRC32_29 = gzipSource13.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.CRC32 cRC32_37 = null;
        gzipSource30.crc = cRC32_37;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource39.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = gzipSource39.inflaterSource;
        java.util.zip.CRC32 cRC32_43 = gzipSource39.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource48 = gzipSource44.inflaterSource;
        gzipSource44.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater52 = null;
        gzipSource51.inflater = inflater52;
        int int54 = gzipSource51.section;
        gzipSource51.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource51);
        java.util.zip.Inflater inflater58 = gzipSource57.inflater;
        gzipSource44.inflater = inflater58;
        gzipSource39.inflater = inflater58;
        gzipSource30.inflater = inflater58;
        gzipSource13.source = gzipSource30;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater64 = null;
        gzipSource63.inflater = inflater64;
        int int66 = gzipSource63.section;
        gzipSource63.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource63);
        java.util.zip.Inflater inflater70 = gzipSource69.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource69);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource71);
        java.util.zip.CRC32 cRC32_73 = gzipSource72.crc;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource74 = gzipSource72.inflaterSource;
        gzipSource30.inflaterSource = inflaterSource74;
        gzipSource0.inflaterSource = inflaterSource74;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_43);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource48);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource74);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_14 = null;
        gzipSource13.crc = cRC32_14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        gzipSource16.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        java.util.zip.Inflater inflater23 = gzipSource22.inflater;
        gzipSource13.inflater = inflater23;
        gzipSource12.inflater = inflater23;
        gzipSource0.inflater = inflater23;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource27.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = null;
        gzipSource27.buffer = okBuffer32;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = null;
        gzipSource27.inflaterSource = inflaterSource36;
        com.squareup.okhttp.internal.bytes.Source source38 = gzipSource27.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer39 = null;
        gzipSource27.buffer = okBuffer39;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater46 = null;
        gzipSource45.inflater = inflater46;
        int int48 = gzipSource45.section;
        gzipSource45.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource45);
        java.util.zip.Inflater inflater52 = gzipSource51.inflater;
        gzipSource42.inflater = inflater52;
        gzipSource41.inflater = inflater52;
        gzipSource27.inflater = inflater52;
        gzipSource0.inflater = inflater52;
        int int57 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater59 = gzipSource58.inflater;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater52);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater59);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 2;
        java.util.zip.Inflater inflater11 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource13.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource18.inflaterSource;
        java.util.zip.CRC32 cRC32_22 = gzipSource18.crc;
        java.util.zip.Inflater inflater23 = gzipSource18.inflater;
        gzipSource18.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source28 = gzipSource18.source;
        gzipSource13.source = source28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource13.inflaterSource;
        int int31 = gzipSource13.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        int int35 = gzipSource32.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = gzipSource32.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer37 = null;
        gzipSource32.buffer = okBuffer37;
        int int39 = gzipSource32.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource40 = gzipSource32.inflaterSource;
        gzipSource13.source = gzipSource32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        java.util.zip.CRC32 cRC32_45 = null;
        gzipSource42.crc = cRC32_45;
        gzipSource13.source = gzipSource42;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_49 = null;
        gzipSource48.crc = cRC32_49;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource48.inflaterSource;
        int int52 = gzipSource48.section;
        com.squareup.okhttp.internal.bytes.Source source53 = gzipSource48.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        gzipSource48.source = gzipSource54;
        java.util.zip.CRC32 cRC32_58 = gzipSource48.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater60 = null;
        gzipSource59.inflater = inflater60;
        int int62 = gzipSource59.section;
        gzipSource59.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource59);
        com.squareup.okhttp.internal.bytes.Deadline deadline67 = null;
        gzipSource65.require((-1), deadline67);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater70 = null;
        gzipSource69.inflater = inflater70;
        int int72 = gzipSource69.section;
        gzipSource69.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource69);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource76 = null;
        gzipSource69.inflaterSource = inflaterSource76;
        gzipSource65.source = inflaterSource76;
        java.util.zip.CRC32 cRC32_79 = gzipSource65.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource65.buffer;
        gzipSource48.updateCrc(okBuffer80, (long) (short) 100, (long) (short) -1);
        gzipSource13.buffer = okBuffer80;
        com.squareup.okhttp.internal.bytes.Deadline deadline86 = null;
        long long87 = gzipSource0.read(okBuffer80, 0L, deadline86);
        com.squareup.okhttp.internal.bytes.Deadline deadline89 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require(0, deadline89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 0L + "'", long87 == 0L);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        java.util.zip.Inflater inflater14 = gzipSource9.inflater;
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource9.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource17.inflaterSource;
        gzipSource17.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource17.inflater = inflater31;
        gzipSource9.inflater = inflater31;
        gzipSource0.source = gzipSource9;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        gzipSource35.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource35);
        com.squareup.okhttp.internal.bytes.Deadline deadline43 = null;
        gzipSource41.require((-1), deadline43);
        java.util.zip.CRC32 cRC32_45 = gzipSource41.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_47 = null;
        gzipSource46.crc = cRC32_47;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = gzipSource46.inflaterSource;
        java.util.zip.CRC32 cRC32_50 = gzipSource46.crc;
        java.util.zip.Inflater inflater51 = gzipSource46.inflater;
        gzipSource46.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source56 = gzipSource46.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater58 = null;
        gzipSource57.inflater = inflater58;
        int int60 = gzipSource57.section;
        gzipSource57.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource63 = gzipSource57.inflaterSource;
        gzipSource46.source = gzipSource57;
        com.squareup.okhttp.internal.bytes.Source source65 = gzipSource46.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_67 = null;
        gzipSource66.crc = cRC32_67;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource69 = gzipSource66.inflaterSource;
        java.util.zip.Inflater inflater70 = gzipSource66.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer71 = gzipSource66.buffer;
        gzipSource46.buffer = okBuffer71;
        gzipSource41.source = okBuffer71;
        gzipSource0.buffer = okBuffer71;
        com.squareup.okhttp.internal.bytes.Deadline deadline75 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source56);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer71);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        java.util.zip.CRC32 cRC32_9 = gzipSource0.crc;
        gzipSource0.section = 100;
        com.squareup.okhttp.internal.bytes.Source source12 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer13 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline14 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer13);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.Inflater inflater40 = gzipSource39.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource39);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource41);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        java.util.zip.CRC32 cRC32_50 = null;
        gzipSource44.crc = cRC32_50;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_53 = null;
        gzipSource52.crc = cRC32_53;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        gzipSource55.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource55);
        java.util.zip.Inflater inflater62 = gzipSource61.inflater;
        gzipSource52.inflater = inflater62;
        gzipSource44.inflater = inflater62;
        gzipSource43.inflater = inflater62;
        gzipSource42.inflater = inflater62;
        gzipSource0.inflater = inflater62;
        java.util.zip.Inflater inflater68 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater70 = null;
        gzipSource69.inflater = inflater70;
        int int72 = gzipSource69.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource73 = gzipSource69.inflaterSource;
        gzipSource69.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer76 = gzipSource69.buffer;
        gzipSource0.buffer = okBuffer76;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource78 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer76);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource79 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater80 = null;
        gzipSource79.inflater = inflater80;
        int int82 = gzipSource79.section;
        gzipSource79.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline86 = null;
        gzipSource79.require((int) (byte) -1, deadline86);
        gzipSource78.source = gzipSource79;
        java.util.zip.CRC32 cRC32_89 = gzipSource79.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater68);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer76);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_89);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource6.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource6.inflaterSource;
        java.util.zip.CRC32 cRC32_10 = gzipSource6.crc;
        java.util.zip.Inflater inflater11 = gzipSource6.inflater;
        gzipSource6.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source16 = gzipSource6.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        gzipSource17.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource17.inflaterSource;
        gzipSource6.source = gzipSource17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_27 = null;
        gzipSource26.crc = cRC32_27;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        gzipSource29.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource29);
        java.util.zip.Inflater inflater36 = gzipSource35.inflater;
        gzipSource26.inflater = inflater36;
        gzipSource25.inflater = inflater36;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer39 = gzipSource25.buffer;
        gzipSource6.updateCrc(okBuffer39, (long) '#', (long) (-1));
        com.squareup.okhttp.internal.bytes.Deadline deadline44 = null;
        long long45 = gzipSource0.read(okBuffer39, (long) (short) 0, deadline44);
        java.lang.Class<?> wildcardClass46 = okBuffer39.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 2;
        java.util.zip.Inflater inflater11 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline15 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long16 = gzipSource0.seek((byte) -1, deadline15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_10 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = gzipSource0.buffer;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer11);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer6 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        long long9 = gzipSource0.read(okBuffer6, (long) 100, deadline8);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer10 = gzipSource0.buffer;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer10);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        java.util.zip.Inflater inflater10 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource18.section = (byte) -1;
        java.util.zip.Inflater inflater22 = gzipSource18.inflater;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource18.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = gzipSource18.buffer;
        java.util.zip.CRC32 cRC32_25 = gzipSource18.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater27 = null;
        gzipSource26.inflater = inflater27;
        int int29 = gzipSource26.section;
        gzipSource26.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource26);
        com.squareup.okhttp.internal.bytes.Source source33 = gzipSource26.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource26.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer35 = gzipSource26.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline37 = null;
        long long38 = gzipSource18.read(okBuffer35, 10L, deadline37);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource11.updateCrc(okBuffer35, (long) 1, (long) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.Source source26 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource27.inflaterSource;
        java.util.zip.Inflater inflater31 = gzipSource27.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource27.buffer;
        gzipSource7.buffer = okBuffer32;
        gzipSource0.source = okBuffer32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource35.inflaterSource;
        int int39 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.Source source40 = gzipSource35.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        gzipSource35.source = gzipSource41;
        int int45 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.Source source46 = gzipSource35.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater51 = null;
        gzipSource50.inflater = inflater51;
        int int53 = gzipSource50.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource54 = gzipSource50.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer55 = null;
        gzipSource50.buffer = okBuffer55;
        gzipSource50.section = (byte) -1;
        java.util.zip.Inflater inflater59 = gzipSource50.inflater;
        java.util.zip.CRC32 cRC32_60 = gzipSource50.crc;
        gzipSource47.crc = cRC32_60;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int63 = gzipSource62.section;
        java.util.zip.CRC32 cRC32_64 = gzipSource62.crc;
        gzipSource47.crc = cRC32_64;
        gzipSource35.crc = cRC32_64;
        gzipSource0.crc = cRC32_64;
        com.squareup.okhttp.internal.bytes.Deadline deadline68 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline68);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_60);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_64);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource22.inflaterSource;
        java.util.zip.Inflater inflater27 = gzipSource22.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource22.inflaterSource;
        java.util.zip.Inflater inflater29 = gzipSource22.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        gzipSource31.section = (byte) -1;
        java.util.zip.CRC32 cRC32_37 = null;
        gzipSource31.crc = cRC32_37;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource39.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        java.util.zip.Inflater inflater49 = gzipSource48.inflater;
        gzipSource39.inflater = inflater49;
        gzipSource31.inflater = inflater49;
        gzipSource30.inflater = inflater49;
        gzipSource22.inflater = inflater49;
        gzipSource21.source = gzipSource22;
        java.util.zip.Inflater inflater55 = gzipSource22.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline57 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource22.require(2, deadline57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater55);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater2 = null;
        gzipSource1.inflater = inflater2;
        int int4 = gzipSource1.section;
        gzipSource1.section = (byte) -1;
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource1.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource1.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource23.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        java.util.zip.Inflater inflater35 = gzipSource30.inflater;
        gzipSource30.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source40 = gzipSource30.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource41.inflaterSource;
        gzipSource30.source = gzipSource41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        java.util.zip.Inflater inflater60 = gzipSource59.inflater;
        gzipSource50.inflater = inflater60;
        gzipSource49.inflater = inflater60;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer63 = gzipSource49.buffer;
        gzipSource30.updateCrc(okBuffer63, (long) '#', (long) (-1));
        gzipSource23.updateCrc(okBuffer63, (long) 0, 0L);
        gzipSource0.buffer = okBuffer63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_72 = null;
        gzipSource71.crc = cRC32_72;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource74 = gzipSource71.inflaterSource;
        java.util.zip.CRC32 cRC32_75 = gzipSource71.crc;
        java.util.zip.Inflater inflater76 = gzipSource71.inflater;
        java.util.zip.CRC32 cRC32_77 = null;
        gzipSource71.crc = cRC32_77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer79 = null;
        gzipSource71.buffer = okBuffer79;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer81 = null;
        gzipSource71.buffer = okBuffer81;
        gzipSource0.source = gzipSource71;
        int int84 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater76);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int84 + "' != '" + 100 + "'", int84 == 100);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = null;
        gzipSource0.inflaterSource = inflaterSource3;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline13 = null;
        gzipSource5.require((int) (short) -1, deadline13);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        gzipSource15.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = null;
        gzipSource15.inflaterSource = inflaterSource22;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource15.inflaterSource;
        gzipSource5.source = gzipSource15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = null;
        gzipSource15.inflaterSource = inflaterSource27;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer29 = gzipSource15.buffer;
        gzipSource0.updateCrc(okBuffer29, 1L, (long) (byte) 0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource33.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource47.inflaterSource;
        gzipSource47.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        gzipSource54.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource54);
        java.util.zip.Inflater inflater61 = gzipSource60.inflater;
        gzipSource47.inflater = inflater61;
        gzipSource42.inflater = inflater61;
        gzipSource33.inflater = inflater61;
        java.util.zip.CRC32 cRC32_65 = gzipSource33.crc;
        gzipSource33.section = (short) 10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater69 = null;
        gzipSource68.inflater = inflater69;
        int int71 = gzipSource68.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource72 = gzipSource68.inflaterSource;
        gzipSource68.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer75 = gzipSource68.buffer;
        gzipSource33.source = okBuffer75;
        gzipSource0.source = okBuffer75;
        com.squareup.okhttp.internal.bytes.Source source78 = null;
        gzipSource0.source = source78;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.internal.bytes.GzipSource gzipSource80 = new com.squareup.okhttp.internal.bytes.GzipSource(source78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: source == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_65);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer75);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = null;
        gzipSource0.inflaterSource = inflaterSource3;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer7 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource8.inflaterSource;
        gzipSource8.section = (byte) 0;
        int int12 = gzipSource8.section;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer7 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        java.util.zip.CRC32 cRC32_12 = gzipSource8.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource13.inflaterSource;
        gzipSource13.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        java.util.zip.Inflater inflater27 = gzipSource26.inflater;
        gzipSource13.inflater = inflater27;
        gzipSource8.inflater = inflater27;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source31 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        java.util.zip.CRC32 cRC32_36 = gzipSource35.crc;
        gzipSource8.crc = cRC32_36;
        gzipSource0.crc = cRC32_36;
        java.util.zip.CRC32 cRC32_39 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_42 = null;
        gzipSource41.crc = cRC32_42;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = gzipSource41.inflaterSource;
        int int45 = gzipSource41.section;
        com.squareup.okhttp.internal.bytes.Source source46 = gzipSource41.source;
        gzipSource41.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer49 = gzipSource41.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer50 = gzipSource41.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer50, (long) 'a', (long) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource44);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer50);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource(source11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source11);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        int int9 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource10.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer15 = null;
        gzipSource10.buffer = okBuffer15;
        int int17 = gzipSource10.section;
        java.util.zip.Inflater inflater18 = gzipSource10.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource19.inflaterSource;
        java.util.zip.CRC32 cRC32_23 = gzipSource19.crc;
        java.util.zip.Inflater inflater24 = gzipSource19.inflater;
        java.util.zip.CRC32 cRC32_25 = null;
        gzipSource19.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource27.inflaterSource;
        gzipSource27.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        java.util.zip.Inflater inflater41 = gzipSource40.inflater;
        gzipSource27.inflater = inflater41;
        gzipSource19.inflater = inflater41;
        gzipSource10.source = gzipSource19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater46 = null;
        gzipSource45.inflater = inflater46;
        int int48 = gzipSource45.section;
        gzipSource45.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource45);
        com.squareup.okhttp.internal.bytes.Deadline deadline53 = null;
        gzipSource51.require((-1), deadline53);
        java.util.zip.CRC32 cRC32_55 = gzipSource51.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_57 = null;
        gzipSource56.crc = cRC32_57;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource59 = gzipSource56.inflaterSource;
        java.util.zip.CRC32 cRC32_60 = gzipSource56.crc;
        java.util.zip.Inflater inflater61 = gzipSource56.inflater;
        gzipSource56.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source66 = gzipSource56.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater68 = null;
        gzipSource67.inflater = inflater68;
        int int70 = gzipSource67.section;
        gzipSource67.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource73 = gzipSource67.inflaterSource;
        gzipSource56.source = gzipSource67;
        com.squareup.okhttp.internal.bytes.Source source75 = gzipSource56.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_77 = null;
        gzipSource76.crc = cRC32_77;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource79 = gzipSource76.inflaterSource;
        java.util.zip.Inflater inflater80 = gzipSource76.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer81 = gzipSource76.buffer;
        gzipSource56.buffer = okBuffer81;
        gzipSource51.source = okBuffer81;
        gzipSource10.buffer = okBuffer81;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource8.updateCrc(okBuffer81, (long) 97, (long) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source66);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer81);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        int int30 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        com.squareup.okhttp.internal.bytes.Deadline deadline33 = null;
        gzipSource31.require((int) (byte) 0, deadline33);
        java.util.zip.CRC32 cRC32_35 = gzipSource31.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline36 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource31.close(deadline36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_35);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        java.util.zip.CRC32 cRC32_14 = null;
        gzipSource8.crc = cRC32_14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource16.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        gzipSource19.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        java.util.zip.Inflater inflater26 = gzipSource25.inflater;
        gzipSource16.inflater = inflater26;
        gzipSource8.inflater = inflater26;
        gzipSource7.inflater = inflater26;
        java.util.zip.CRC32 cRC32_30 = gzipSource7.crc;
        gzipSource0.crc = cRC32_30;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", 1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000023 != expected 0x000001");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_30);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        gzipSource6.section = (byte) -1;
        java.util.zip.Inflater inflater10 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource6.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = gzipSource6.buffer;
        java.util.zip.CRC32 cRC32_13 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int15 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource20 = gzipSource16.inflaterSource;
        gzipSource16.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline24 = null;
        gzipSource16.require((int) (short) -1, deadline24);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater27 = null;
        gzipSource26.inflater = inflater27;
        int int29 = gzipSource26.section;
        gzipSource26.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource26);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = null;
        gzipSource26.inflaterSource = inflaterSource33;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource26.inflaterSource;
        gzipSource16.source = gzipSource26;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource26);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = null;
        gzipSource26.inflaterSource = inflaterSource38;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource26.buffer;
        gzipSource14.buffer = okBuffer40;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer42 = gzipSource14.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline44 = null;
        gzipSource14.require((int) (short) 0, deadline44);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        java.util.zip.Inflater inflater53 = gzipSource52.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource52);
        gzipSource54.section = (byte) 0;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater58 = null;
        gzipSource57.inflater = inflater58;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater61 = null;
        gzipSource60.inflater = inflater61;
        int int63 = gzipSource60.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource64 = gzipSource60.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer65 = null;
        gzipSource60.buffer = okBuffer65;
        gzipSource60.section = (byte) -1;
        java.util.zip.Inflater inflater69 = gzipSource60.inflater;
        java.util.zip.CRC32 cRC32_70 = gzipSource60.crc;
        gzipSource57.crc = cRC32_70;
        java.util.zip.CRC32 cRC32_72 = gzipSource57.crc;
        com.squareup.okhttp.internal.bytes.Source source73 = gzipSource57.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer74 = gzipSource57.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater76 = null;
        gzipSource75.inflater = inflater76;
        int int78 = gzipSource75.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource79 = gzipSource75.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = null;
        gzipSource75.buffer = okBuffer80;
        int int82 = gzipSource75.section;
        com.squareup.okhttp.internal.bytes.Source source83 = null;
        gzipSource75.source = source83;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource85 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource75);
        java.util.zip.CRC32 cRC32_86 = gzipSource75.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource87 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater88 = null;
        gzipSource87.inflater = inflater88;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource90 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource87);
        java.util.zip.CRC32 cRC32_91 = gzipSource90.crc;
        gzipSource75.crc = cRC32_91;
        gzipSource57.crc = cRC32_91;
        gzipSource54.crc = cRC32_91;
        gzipSource14.crc = cRC32_91;
        gzipSource6.crc = cRC32_91;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater53);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer74);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource79);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_91);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        int int11 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        int int13 = gzipSource12.section;
        java.util.zip.Inflater inflater14 = gzipSource12.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        gzipSource15.section = (byte) -1;
        java.util.zip.CRC32 cRC32_21 = null;
        gzipSource15.crc = cRC32_21;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer23 = null;
        gzipSource15.buffer = okBuffer23;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_26 = null;
        gzipSource25.crc = cRC32_26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource25.inflaterSource;
        java.util.zip.CRC32 cRC32_29 = gzipSource25.crc;
        java.util.zip.Inflater inflater30 = gzipSource25.inflater;
        gzipSource25.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source35 = gzipSource25.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater37 = null;
        gzipSource36.inflater = inflater37;
        int int39 = gzipSource36.section;
        gzipSource36.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = gzipSource36.inflaterSource;
        gzipSource25.source = gzipSource36;
        com.squareup.okhttp.internal.bytes.Source source44 = gzipSource25.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater46 = null;
        gzipSource45.inflater = inflater46;
        int int48 = gzipSource45.section;
        gzipSource45.section = (byte) -1;
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource45.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_54 = null;
        gzipSource53.crc = cRC32_54;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater57 = null;
        gzipSource56.inflater = inflater57;
        int int59 = gzipSource56.section;
        gzipSource56.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource56);
        java.util.zip.Inflater inflater63 = gzipSource62.inflater;
        gzipSource53.inflater = inflater63;
        gzipSource45.inflater = inflater63;
        gzipSource25.inflater = inflater63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater68 = null;
        gzipSource67.inflater = inflater68;
        int int70 = gzipSource67.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource71 = gzipSource67.inflaterSource;
        gzipSource67.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline75 = null;
        gzipSource67.require((int) (short) -1, deadline75);
        com.squareup.okhttp.internal.bytes.Source source77 = gzipSource67.source;
        int int78 = gzipSource67.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer79 = null;
        gzipSource67.buffer = okBuffer79;
        gzipSource25.source = okBuffer79;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer82 = gzipSource25.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline84 = null;
        long long85 = gzipSource15.read(okBuffer82, 10L, deadline84);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer82, (long) '#', (long) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source44);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater63);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + (-1L) + "'", long85 == (-1L));
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_30 = null;
        gzipSource29.crc = cRC32_30;
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource29.crc = cRC32_32;
        gzipSource0.source = gzipSource29;
        com.squareup.okhttp.internal.bytes.Deadline deadline35 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource29.consumeHeader(deadline35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer7 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater10 = null;
        gzipSource9.inflater = inflater10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource9);
        java.util.zip.CRC32 cRC32_13 = gzipSource12.crc;
        gzipSource8.crc = cRC32_13;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource8.checkEqual("", (int) (byte) 2, 97);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000061 != expected 0x000002");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = null;
        gzipSource32.inflaterSource = inflaterSource33;
        java.util.zip.Inflater inflater35 = gzipSource32.inflater;
        gzipSource0.inflater = inflater35;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater35);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_7 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        com.squareup.okhttp.internal.bytes.Deadline deadline16 = null;
        gzipSource14.require((-1), deadline16);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = null;
        gzipSource18.inflaterSource = inflaterSource25;
        gzipSource14.source = inflaterSource25;
        java.util.zip.CRC32 cRC32_28 = gzipSource14.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer29 = gzipSource14.buffer;
        java.util.zip.CRC32 cRC32_30 = gzipSource14.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        gzipSource31.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource31);
        java.util.zip.CRC32 cRC32_38 = null;
        gzipSource31.crc = cRC32_38;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_41 = null;
        gzipSource40.crc = cRC32_41;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource40.inflaterSource;
        java.util.zip.CRC32 cRC32_44 = gzipSource40.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater46 = null;
        gzipSource45.inflater = inflater46;
        int int48 = gzipSource45.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = gzipSource45.inflaterSource;
        gzipSource45.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater53 = null;
        gzipSource52.inflater = inflater53;
        int int55 = gzipSource52.section;
        gzipSource52.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource52);
        java.util.zip.Inflater inflater59 = gzipSource58.inflater;
        gzipSource45.inflater = inflater59;
        gzipSource40.inflater = inflater59;
        gzipSource31.inflater = inflater59;
        gzipSource14.source = gzipSource31;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer64 = gzipSource14.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline66 = null;
        long long67 = gzipSource0.read(okBuffer64, (long) 0, deadline66);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_44);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource49);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        gzipSource14.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        com.squareup.okhttp.internal.bytes.Deadline deadline22 = null;
        gzipSource20.require((-1), deadline22);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = null;
        gzipSource24.inflaterSource = inflaterSource31;
        gzipSource20.source = inflaterSource31;
        java.util.zip.CRC32 cRC32_34 = gzipSource20.crc;
        gzipSource0.crc = cRC32_34;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_37 = null;
        gzipSource36.crc = cRC32_37;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource36.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource40 = gzipSource36.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource41);
        com.squareup.okhttp.internal.bytes.Deadline deadline49 = null;
        gzipSource47.require((-1), deadline49);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater52 = null;
        gzipSource51.inflater = inflater52;
        int int54 = gzipSource51.section;
        gzipSource51.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource51);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = null;
        gzipSource51.inflaterSource = inflaterSource58;
        gzipSource47.source = inflaterSource58;
        java.util.zip.CRC32 cRC32_61 = gzipSource47.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer62 = gzipSource47.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource63 = gzipSource47.inflaterSource;
        gzipSource36.inflaterSource = inflaterSource63;
        gzipSource0.source = inflaterSource63;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource63);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource10.crc = cRC32_17;
        gzipSource0.source = gzipSource10;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = null;
        gzipSource0.inflaterSource = inflaterSource3;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline13 = null;
        gzipSource5.require((int) (short) -1, deadline13);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        gzipSource15.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = null;
        gzipSource15.inflaterSource = inflaterSource22;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource15.inflaterSource;
        gzipSource5.source = gzipSource15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = null;
        gzipSource15.inflaterSource = inflaterSource27;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer29 = gzipSource15.buffer;
        gzipSource0.updateCrc(okBuffer29, 1L, (long) (byte) 0);
        gzipSource0.section = 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        gzipSource35.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource35);
        com.squareup.okhttp.internal.bytes.Deadline deadline43 = null;
        gzipSource41.require((-1), deadline43);
        java.util.zip.CRC32 cRC32_45 = gzipSource41.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_47 = null;
        gzipSource46.crc = cRC32_47;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = gzipSource46.inflaterSource;
        java.util.zip.CRC32 cRC32_50 = gzipSource46.crc;
        java.util.zip.Inflater inflater51 = gzipSource46.inflater;
        gzipSource46.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source56 = gzipSource46.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater58 = null;
        gzipSource57.inflater = inflater58;
        int int60 = gzipSource57.section;
        gzipSource57.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource63 = gzipSource57.inflaterSource;
        gzipSource46.source = gzipSource57;
        com.squareup.okhttp.internal.bytes.Source source65 = gzipSource46.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_67 = null;
        gzipSource66.crc = cRC32_67;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource69 = gzipSource66.inflaterSource;
        java.util.zip.Inflater inflater70 = gzipSource66.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer71 = gzipSource66.buffer;
        gzipSource46.buffer = okBuffer71;
        gzipSource41.source = okBuffer71;
        gzipSource0.buffer = okBuffer71;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source56);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer71);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        int int9 = gzipSource6.section;
        gzipSource6.section = (byte) -1;
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource6.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource14.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        gzipSource17.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource17);
        java.util.zip.Inflater inflater24 = gzipSource23.inflater;
        gzipSource14.inflater = inflater24;
        gzipSource6.inflater = inflater24;
        gzipSource0.source = gzipSource6;
        int int28 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline30 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long31 = gzipSource0.seek((byte) 10, deadline30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater24 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_26 = null;
        gzipSource25.crc = cRC32_26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource25.inflaterSource;
        java.util.zip.CRC32 cRC32_29 = gzipSource25.crc;
        java.util.zip.Inflater inflater30 = gzipSource25.inflater;
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource25.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource33.inflaterSource;
        gzipSource33.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        gzipSource40.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        java.util.zip.Inflater inflater47 = gzipSource46.inflater;
        gzipSource33.inflater = inflater47;
        gzipSource25.inflater = inflater47;
        int int50 = gzipSource25.section;
        gzipSource0.source = gzipSource25;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource53 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource53);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        gzipSource17.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource17);
        com.squareup.okhttp.internal.bytes.Deadline deadline25 = null;
        gzipSource23.require((-1), deadline25);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = null;
        gzipSource27.inflaterSource = inflaterSource34;
        gzipSource23.source = inflaterSource34;
        java.util.zip.CRC32 cRC32_37 = gzipSource23.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer38 = gzipSource23.buffer;
        java.util.zip.CRC32 cRC32_39 = gzipSource23.crc;
        gzipSource0.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource46 = gzipSource42.inflaterSource;
        java.util.zip.Inflater inflater47 = gzipSource42.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource48 = gzipSource42.inflaterSource;
        java.util.zip.Inflater inflater49 = gzipSource42.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater52 = null;
        gzipSource51.inflater = inflater52;
        int int54 = gzipSource51.section;
        gzipSource51.section = (byte) -1;
        java.util.zip.CRC32 cRC32_57 = null;
        gzipSource51.crc = cRC32_57;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_60 = null;
        gzipSource59.crc = cRC32_60;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater63 = null;
        gzipSource62.inflater = inflater63;
        int int65 = gzipSource62.section;
        gzipSource62.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource62);
        java.util.zip.Inflater inflater69 = gzipSource68.inflater;
        gzipSource59.inflater = inflater69;
        gzipSource51.inflater = inflater69;
        gzipSource50.inflater = inflater69;
        gzipSource42.inflater = inflater69;
        gzipSource41.inflater = inflater69;
        com.squareup.okhttp.internal.bytes.Deadline deadline75 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource41.consumeTrailer(deadline75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater69);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        java.util.zip.CRC32 cRC32_12 = gzipSource8.crc;
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource8.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        java.util.zip.Inflater inflater20 = gzipSource15.inflater;
        gzipSource15.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source25 = gzipSource15.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater27 = null;
        gzipSource26.inflater = inflater27;
        int int29 = gzipSource26.section;
        gzipSource26.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource26.inflaterSource;
        gzipSource15.source = gzipSource26;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource35.inflater = inflater45;
        gzipSource34.inflater = inflater45;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer48 = gzipSource34.buffer;
        gzipSource15.updateCrc(okBuffer48, (long) '#', (long) (-1));
        gzipSource8.updateCrc(okBuffer48, (long) 0, 0L);
        gzipSource0.buffer = okBuffer48;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater58 = null;
        gzipSource57.inflater = inflater58;
        int int60 = gzipSource57.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource61 = gzipSource57.inflaterSource;
        gzipSource57.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline65 = null;
        gzipSource57.require((int) (short) -1, deadline65);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater68 = null;
        gzipSource67.inflater = inflater68;
        int int70 = gzipSource67.section;
        gzipSource67.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource67);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource74 = null;
        gzipSource67.inflaterSource = inflaterSource74;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource76 = gzipSource67.inflaterSource;
        gzipSource57.source = gzipSource67;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource78 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource67);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource79 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_80 = null;
        gzipSource79.crc = cRC32_80;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource82 = gzipSource79.inflaterSource;
        int int83 = gzipSource79.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer84 = gzipSource79.buffer;
        gzipSource67.buffer = okBuffer84;
        com.squareup.okhttp.internal.bytes.Deadline deadline87 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long88 = gzipSource0.read(okBuffer84, (long) (short) 1, deadline87);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource56);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource61);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource82);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int83 + "' != '" + 100 + "'", int83 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer84);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        gzipSource0.section = (short) 10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource35.inflaterSource;
        gzipSource35.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer42 = gzipSource35.buffer;
        gzipSource0.source = okBuffer42;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource44.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_54 = null;
        gzipSource53.crc = cRC32_54;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = gzipSource53.inflaterSource;
        java.util.zip.CRC32 cRC32_57 = gzipSource53.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        int int61 = gzipSource58.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource62 = gzipSource58.inflaterSource;
        gzipSource58.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater66 = null;
        gzipSource65.inflater = inflater66;
        int int68 = gzipSource65.section;
        gzipSource65.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource65);
        java.util.zip.Inflater inflater72 = gzipSource71.inflater;
        gzipSource58.inflater = inflater72;
        gzipSource53.inflater = inflater72;
        gzipSource44.inflater = inflater72;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource76 = null;
        gzipSource44.inflaterSource = inflaterSource76;
        gzipSource44.section = 0;
        java.util.zip.Inflater inflater80 = gzipSource44.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource81 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        gzipSource0.source = gzipSource81;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_57);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource62);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater80);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        gzipSource0.section = (byte) 3;
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        int int8 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", (int) 'a', (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000001 != expected 0x000061");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource33.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_39 = null;
        gzipSource38.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource38.inflaterSource;
        java.util.zip.CRC32 cRC32_42 = gzipSource38.crc;
        java.util.zip.Inflater inflater43 = gzipSource38.inflater;
        gzipSource38.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source48 = gzipSource38.source;
        gzipSource33.source = source48;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource50 = gzipSource33.inflaterSource;
        int int51 = gzipSource33.section;
        gzipSource0.source = gzipSource33;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = gzipSource53.buffer;
        gzipSource0.buffer = okBuffer60;
        gzipSource0.section = (short) 0;
        com.squareup.okhttp.internal.bytes.Deadline deadline65 = null;
        gzipSource0.require((-1), deadline65);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer67 = gzipSource0.buffer;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer67);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = null;
        gzipSource10.inflaterSource = inflaterSource22;
        int int24 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        gzipSource25.checkEqual("", (int) (byte) 3, 3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource0.inflaterSource;
        gzipSource0.section = 0;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource10.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        java.util.zip.Inflater inflater20 = gzipSource15.inflater;
        gzipSource15.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source25 = gzipSource15.source;
        gzipSource10.source = source25;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource10.inflaterSource;
        int int28 = gzipSource10.section;
        int int29 = gzipSource10.section;
        int int30 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer31 = gzipSource10.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline33 = null;
        long long34 = gzipSource0.read(okBuffer31, 0L, deadline33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = null;
        gzipSource0.buffer = okBuffer12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        java.util.zip.Inflater inflater25 = gzipSource24.inflater;
        gzipSource15.inflater = inflater25;
        gzipSource14.inflater = inflater25;
        gzipSource0.inflater = inflater25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater25);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource7.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        java.util.zip.Inflater inflater25 = gzipSource24.inflater;
        gzipSource15.inflater = inflater25;
        gzipSource7.inflater = inflater25;
        gzipSource6.inflater = inflater25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_30 = null;
        gzipSource29.crc = cRC32_30;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource29.inflaterSource;
        java.util.zip.CRC32 cRC32_33 = gzipSource29.crc;
        java.util.zip.CRC32 cRC32_34 = null;
        gzipSource29.crc = cRC32_34;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_37 = null;
        gzipSource36.crc = cRC32_37;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource36.inflaterSource;
        java.util.zip.CRC32 cRC32_40 = gzipSource36.crc;
        java.util.zip.Inflater inflater41 = gzipSource36.inflater;
        gzipSource36.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source46 = gzipSource36.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        gzipSource47.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource53 = gzipSource47.inflaterSource;
        gzipSource36.source = gzipSource47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_57 = null;
        gzipSource56.crc = cRC32_57;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater60 = null;
        gzipSource59.inflater = inflater60;
        int int62 = gzipSource59.section;
        gzipSource59.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource59);
        java.util.zip.Inflater inflater66 = gzipSource65.inflater;
        gzipSource56.inflater = inflater66;
        gzipSource55.inflater = inflater66;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer69 = gzipSource55.buffer;
        gzipSource36.updateCrc(okBuffer69, (long) '#', (long) (-1));
        gzipSource29.updateCrc(okBuffer69, (long) 0, 0L);
        gzipSource6.buffer = okBuffer69;
        gzipSource0.buffer = okBuffer69;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource78 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater79 = null;
        gzipSource78.inflater = inflater79;
        int int81 = gzipSource78.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource82 = gzipSource78.inflaterSource;
        gzipSource78.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer85 = gzipSource78.buffer;
        gzipSource0.buffer = okBuffer85;
        gzipSource0.section = '4';
        java.util.zip.Inflater inflater89 = null;
        gzipSource0.inflater = inflater89;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource53);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer69);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer85);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        gzipSource6.section = (byte) -1;
        java.util.zip.Inflater inflater10 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource6.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = gzipSource6.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer12);
        gzipSource13.section = 2;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer12);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer14 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = null;
        gzipSource0.inflaterSource = inflaterSource15;
        java.util.zip.CRC32 cRC32_17 = gzipSource0.crc;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = null;
        gzipSource19.inflaterSource = inflaterSource23;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource19.inflaterSource;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.Source source27 = gzipSource19.source;
        com.squareup.okhttp.internal.bytes.Source source28 = gzipSource19.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer29 = gzipSource19.buffer;
        gzipSource0.buffer = okBuffer29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource31.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = null;
        gzipSource31.inflaterSource = inflaterSource34;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = gzipSource31.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer37 = gzipSource31.buffer;
        gzipSource0.source = gzipSource31;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer37);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_14 = null;
        gzipSource13.crc = cRC32_14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        gzipSource16.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        java.util.zip.Inflater inflater23 = gzipSource22.inflater;
        gzipSource13.inflater = inflater23;
        gzipSource12.inflater = inflater23;
        gzipSource0.inflater = inflater23;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource27.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = null;
        gzipSource27.buffer = okBuffer32;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = null;
        gzipSource27.inflaterSource = inflaterSource36;
        com.squareup.okhttp.internal.bytes.Source source38 = gzipSource27.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer39 = null;
        gzipSource27.buffer = okBuffer39;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater46 = null;
        gzipSource45.inflater = inflater46;
        int int48 = gzipSource45.section;
        gzipSource45.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource45);
        java.util.zip.Inflater inflater52 = gzipSource51.inflater;
        gzipSource42.inflater = inflater52;
        gzipSource41.inflater = inflater52;
        gzipSource27.inflater = inflater52;
        gzipSource0.inflater = inflater52;
        gzipSource0.section = (-1);
        int int59 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source60 = null;
        gzipSource0.source = source60;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        int int22 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource11.inflaterSource;
        java.lang.Class<?> wildcardClass13 = inflaterSource12.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        gzipSource3.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource3);
        java.util.zip.Inflater inflater10 = gzipSource9.inflater;
        gzipSource0.inflater = inflater10;
        java.util.zip.CRC32 cRC32_12 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Source source13 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        java.util.zip.Inflater inflater25 = gzipSource24.inflater;
        gzipSource15.inflater = inflater25;
        gzipSource14.inflater = inflater25;
        gzipSource0.inflater = inflater25;
        java.util.zip.CRC32 cRC32_29 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer30 = gzipSource0.buffer;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer30);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource0.crc = cRC32_5;
        gzipSource0.section = (-1);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater10 = null;
        gzipSource9.inflater = inflater10;
        int int12 = gzipSource9.section;
        gzipSource9.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource9);
        com.squareup.okhttp.internal.bytes.Deadline deadline17 = null;
        gzipSource15.require((-1), deadline17);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        gzipSource19.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = null;
        gzipSource19.inflaterSource = inflaterSource26;
        gzipSource15.source = inflaterSource26;
        java.util.zip.CRC32 cRC32_29 = gzipSource15.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer30 = gzipSource15.buffer;
        int int31 = gzipSource15.section;
        java.util.zip.CRC32 cRC32_32 = gzipSource15.crc;
        com.squareup.okhttp.internal.bytes.Source source33 = gzipSource15.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        com.squareup.okhttp.internal.bytes.Deadline deadline42 = null;
        gzipSource40.require((-1), deadline42);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = null;
        gzipSource44.inflaterSource = inflaterSource51;
        gzipSource40.source = inflaterSource51;
        java.util.zip.CRC32 cRC32_54 = gzipSource40.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer55 = gzipSource40.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = gzipSource40.inflaterSource;
        gzipSource15.inflaterSource = inflaterSource56;
        gzipSource0.inflaterSource = inflaterSource56;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater60 = null;
        gzipSource59.inflater = inflater60;
        int int62 = gzipSource59.section;
        gzipSource59.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource59);
        com.squareup.okhttp.internal.bytes.Deadline deadline67 = null;
        gzipSource65.require((-1), deadline67);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater70 = null;
        gzipSource69.inflater = inflater70;
        int int72 = gzipSource69.section;
        gzipSource69.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource69);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource76 = null;
        gzipSource69.inflaterSource = inflaterSource76;
        gzipSource65.source = inflaterSource76;
        java.util.zip.CRC32 cRC32_79 = gzipSource65.crc;
        gzipSource65.checkEqual("", (int) (short) 10, (int) (short) 10);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer84 = gzipSource65.buffer;
        gzipSource0.buffer = okBuffer84;
        com.squareup.okhttp.internal.bytes.Deadline deadline86 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource56);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer84);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        gzipSource8.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline16 = null;
        gzipSource8.require((int) (short) -1, deadline16);
        com.squareup.okhttp.internal.bytes.Source source18 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        gzipSource19.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        java.util.zip.CRC32 cRC32_26 = null;
        gzipSource19.crc = cRC32_26;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_29 = null;
        gzipSource28.crc = cRC32_29;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource28.inflaterSource;
        java.util.zip.CRC32 cRC32_32 = gzipSource28.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource33.inflaterSource;
        gzipSource33.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        gzipSource40.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        java.util.zip.Inflater inflater47 = gzipSource46.inflater;
        gzipSource33.inflater = inflater47;
        gzipSource28.inflater = inflater47;
        gzipSource19.inflater = inflater47;
        gzipSource8.inflater = inflater47;
        gzipSource0.inflater = inflater47;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater47);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = gzipSource0.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", (int) ' ', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000034 != expected 0x000020");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer11);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater3 = null;
        gzipSource2.inflater = inflater3;
        int int5 = gzipSource2.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource2.inflaterSource;
        gzipSource2.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        gzipSource2.require((int) (short) -1, deadline10);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = null;
        gzipSource12.inflaterSource = inflaterSource19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource12.inflaterSource;
        gzipSource2.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = null;
        gzipSource12.inflaterSource = inflaterSource24;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = gzipSource12.buffer;
        gzipSource0.buffer = okBuffer26;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer28 = gzipSource0.buffer;
        java.util.zip.Inflater inflater29 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource36);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        java.util.zip.CRC32 cRC32_47 = null;
        gzipSource41.crc = cRC32_47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_50 = null;
        gzipSource49.crc = cRC32_50;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater53 = null;
        gzipSource52.inflater = inflater53;
        int int55 = gzipSource52.section;
        gzipSource52.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource52);
        java.util.zip.Inflater inflater59 = gzipSource58.inflater;
        gzipSource49.inflater = inflater59;
        gzipSource41.inflater = inflater59;
        gzipSource40.inflater = inflater59;
        gzipSource39.inflater = inflater59;
        int int64 = gzipSource39.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_66 = null;
        gzipSource65.crc = cRC32_66;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource68 = gzipSource65.inflaterSource;
        int int69 = gzipSource65.section;
        com.squareup.okhttp.internal.bytes.Source source70 = gzipSource65.source;
        gzipSource65.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer73 = gzipSource65.buffer;
        gzipSource65.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer76 = gzipSource65.buffer;
        gzipSource39.buffer = okBuffer76;
        gzipSource0.buffer = okBuffer76;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource79 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer76);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater59);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource68);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer76);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.Inflater inflater15 = gzipSource14.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        gzipSource0.source = gzipSource16;
        java.util.zip.CRC32 cRC32_19 = gzipSource0.crc;
        java.util.zip.Inflater inflater20 = gzipSource0.inflater;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater20);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        gzipSource0.require((int) (byte) -1, deadline7);
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_18 = null;
        gzipSource17.crc = cRC32_18;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource20 = gzipSource17.inflaterSource;
        java.util.zip.CRC32 cRC32_21 = gzipSource17.crc;
        java.util.zip.Inflater inflater22 = gzipSource17.inflater;
        gzipSource17.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source27 = gzipSource17.source;
        gzipSource12.source = source27;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        gzipSource29.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource29);
        com.squareup.okhttp.internal.bytes.Deadline deadline37 = null;
        gzipSource35.require((-1), deadline37);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater40 = null;
        gzipSource39.inflater = inflater40;
        int int42 = gzipSource39.section;
        gzipSource39.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource39);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource46 = null;
        gzipSource39.inflaterSource = inflaterSource46;
        gzipSource35.source = inflaterSource46;
        java.util.zip.CRC32 cRC32_49 = gzipSource35.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer50 = gzipSource35.buffer;
        java.util.zip.CRC32 cRC32_51 = gzipSource35.crc;
        gzipSource12.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource54.inflaterSource;
        java.util.zip.Inflater inflater59 = gzipSource54.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource60 = gzipSource54.inflaterSource;
        java.util.zip.Inflater inflater61 = gzipSource54.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater64 = null;
        gzipSource63.inflater = inflater64;
        int int66 = gzipSource63.section;
        gzipSource63.section = (byte) -1;
        java.util.zip.CRC32 cRC32_69 = null;
        gzipSource63.crc = cRC32_69;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_72 = null;
        gzipSource71.crc = cRC32_72;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource74 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater75 = null;
        gzipSource74.inflater = inflater75;
        int int77 = gzipSource74.section;
        gzipSource74.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource80 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource74);
        java.util.zip.Inflater inflater81 = gzipSource80.inflater;
        gzipSource71.inflater = inflater81;
        gzipSource63.inflater = inflater81;
        gzipSource62.inflater = inflater81;
        gzipSource54.inflater = inflater81;
        gzipSource53.inflater = inflater81;
        gzipSource0.inflater = inflater81;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater81);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        java.util.zip.CRC32 cRC32_19 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        java.util.zip.Inflater inflater27 = gzipSource26.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource26);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource28);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        gzipSource31.section = (byte) -1;
        java.util.zip.CRC32 cRC32_37 = null;
        gzipSource31.crc = cRC32_37;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource39.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        java.util.zip.Inflater inflater49 = gzipSource48.inflater;
        gzipSource39.inflater = inflater49;
        gzipSource31.inflater = inflater49;
        gzipSource30.inflater = inflater49;
        gzipSource29.inflater = inflater49;
        int int54 = gzipSource29.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_56 = null;
        gzipSource55.crc = cRC32_56;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource55.inflaterSource;
        int int59 = gzipSource55.section;
        com.squareup.okhttp.internal.bytes.Source source60 = gzipSource55.source;
        gzipSource55.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer63 = gzipSource55.buffer;
        gzipSource55.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer66 = gzipSource55.buffer;
        gzipSource29.buffer = okBuffer66;
        com.squareup.okhttp.internal.bytes.Deadline deadline69 = null;
        long long70 = gzipSource0.read(okBuffer66, (long) 0, deadline69);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer66);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer7 = gzipSource6.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        int int12 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.Source source13 = gzipSource8.source;
        gzipSource8.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer16 = gzipSource8.buffer;
        gzipSource8.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer19 = gzipSource8.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource20.inflaterSource;
        gzipSource20.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        java.util.zip.Inflater inflater34 = gzipSource33.inflater;
        gzipSource20.inflater = inflater34;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = null;
        gzipSource20.inflaterSource = inflaterSource36;
        gzipSource8.source = gzipSource20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource39.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = gzipSource39.inflaterSource;
        java.util.zip.CRC32 cRC32_43 = gzipSource39.crc;
        java.util.zip.CRC32 cRC32_44 = null;
        gzipSource39.crc = cRC32_44;
        gzipSource39.section = (-1);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater49 = null;
        gzipSource48.inflater = inflater49;
        int int51 = gzipSource48.section;
        gzipSource48.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource48);
        com.squareup.okhttp.internal.bytes.Deadline deadline56 = null;
        gzipSource54.require((-1), deadline56);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        int int61 = gzipSource58.section;
        gzipSource58.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource58);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource65 = null;
        gzipSource58.inflaterSource = inflaterSource65;
        gzipSource54.source = inflaterSource65;
        java.util.zip.CRC32 cRC32_68 = gzipSource54.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer69 = gzipSource54.buffer;
        int int70 = gzipSource54.section;
        java.util.zip.CRC32 cRC32_71 = gzipSource54.crc;
        com.squareup.okhttp.internal.bytes.Source source72 = gzipSource54.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater74 = null;
        gzipSource73.inflater = inflater74;
        int int76 = gzipSource73.section;
        gzipSource73.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource79 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource73);
        com.squareup.okhttp.internal.bytes.Deadline deadline81 = null;
        gzipSource79.require((-1), deadline81);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource83 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater84 = null;
        gzipSource83.inflater = inflater84;
        int int86 = gzipSource83.section;
        gzipSource83.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource89 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource83);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource90 = null;
        gzipSource83.inflaterSource = inflaterSource90;
        gzipSource79.source = inflaterSource90;
        java.util.zip.CRC32 cRC32_93 = gzipSource79.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer94 = gzipSource79.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource95 = gzipSource79.inflaterSource;
        gzipSource54.inflaterSource = inflaterSource95;
        gzipSource39.inflaterSource = inflaterSource95;
        gzipSource20.inflaterSource = inflaterSource95;
        gzipSource6.inflaterSource = inflaterSource95;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_43);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer69);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source72);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int86 + "' != '" + 100 + "'", int86 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource95);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource0.crc = cRC32_5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer13 = null;
        gzipSource8.buffer = okBuffer13;
        gzipSource8.section = (byte) -1;
        gzipSource8.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        gzipSource8.section = (byte) 1;
        java.util.zip.CRC32 cRC32_22 = gzipSource8.crc;
        gzipSource0.source = gzipSource8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = gzipSource24.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = null;
        gzipSource24.inflaterSource = inflaterSource26;
        com.squareup.okhttp.internal.bytes.Source source28 = gzipSource24.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer29 = gzipSource24.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline31 = null;
        long long32 = 0L; // flaky: gzipSource8.read(okBuffer29, (long) (short) 10, deadline31);
        java.util.zip.Inflater inflater33 = gzipSource8.inflater;
        gzipSource8.section = 1;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater33);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater2 = null;
        gzipSource1.inflater = inflater2;
        int int4 = gzipSource1.section;
        gzipSource1.section = (byte) -1;
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource1.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource1.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource23.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        java.util.zip.Inflater inflater35 = gzipSource30.inflater;
        gzipSource30.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source40 = gzipSource30.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource41.inflaterSource;
        gzipSource30.source = gzipSource41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        java.util.zip.Inflater inflater60 = gzipSource59.inflater;
        gzipSource50.inflater = inflater60;
        gzipSource49.inflater = inflater60;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer63 = gzipSource49.buffer;
        gzipSource30.updateCrc(okBuffer63, (long) '#', (long) (-1));
        gzipSource23.updateCrc(okBuffer63, (long) 0, 0L);
        gzipSource0.buffer = okBuffer63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_72 = null;
        gzipSource71.crc = cRC32_72;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource74 = gzipSource71.inflaterSource;
        java.util.zip.CRC32 cRC32_75 = gzipSource71.crc;
        java.util.zip.Inflater inflater76 = gzipSource71.inflater;
        java.util.zip.CRC32 cRC32_77 = null;
        gzipSource71.crc = cRC32_77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer79 = null;
        gzipSource71.buffer = okBuffer79;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer81 = null;
        gzipSource71.buffer = okBuffer81;
        gzipSource0.source = gzipSource71;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer84 = gzipSource71.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource85 = gzipSource71.inflaterSource;
        java.util.zip.Inflater inflater86 = gzipSource71.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater86);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource0.source;
        int int23 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource24.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_30 = null;
        gzipSource29.crc = cRC32_30;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource29.inflaterSource;
        java.util.zip.CRC32 cRC32_33 = gzipSource29.crc;
        java.util.zip.Inflater inflater34 = gzipSource29.inflater;
        gzipSource29.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source39 = gzipSource29.source;
        gzipSource24.source = source39;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource24.inflaterSource;
        int int42 = gzipSource24.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater44 = null;
        gzipSource43.inflater = inflater44;
        int int46 = gzipSource43.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource43.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer48 = null;
        gzipSource43.buffer = okBuffer48;
        int int50 = gzipSource43.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource43.inflaterSource;
        gzipSource24.source = gzipSource43;
        java.util.zip.Inflater inflater53 = gzipSource43.inflater;
        int int54 = gzipSource43.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource43);
        com.squareup.okhttp.internal.bytes.Deadline deadline57 = null;
        gzipSource55.require((int) (byte) 0, deadline57);
        java.util.zip.CRC32 cRC32_59 = gzipSource55.crc;
        gzipSource0.source = gzipSource55;
        int int61 = gzipSource55.section;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater53);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_59);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 2;
        java.util.zip.Inflater inflater11 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = null;
        gzipSource0.inflaterSource = inflaterSource12;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", (int) (byte) 2, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000064 != expected 0x000002");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater11);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater11 = gzipSource0.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater11);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource33.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource47.inflaterSource;
        gzipSource47.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        gzipSource54.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource54);
        java.util.zip.Inflater inflater61 = gzipSource60.inflater;
        gzipSource47.inflater = inflater61;
        gzipSource42.inflater = inflater61;
        gzipSource33.inflater = inflater61;
        java.util.zip.CRC32 cRC32_65 = gzipSource33.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_68 = null;
        gzipSource67.crc = cRC32_68;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater71 = null;
        gzipSource70.inflater = inflater71;
        int int73 = gzipSource70.section;
        gzipSource70.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource70);
        java.util.zip.Inflater inflater77 = gzipSource76.inflater;
        gzipSource67.inflater = inflater77;
        gzipSource66.inflater = inflater77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource66.buffer;
        gzipSource33.buffer = okBuffer80;
        gzipSource0.updateCrc(okBuffer80, (long) '#', (long) (short) 0);
        gzipSource0.section = (byte) 2;
        int int87 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_65);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2 + "'", int87 == 2);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        java.util.zip.CRC32 cRC32_9 = gzipSource8.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource11.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        gzipSource14.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        java.util.zip.Inflater inflater21 = gzipSource20.inflater;
        gzipSource11.inflater = inflater21;
        gzipSource10.inflater = inflater21;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = gzipSource10.buffer;
        java.util.zip.CRC32 cRC32_25 = gzipSource10.crc;
        gzipSource8.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.Deadline deadline28 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long29 = gzipSource8.seek((byte) 3, deadline28);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_25);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = null;
        gzipSource0.inflaterSource = inflaterSource10;
        java.util.zip.CRC32 cRC32_12 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_13 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        gzipSource10.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = gzipSource10.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource19.inflater = inflater29;
        gzipSource18.inflater = inflater29;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource18.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = null;
        gzipSource18.inflaterSource = inflaterSource33;
        java.util.zip.CRC32 cRC32_35 = gzipSource18.crc;
        int int36 = gzipSource18.section;
        gzipSource10.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.Deadline deadline39 = null;
        gzipSource18.require((-1), deadline39);
        java.util.zip.Inflater inflater41 = gzipSource18.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater41);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        int int3 = gzipSource0.section;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        gzipSource0.source = gzipSource6;
        java.util.zip.CRC32 cRC32_10 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource11.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource11.inflaterSource;
        java.util.zip.CRC32 cRC32_15 = gzipSource11.crc;
        java.util.zip.Inflater inflater16 = gzipSource11.inflater;
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource11.crc = cRC32_17;
        java.util.zip.Inflater inflater19 = gzipSource11.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource20.inflaterSource;
        gzipSource20.section = (byte) 100;
        int int27 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_29 = null;
        gzipSource28.crc = cRC32_29;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource28.inflaterSource;
        java.util.zip.CRC32 cRC32_32 = gzipSource28.crc;
        java.util.zip.CRC32 cRC32_33 = null;
        gzipSource28.crc = cRC32_33;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource35.inflaterSource;
        java.util.zip.CRC32 cRC32_39 = gzipSource35.crc;
        java.util.zip.Inflater inflater40 = gzipSource35.inflater;
        gzipSource35.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source45 = gzipSource35.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource46.inflaterSource;
        gzipSource35.source = gzipSource46;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_56 = null;
        gzipSource55.crc = cRC32_56;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        int int61 = gzipSource58.section;
        gzipSource58.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource58);
        java.util.zip.Inflater inflater65 = gzipSource64.inflater;
        gzipSource55.inflater = inflater65;
        gzipSource54.inflater = inflater65;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer68 = gzipSource54.buffer;
        gzipSource35.updateCrc(okBuffer68, (long) '#', (long) (-1));
        gzipSource28.updateCrc(okBuffer68, (long) 0, 0L);
        gzipSource20.buffer = okBuffer68;
        gzipSource11.buffer = okBuffer68;
        gzipSource0.source = okBuffer68;
        com.squareup.okhttp.internal.bytes.Source source78 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source45);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource52);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source78);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater14 = gzipSource13.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        java.util.zip.Inflater inflater10 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Source source12 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        gzipSource14.section = (byte) -1;
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource14.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_23 = null;
        gzipSource22.crc = cRC32_23;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        gzipSource25.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource25);
        java.util.zip.Inflater inflater32 = gzipSource31.inflater;
        gzipSource22.inflater = inflater32;
        gzipSource14.inflater = inflater32;
        gzipSource13.inflater = inflater32;
        java.util.zip.CRC32 cRC32_36 = gzipSource13.crc;
        java.util.zip.CRC32 cRC32_37 = gzipSource13.crc;
        gzipSource0.crc = cRC32_37;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer10 = null;
        gzipSource0.buffer = okBuffer10;
        java.util.zip.CRC32 cRC32_12 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource13.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource18.inflaterSource;
        java.util.zip.CRC32 cRC32_22 = gzipSource18.crc;
        java.util.zip.Inflater inflater23 = gzipSource18.inflater;
        gzipSource18.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source28 = gzipSource18.source;
        gzipSource13.source = source28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource13.inflaterSource;
        int int31 = gzipSource13.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource13);
        java.util.zip.Inflater inflater33 = gzipSource32.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource34.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource39.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = gzipSource39.inflaterSource;
        java.util.zip.CRC32 cRC32_43 = gzipSource39.crc;
        java.util.zip.Inflater inflater44 = gzipSource39.inflater;
        gzipSource39.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source49 = gzipSource39.source;
        gzipSource34.source = source49;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource34.inflaterSource;
        int int52 = gzipSource34.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource57 = gzipSource53.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer58 = null;
        gzipSource53.buffer = okBuffer58;
        int int60 = gzipSource53.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource61 = gzipSource53.inflaterSource;
        gzipSource34.source = gzipSource53;
        java.util.zip.Inflater inflater63 = gzipSource53.inflater;
        java.util.zip.CRC32 cRC32_64 = gzipSource53.crc;
        gzipSource32.crc = cRC32_64;
        gzipSource0.source = gzipSource32;
        com.squareup.okhttp.internal.bytes.Deadline deadline68 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require(1, deadline68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource57);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_64);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        int int22 = gzipSource6.section;
        java.util.zip.CRC32 cRC32_23 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.Source source24 = gzipSource6.source;
        int int25 = gzipSource6.section;
        java.util.zip.Inflater inflater26 = gzipSource6.inflater;
        java.lang.Class<?> wildcardClass27 = gzipSource6.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        gzipSource10.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = gzipSource10.crc;
        int int18 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.Source source19 = gzipSource10.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source19);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource21.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = null;
        gzipSource21.buffer = okBuffer26;
        int int28 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.Source source29 = null;
        gzipSource21.source = source29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.CRC32 cRC32_32 = gzipSource21.crc;
        gzipSource10.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_32);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        int int9 = gzipSource6.section;
        gzipSource6.section = (byte) -1;
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource6.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource14.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        gzipSource17.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource17);
        java.util.zip.Inflater inflater24 = gzipSource23.inflater;
        gzipSource14.inflater = inflater24;
        gzipSource6.inflater = inflater24;
        gzipSource0.source = gzipSource6;
        com.squareup.okhttp.internal.bytes.Source source28 = gzipSource6.source;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource(source28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: source == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source28);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        gzipSource8.section = (byte) 0;
        gzipSource8.section = (-1);
        java.util.zip.CRC32 cRC32_13 = gzipSource8.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource9.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer17 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline19 = null;
        long long20 = gzipSource11.read(okBuffer17, (long) 100, deadline19);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_22 = null;
        gzipSource21.crc = cRC32_22;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource21.inflaterSource;
        java.util.zip.CRC32 cRC32_25 = gzipSource21.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater27 = null;
        gzipSource26.inflater = inflater27;
        int int29 = gzipSource26.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource26.inflaterSource;
        gzipSource26.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.Inflater inflater40 = gzipSource39.inflater;
        gzipSource26.inflater = inflater40;
        gzipSource21.inflater = inflater40;
        gzipSource11.inflater = inflater40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline51 = null;
        gzipSource44.require((int) (byte) -1, deadline51);
        gzipSource44.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer55 = gzipSource44.buffer;
        gzipSource11.buffer = okBuffer55;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater58 = null;
        gzipSource57.inflater = inflater58;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater61 = null;
        gzipSource60.inflater = inflater61;
        int int63 = gzipSource60.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource64 = gzipSource60.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer65 = null;
        gzipSource60.buffer = okBuffer65;
        gzipSource60.section = (byte) -1;
        java.util.zip.Inflater inflater69 = gzipSource60.inflater;
        java.util.zip.CRC32 cRC32_70 = gzipSource60.crc;
        gzipSource57.crc = cRC32_70;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int73 = gzipSource72.section;
        java.util.zip.CRC32 cRC32_74 = gzipSource72.crc;
        gzipSource57.crc = cRC32_74;
        gzipSource11.crc = cRC32_74;
        gzipSource9.crc = cRC32_74;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer55);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_70);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_74);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource22.inflaterSource;
        java.util.zip.Inflater inflater27 = gzipSource22.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource22.inflaterSource;
        java.util.zip.Inflater inflater29 = gzipSource22.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        gzipSource31.section = (byte) -1;
        java.util.zip.CRC32 cRC32_37 = null;
        gzipSource31.crc = cRC32_37;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource39.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        java.util.zip.Inflater inflater49 = gzipSource48.inflater;
        gzipSource39.inflater = inflater49;
        gzipSource31.inflater = inflater49;
        gzipSource30.inflater = inflater49;
        gzipSource22.inflater = inflater49;
        gzipSource21.source = gzipSource22;
        gzipSource22.section = (short) 1;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater49);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((int) (short) 0, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        gzipSource16.require((-1), deadline18);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = null;
        gzipSource20.inflaterSource = inflaterSource27;
        gzipSource16.source = inflaterSource27;
        java.util.zip.CRC32 cRC32_30 = gzipSource16.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        gzipSource31.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource31);
        java.util.zip.Inflater inflater38 = gzipSource37.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource37);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource39);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        java.util.zip.CRC32 cRC32_48 = null;
        gzipSource42.crc = cRC32_48;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        java.util.zip.Inflater inflater60 = gzipSource59.inflater;
        gzipSource50.inflater = inflater60;
        gzipSource42.inflater = inflater60;
        gzipSource41.inflater = inflater60;
        gzipSource40.inflater = inflater60;
        int int65 = gzipSource40.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater67 = null;
        gzipSource66.inflater = inflater67;
        int int69 = gzipSource66.section;
        gzipSource66.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource66);
        java.util.zip.Inflater inflater73 = gzipSource72.inflater;
        gzipSource72.section = (byte) -1;
        java.util.zip.Inflater inflater76 = gzipSource72.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource77 = gzipSource72.inflaterSource;
        gzipSource40.inflaterSource = inflaterSource77;
        gzipSource16.inflaterSource = inflaterSource77;
        gzipSource6.inflaterSource = inflaterSource77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer81 = gzipSource6.buffer;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer81);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource18.inflaterSource;
        int int22 = gzipSource18.section;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource18.source;
        gzipSource18.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = gzipSource18.buffer;
        gzipSource0.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.Inflater inflater40 = gzipSource39.inflater;
        gzipSource30.inflater = inflater40;
        gzipSource29.inflater = inflater40;
        gzipSource29.section = 'a';
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater46 = null;
        gzipSource45.inflater = inflater46;
        int int48 = gzipSource45.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = gzipSource45.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource53 = gzipSource50.inflaterSource;
        java.util.zip.CRC32 cRC32_54 = gzipSource50.crc;
        java.util.zip.Inflater inflater55 = gzipSource50.inflater;
        gzipSource50.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source60 = gzipSource50.source;
        gzipSource45.source = source60;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource62 = gzipSource45.inflaterSource;
        int int63 = gzipSource45.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater65 = null;
        gzipSource64.inflater = inflater65;
        int int67 = gzipSource64.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource68 = gzipSource64.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer69 = null;
        gzipSource64.buffer = okBuffer69;
        int int71 = gzipSource64.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource72 = gzipSource64.inflaterSource;
        gzipSource45.source = gzipSource64;
        java.util.zip.Inflater inflater74 = gzipSource64.inflater;
        java.util.zip.CRC32 cRC32_75 = gzipSource64.crc;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource76 = gzipSource64.inflaterSource;
        gzipSource29.source = inflaterSource76;
        gzipSource0.source = gzipSource29;
        com.squareup.okhttp.internal.bytes.Deadline deadline80 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long81 = gzipSource0.seek((byte) 10, deadline80);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource62);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource68);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource76);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        gzipSource0.checkEqual("hi!", (-1), (int) (byte) -1);
        gzipSource0.section = (short) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource13.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer18 = null;
        gzipSource13.buffer = okBuffer18;
        int int20 = gzipSource13.section;
        java.util.zip.Inflater inflater21 = gzipSource13.inflater;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource13.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource23.inflaterSource;
        gzipSource23.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline31 = null;
        gzipSource23.require((int) (short) -1, deadline31);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource40 = null;
        gzipSource33.inflaterSource = inflaterSource40;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = gzipSource33.inflaterSource;
        gzipSource23.source = gzipSource33;
        com.squareup.okhttp.internal.bytes.Source source44 = gzipSource23.source;
        gzipSource13.source = source44;
        gzipSource0.source = gzipSource13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_48 = null;
        gzipSource47.crc = cRC32_48;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource50 = gzipSource47.inflaterSource;
        int int51 = gzipSource47.section;
        com.squareup.okhttp.internal.bytes.Source source52 = gzipSource47.source;
        gzipSource47.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer55 = gzipSource47.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer56 = gzipSource47.buffer;
        gzipSource0.updateCrc(okBuffer56, (long) 'a', 0L);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer56);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer15 = gzipSource10.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        gzipSource16.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        java.util.zip.Inflater inflater23 = gzipSource22.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        gzipSource27.section = (byte) -1;
        java.util.zip.CRC32 cRC32_33 = null;
        gzipSource27.crc = cRC32_33;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource35.inflater = inflater45;
        gzipSource27.inflater = inflater45;
        gzipSource26.inflater = inflater45;
        gzipSource25.inflater = inflater45;
        int int50 = gzipSource25.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater52 = null;
        gzipSource51.inflater = inflater52;
        int int54 = gzipSource51.section;
        gzipSource51.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource51);
        java.util.zip.Inflater inflater58 = gzipSource57.inflater;
        gzipSource57.section = (byte) -1;
        java.util.zip.Inflater inflater61 = gzipSource57.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource62 = gzipSource57.inflaterSource;
        gzipSource25.inflaterSource = inflaterSource62;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_65 = null;
        gzipSource64.crc = cRC32_65;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource67 = gzipSource64.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource68 = gzipSource64.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater70 = null;
        gzipSource69.inflater = inflater70;
        int int72 = gzipSource69.section;
        gzipSource69.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource69);
        com.squareup.okhttp.internal.bytes.Deadline deadline77 = null;
        gzipSource75.require((-1), deadline77);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource79 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater80 = null;
        gzipSource79.inflater = inflater80;
        int int82 = gzipSource79.section;
        gzipSource79.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource85 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource79);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource86 = null;
        gzipSource79.inflaterSource = inflaterSource86;
        gzipSource75.source = inflaterSource86;
        java.util.zip.CRC32 cRC32_89 = gzipSource75.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer90 = gzipSource75.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource91 = gzipSource75.inflaterSource;
        gzipSource64.inflaterSource = inflaterSource91;
        gzipSource25.inflaterSource = inflaterSource91;
        gzipSource10.inflaterSource = inflaterSource91;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource68);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource91);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = null;
        gzipSource0.inflaterSource = inflaterSource3;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource10.inflaterSource;
        gzipSource10.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        gzipSource10.require((int) (short) -1, deadline18);
        com.squareup.okhttp.internal.bytes.Source source20 = gzipSource10.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource21.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource35.inflaterSource;
        gzipSource35.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        java.util.zip.Inflater inflater49 = gzipSource48.inflater;
        gzipSource35.inflater = inflater49;
        gzipSource30.inflater = inflater49;
        gzipSource21.inflater = inflater49;
        gzipSource10.inflater = inflater49;
        gzipSource0.inflater = inflater49;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer55 = gzipSource0.buffer;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer55);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.section = 100;
        int int8 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource11.inflaterSource;
        gzipSource0.source = gzipSource11;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        java.util.zip.Inflater inflater24 = gzipSource19.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = gzipSource19.buffer;
        gzipSource11.updateCrc(okBuffer26, 100L, 0L);
        gzipSource11.section = (short) -1;
        gzipSource11.section = 10;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer26);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater4 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline6 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long7 = gzipSource0.seek((byte) 1, deadline6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater4);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        java.util.zip.CRC32 cRC32_30 = gzipSource19.crc;
        com.squareup.okhttp.internal.bytes.Source source31 = gzipSource19.source;
        int int32 = gzipSource19.section;
        java.util.zip.Inflater inflater33 = gzipSource19.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater33);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        gzipSource0.source = gzipSource6;
        int int10 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = null;
        gzipSource11.inflaterSource = inflaterSource15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        gzipSource17.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource17);
        java.util.zip.Inflater inflater24 = gzipSource23.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource23);
        gzipSource25.section = (byte) 0;
        gzipSource25.section = (-1);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource25.inflaterSource;
        gzipSource11.inflaterSource = inflaterSource30;
        gzipSource0.inflaterSource = inflaterSource30;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource33);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        int int11 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline13 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = null;
        gzipSource0.inflaterSource = inflaterSource3;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource5 = null;
        gzipSource0.inflaterSource = inflaterSource5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        java.util.zip.CRC32 cRC32_12 = gzipSource8.crc;
        java.util.zip.Inflater inflater13 = gzipSource8.inflater;
        gzipSource8.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source18 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.Source source19 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_22 = null;
        gzipSource21.crc = cRC32_22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource21.inflater = inflater31;
        gzipSource20.inflater = inflater31;
        gzipSource8.inflater = inflater31;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource35.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = null;
        gzipSource35.buffer = okBuffer40;
        gzipSource35.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = null;
        gzipSource35.inflaterSource = inflaterSource44;
        com.squareup.okhttp.internal.bytes.Source source46 = gzipSource35.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer47 = null;
        gzipSource35.buffer = okBuffer47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        java.util.zip.Inflater inflater60 = gzipSource59.inflater;
        gzipSource50.inflater = inflater60;
        gzipSource49.inflater = inflater60;
        gzipSource35.inflater = inflater60;
        gzipSource8.inflater = inflater60;
        gzipSource0.inflater = inflater60;
        com.squareup.okhttp.internal.bytes.Source source66 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer67 = gzipSource0.buffer;
        gzipSource0.section = (byte) 0;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer67);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater12 = gzipSource11.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater12);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        java.util.zip.CRC32 cRC32_22 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        gzipSource23.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource23);
        java.util.zip.CRC32 cRC32_30 = null;
        gzipSource23.crc = cRC32_30;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_33 = null;
        gzipSource32.crc = cRC32_33;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource32.inflaterSource;
        java.util.zip.CRC32 cRC32_36 = gzipSource32.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater38 = null;
        gzipSource37.inflater = inflater38;
        int int40 = gzipSource37.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource37.inflaterSource;
        gzipSource37.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        java.util.zip.Inflater inflater51 = gzipSource50.inflater;
        gzipSource37.inflater = inflater51;
        gzipSource32.inflater = inflater51;
        gzipSource23.inflater = inflater51;
        gzipSource6.source = gzipSource23;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater57 = null;
        gzipSource56.inflater = inflater57;
        int int59 = gzipSource56.section;
        gzipSource56.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource56);
        java.util.zip.Inflater inflater63 = gzipSource62.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource62);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource64);
        java.util.zip.CRC32 cRC32_66 = gzipSource65.crc;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource67 = gzipSource65.inflaterSource;
        gzipSource23.inflaterSource = inflaterSource67;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource23.checkEqual("", (int) (byte) 100, 3);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000003 != expected 0x000064");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource67);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        int int30 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        com.squareup.okhttp.internal.bytes.Deadline deadline33 = null;
        gzipSource31.require((int) (byte) 0, deadline33);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        gzipSource35.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer41 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline43 = null;
        long long44 = gzipSource35.read(okBuffer41, (long) 100, deadline43);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_46 = null;
        gzipSource45.crc = cRC32_46;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource48 = gzipSource45.inflaterSource;
        java.util.zip.CRC32 cRC32_49 = gzipSource45.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater51 = null;
        gzipSource50.inflater = inflater51;
        int int53 = gzipSource50.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource54 = gzipSource50.inflaterSource;
        gzipSource50.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater58 = null;
        gzipSource57.inflater = inflater58;
        int int60 = gzipSource57.section;
        gzipSource57.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource57);
        java.util.zip.Inflater inflater64 = gzipSource63.inflater;
        gzipSource50.inflater = inflater64;
        gzipSource45.inflater = inflater64;
        gzipSource35.inflater = inflater64;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource68 = gzipSource35.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater70 = null;
        gzipSource69.inflater = inflater70;
        int int72 = gzipSource69.section;
        gzipSource69.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource69);
        java.util.zip.Inflater inflater76 = gzipSource75.inflater;
        gzipSource75.section = (byte) -1;
        java.util.zip.Inflater inflater79 = gzipSource75.inflater;
        com.squareup.okhttp.internal.bytes.Source source80 = gzipSource75.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer81 = gzipSource75.buffer;
        java.util.zip.CRC32 cRC32_82 = gzipSource75.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource83 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater84 = null;
        gzipSource83.inflater = inflater84;
        int int86 = gzipSource83.section;
        gzipSource83.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource89 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource83);
        com.squareup.okhttp.internal.bytes.Source source90 = gzipSource83.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource91 = gzipSource83.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer92 = gzipSource83.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline94 = null;
        long long95 = gzipSource75.read(okBuffer92, 10L, deadline94);
        gzipSource35.buffer = okBuffer92;
        com.squareup.okhttp.internal.bytes.Deadline deadline98 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long99 = gzipSource31.read(okBuffer92, (long) 100, deadline98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_49);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource54);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource68);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_82);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int86 + "' != '" + 100 + "'", int86 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + (-1L) + "'", long95 == (-1L));
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        java.util.zip.Inflater inflater10 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource17);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource22.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.Inflater inflater40 = gzipSource39.inflater;
        gzipSource30.inflater = inflater40;
        gzipSource22.inflater = inflater40;
        gzipSource21.inflater = inflater40;
        gzipSource20.inflater = inflater40;
        gzipSource0.inflater = inflater40;
        gzipSource0.section = (short) -1;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater40);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 2;
        java.util.zip.Inflater inflater11 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline13 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (byte) 2, deadline13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater11);
    }
}
