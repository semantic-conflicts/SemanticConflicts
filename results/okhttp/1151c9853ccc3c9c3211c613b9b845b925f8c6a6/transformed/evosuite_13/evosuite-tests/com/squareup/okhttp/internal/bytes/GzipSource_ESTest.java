/*
 * This file was automatically generated by EvoSuite
 * Mon May 25 22:06:08 GMT 2020
 */

package com.squareup.okhttp.internal.bytes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.squareup.okhttp.internal.bytes.ByteString;
import com.squareup.okhttp.internal.bytes.Deadline;
import com.squareup.okhttp.internal.bytes.GzipSource;
import com.squareup.okhttp.internal.bytes.InflaterSource;
import com.squareup.okhttp.internal.bytes.OkBuffer;
import com.squareup.okhttp.internal.bytes.Segment;
import java.io.EOFException;
import java.io.IOException;
import java.util.List;
import java.util.concurrent.TimeUnit;
import java.util.zip.CRC32;
import java.util.zip.Inflater;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GzipSource_ESTest extends GzipSource_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      int int0 = 0;
      OkBuffer okBuffer0 = gzipSource0.buffer.writeByte(int0);
      long long0 = 4L;
      Deadline deadline0 = new Deadline();
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer0, long0, deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer.writeInt(gzipSource0.section);
      GzipSource gzipSource1 = new GzipSource(okBuffer0);
      gzipSource1.updateCrc(gzipSource0.buffer, gzipSource0.section, gzipSource0.SECTION_BODY);
      Deadline deadline0 = new Deadline();
      try { 
        gzipSource1.consumeTrailer(deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = new Deadline();
      String string0 = "";
      int int0 = (-1699);
      gzipSource0.checkEqual(string0, int0, int0);
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      OkBuffer okBuffer1 = okBuffer0.writeInt(gzipSource0.SECTION_HEADER);
      OkBuffer okBuffer2 = okBuffer1.writeShort(gzipSource0.SECTION_BODY);
      GzipSource gzipSource1 = new GzipSource(okBuffer2);
      Deadline deadline0 = new Deadline();
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      long long0 = gzipSource1.read(okBuffer1, gzipSource0.section, deadline0);
      long long1 = (-13L);
      // Undeclared exception!
      try { 
        gzipSource1.read(okBuffer2, long1, deadline0);
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -13
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      Deadline deadline0 = null;
      gzipSource0.require(int0, deadline0);
      gzipSource0.close(deadline0);
      long long0 = (-1L);
      long long1 = 3337L;
      // Undeclared exception!
      try { 
        gzipSource0.updateCrc(okBuffer0, long0, long1);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.zip.CRC32", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      GzipSource gzipSource1 = new GzipSource(gzipSource0);
      byte byte0 = (byte) (-82);
      byte byte1 = (byte)14;
      GzipSource.FNAME = byte1;
      byte byte2 = (byte) (-5);
      GzipSource.FCOMMENT = byte2;
      GzipSource.SECTION_HEADER = byte0;
      byte byte3 = (byte) (-32);
      Deadline deadline0 = new Deadline();
      try { 
        gzipSource1.seek(byte3, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      GzipSource gzipSource1 = new GzipSource();
      int int0 = 1060;
      Deadline deadline0 = Deadline.NONE;
      // Undeclared exception!
      try { 
        gzipSource1.require(int0, deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      long long0 = 1049L;
      Deadline deadline0 = new Deadline();
      try { 
        deadline0.throwIfReached();
      } catch(IOException e) {
         //
         // Deadline reached
         //
         verifyException("com.squareup.okhttp.internal.bytes.Deadline", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 2145380333;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      int int1 = (-13);
      OkBuffer okBuffer2 = okBuffer1.writeInt(int1);
      OkBuffer okBuffer3 = okBuffer1.writeInt(int1);
      byte byte0 = okBuffer0.readByte();
      int int2 = 0;
      OkBuffer okBuffer4 = okBuffer3.writeByte(int2);
      GzipSource gzipSource0 = new GzipSource(okBuffer4);
      byte byte1 = (byte)0;
      Deadline deadline0 = new Deadline();
      long long0 = gzipSource0.seek(byte1, deadline0);
      int int3 = (-1008);
      gzipSource0.require(int3, deadline0);
      try { 
        gzipSource0.consumeHeader(deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0xffffdfe7 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      int int1 = (-13);
      int int2 = (-2126221432);
      OkBuffer okBuffer2 = okBuffer1.writeInt(int2);
      OkBuffer okBuffer3 = okBuffer1.writeInt(int1);
      byte byte0 = okBuffer0.readByte();
      int int3 = 0;
      OkBuffer okBuffer4 = okBuffer3.writeByte(int3);
      GzipSource gzipSource0 = new GzipSource(okBuffer4);
      byte byte1 = (byte)0;
      Deadline deadline0 = new Deadline();
      long long0 = gzipSource0.seek(byte1, deadline0);
      gzipSource0.require(byte1, deadline0);
      int int4 = (-1008);
      gzipSource0.require(int4, deadline0);
      try { 
        gzipSource0.consumeHeader(deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x000000 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer.writeInt(gzipSource0.FCOMMENT);
      OkBuffer okBuffer1 = okBuffer0.writeInt(gzipSource0.section);
      GzipSource gzipSource1 = new GzipSource(okBuffer1);
      gzipSource1.updateCrc(gzipSource0.buffer, gzipSource0.section, gzipSource0.SECTION_BODY);
      Deadline deadline0 = new Deadline();
      try { 
        gzipSource1.consumeTrailer(deadline0);
      } catch(IOException e) {
         //
         // CRC: actual 0xd202ef8d != expected 0x4000000
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = null;
      // Undeclared exception!
      try { 
        gzipSource0.consumeHeader(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      String string0 = "41:CwD<=_8fV3";
      int int0 = 2924;
      gzipSource0.checkEqual(string0, int0, int0);
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      int int0 = (-2990);
      GzipSource.FEXTRA = gzipSource0.FEXTRA;
      Deadline deadline0 = null;
      gzipSource0.require(int0, deadline0);
      String string0 = "G\\)a9!Xpx3L9m -";
      int int1 = 0;
      gzipSource0.checkEqual(string0, int1, int1);
      int int2 = 49;
      try { 
        gzipSource0.checkEqual(string0, int0, int2);
      } catch(IOException e) {
         //
         // G\\)a9!Xpx3L9m -: actual 0x000031 != expected 0xfffff452
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = new Deadline();
      long long0 = (-1L);
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      Deadline deadline1 = deadline0.start(long0, timeUnit0);
      // Undeclared exception!
      try { 
        gzipSource0.close(deadline1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      Deadline deadline0 = Deadline.NONE;
      gzipSource0.close(deadline0);
      try { 
        gzipSource0.consumeHeader(deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      InflaterSource inflaterSource0 = gzipSource0.inflaterSource;
      GzipSource gzipSource1 = null;
      try {
        gzipSource1 = new GzipSource(inflaterSource0);
      } catch(IllegalArgumentException e) {
         //
         // source == null
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = new Deadline();
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      Deadline deadline1 = deadline0.start(gzipSource0.FNAME, timeUnit0);
      // Undeclared exception!
      try { 
        gzipSource0.consumeHeader(deadline1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      byte byte0 = (byte)100;
      String string0 = null;
      GzipSource.SECTION_BODY = gzipSource0.SECTION_DONE;
      int int0 = 0;
      try { 
        gzipSource0.checkEqual(string0, byte0, int0);
      } catch(IOException e) {
         //
         // null: actual 0x000000 != expected 0x000064
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      int int0 = 8;
      OkBuffer okBuffer1 = okBuffer0.writeByte(int0);
      GzipSource gzipSource1 = new GzipSource(okBuffer1);
      int int1 = 1060;
      Deadline deadline0 = Deadline.NONE;
      try { 
        gzipSource1.require(int1, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      GzipSource gzipSource1 = new GzipSource(gzipSource0);
      Deadline deadline0 = Deadline.NONE;
      // Undeclared exception!
      try { 
        gzipSource1.consumeTrailer(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 2366;
      OkBuffer okBuffer1 = okBuffer0.writeByte(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      // Undeclared exception!
      try { 
        gzipSource0.updateCrc(okBuffer0, int0, int0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.zip.CRC32", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer.writeInt(gzipSource0.FNAME);
      int int0 = 2642;
      gzipSource0.section = int0;
      long long0 = 0L;
      int int1 = 0;
      ByteString byteString0 = okBuffer0.readByteString(int1);
      long long1 = 0L;
      gzipSource0.updateCrc(okBuffer0, long0, long1);
      String string0 = "byteCount < 4: ";
      int int2 = (-3338);
      try { 
        gzipSource0.checkEqual(string0, int0, int2);
      } catch(IOException e) {
         //
         // byteCount < 4: : actual 0xfffff2f6 != expected 0x000a52
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      int int0 = 0;
      OkBuffer okBuffer0 = gzipSource0.buffer.writeByte(int0);
      long long0 = 4L;
      Segment segment0 = gzipSource0.buffer.head;
      okBuffer0.head = segment0;
      Deadline deadline0 = new Deadline();
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      Deadline deadline1 = deadline0.start(gzipSource0.FNAME, timeUnit0);
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer0, long0, deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      OkBuffer okBuffer1 = okBuffer0.writeInt(gzipSource0.section);
      GzipSource gzipSource1 = new GzipSource(okBuffer1);
      gzipSource1.updateCrc(gzipSource0.buffer, gzipSource0.section, gzipSource0.SECTION_BODY);
      Deadline deadline0 = new Deadline();
      try { 
        gzipSource1.consumeTrailer(deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      boolean boolean0 = true;
      Inflater inflater0 = new Inflater(boolean0);
      InflaterSource inflaterSource0 = new InflaterSource(okBuffer0, inflater0, okBuffer0);
      GzipSource gzipSource0 = new GzipSource(inflaterSource0);
      inflater0.end();
      Deadline deadline0 = new Deadline();
      long long0 = 0L;
      long long1 = inflaterSource0.read(gzipSource0.buffer, long0, deadline0);
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      Deadline deadline1 = deadline0.start(gzipSource0.FHCRC, timeUnit0);
      long long2 = inflaterSource0.read(okBuffer0, gzipSource0.section, deadline1);
      gzipSource0.close(deadline0);
      int int0 = 57;
      gzipSource0.section = int0;
      CRC32 cRC32_0 = new CRC32();
      gzipSource0.crc = cRC32_0;
      Deadline deadline2 = deadline0.start(gzipSource0.FHCRC, timeUnit0);
      gzipSource0.close(deadline2);
      // Undeclared exception!
      try { 
        gzipSource0.consumeTrailer(deadline1);
      } catch(IllegalStateException e) {
         //
         // closed
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      String string0 = " z";
      int int0 = 8;
      Deadline deadline0 = Deadline.NONE;
      deadline0.throwIfReached();
      // Undeclared exception!
      try { 
        gzipSource0.require(int0, deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      OkBuffer okBuffer1 = okBuffer0.writeInt(gzipSource0.SECTION_HEADER);
      OkBuffer okBuffer2 = okBuffer1.writeShort(gzipSource0.SECTION_BODY);
      GzipSource gzipSource1 = new GzipSource(okBuffer2);
      Deadline deadline0 = new Deadline();
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      Deadline deadline1 = deadline0.start(gzipSource0.SECTION_TRAILER, timeUnit0);
      long long0 = gzipSource1.read(okBuffer1, gzipSource0.section, deadline1);
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      byte byte0 = (byte) (-1);
      GzipSource.FEXTRA = byte0;
      byte byte1 = (byte)6;
      GzipSource.FHCRC = byte1;
      GzipSource.SECTION_BODY = gzipSource0.FCOMMENT;
      byte byte2 = (byte) (-97);
      Deadline deadline0 = new Deadline();
      // Undeclared exception!
      try { 
        gzipSource0.seek(byte2, deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      int int0 = 10;
      gzipSource0.section = int0;
      GzipSource gzipSource1 = new GzipSource(gzipSource0);
      gzipSource1.inflaterSource = gzipSource0.inflaterSource;
      gzipSource0.inflaterSource = gzipSource1.inflaterSource;
      long long0 = 8L;
      // Undeclared exception!
      try { 
        gzipSource1.updateCrc(gzipSource0.buffer, long0, gzipSource0.SECTION_BODY);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      Inflater inflater0 = new Inflater();
      InflaterSource inflaterSource0 = new InflaterSource(okBuffer1, inflater0, okBuffer1);
      GzipSource gzipSource0 = new GzipSource(inflaterSource0);
      byte byte0 = (byte)4;
      int int1 = (-3388);
      OkBuffer okBuffer2 = okBuffer1.writeInt(int1);
      Deadline deadline0 = new Deadline();
      GzipSource.FHCRC = gzipSource0.FHCRC;
      long long0 = 0L;
      long long1 = inflaterSource0.read(okBuffer0, long0, deadline0);
      inflater0.end();
      gzipSource0.require(int0, deadline0);
      inflaterSource0.close(deadline0);
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      Deadline deadline1 = deadline0.start(gzipSource0.FHCRC, timeUnit0);
      // Undeclared exception!
      try { 
        gzipSource0.seek(byte0, deadline1);
      } catch(IllegalStateException e) {
         //
         // closed
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      byte byte0 = (byte)0;
      GzipSource.FHCRC = byte0;
      OkBuffer okBuffer0 = gzipSource0.buffer;
      byte byte1 = (byte)0;
      GzipSource.SECTION_TRAILER = byte1;
      long long0 = (-2785L);
      Deadline deadline0 = Deadline.NONE;
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer0, long0, deadline0);
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -2785
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test32()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      OkBuffer okBuffer1 = okBuffer0.writeByte(gzipSource0.SECTION_HEADER);
      GzipSource gzipSource1 = new GzipSource(okBuffer1);
      byte byte0 = (byte)21;
      Deadline deadline0 = new Deadline();
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      Deadline deadline1 = deadline0.start(gzipSource1.FEXTRA, timeUnit0);
      try { 
        gzipSource1.seek(byte0, deadline1);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test33()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      int int1 = 0;
      OkBuffer okBuffer2 = okBuffer1.writeInt(int1);
      byte byte0 = okBuffer0.readByte();
      int int2 = 0;
      OkBuffer okBuffer3 = okBuffer2.writeByte(int2);
      GzipSource gzipSource0 = new GzipSource(okBuffer3);
      byte byte1 = (byte)0;
      Deadline deadline0 = new Deadline();
      long long0 = gzipSource0.seek(byte1, deadline0);
      gzipSource0.require(byte1, deadline0);
      int int3 = (-1008);
      gzipSource0.require(int3, deadline0);
      try { 
        gzipSource0.consumeHeader(deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test34()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      GzipSource gzipSource1 = new GzipSource(okBuffer0);
      Deadline deadline0 = Deadline.NONE;
      gzipSource1.close(deadline0);
      // Undeclared exception!
      try { 
        gzipSource0.consumeTrailer(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test35()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      long long0 = (-1454L);
      gzipSource0.updateCrc(okBuffer0, long0, long0);
      int int0 = (-1437);
      Deadline deadline0 = Deadline.NONE;
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      // Undeclared exception!
      try { 
        deadline0.start(gzipSource0.FHCRC, timeUnit0);
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.Deadline$1", e);
      }
  }

  @Test(timeout = 11000)
  public void test36()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      long long0 = (-1251L);
      okBuffer0.byteCount = long0;
      GzipSource gzipSource1 = new GzipSource(okBuffer0);
      Deadline deadline0 = Deadline.NONE;
      // Undeclared exception!
      try { 
        gzipSource1.consumeTrailer(deadline0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.Util", e);
      }
  }

  @Test(timeout = 11000)
  public void test37()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      byte byte0 = (byte) (-6);
      GzipSource.FEXTRA = byte0;
      OkBuffer okBuffer2 = gzipSource0.buffer;
      GzipSource gzipSource1 = new GzipSource(okBuffer2);
      gzipSource1.crc = gzipSource0.crc;
      List<Integer> list0 = okBuffer1.segmentSizes();
      long long0 = 1L;
      Deadline deadline0 = new Deadline();
      try { 
        gzipSource1.read(okBuffer0, long0, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test38()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 1214;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      boolean boolean0 = false;
      Inflater inflater0 = new Inflater(boolean0);
      InflaterSource inflaterSource0 = new InflaterSource(okBuffer1, inflater0);
      GzipSource gzipSource0 = new GzipSource(inflaterSource0);
      Deadline deadline0 = null;
      try { 
        gzipSource0.consumeTrailer(deadline0);
      } catch(IOException e) {
         //
         // java.util.zip.DataFormatException: unknown compression method
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test39()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 703;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      Inflater inflater0 = new Inflater();
      InflaterSource inflaterSource0 = new InflaterSource(okBuffer1, inflater0);
      GzipSource gzipSource0 = new GzipSource(inflaterSource0);
      OkBuffer okBuffer2 = gzipSource0.buffer;
      long long0 = 3L;
      long long1 = (-1805L);
      gzipSource0.updateCrc(okBuffer2, long0, long1);
      Deadline deadline0 = Deadline.NONE;
      try { 
        gzipSource0.require(int0, deadline0);
      } catch(IOException e) {
         //
         // java.util.zip.DataFormatException: incorrect header check
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test40()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      OkBuffer okBuffer1 = okBuffer0.writeByte(gzipSource0.FEXTRA);
      OkBuffer okBuffer2 = okBuffer1.writeInt(gzipSource0.SECTION_HEADER);
      GzipSource gzipSource1 = new GzipSource(okBuffer2);
      String string0 = "";
      int int0 = 2;
      gzipSource1.checkEqual(string0, int0, int0);
      GzipSource.SECTION_HEADER = gzipSource1.FNAME;
      long long0 = 2L;
      Deadline deadline0 = Deadline.NONE;
      long long1 = gzipSource0.read(gzipSource1.buffer, long0, deadline0);
  }

  @Test(timeout = 11000)
  public void test41()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer.writeInt(gzipSource0.FCOMMENT);
      OkBuffer okBuffer1 = okBuffer0.writeInt(gzipSource0.section);
      GzipSource gzipSource1 = new GzipSource(okBuffer1);
      gzipSource1.updateCrc(gzipSource0.buffer, gzipSource0.section, gzipSource0.SECTION_BODY);
      Deadline deadline0 = new Deadline();
      try { 
        gzipSource1.consumeTrailer(deadline0);
      } catch(IOException e) {
         //
         // CRC: actual 0xd202ef8d != expected 0x4000000
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test42()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = (-3025);
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      int int1 = (-13);
      OkBuffer okBuffer2 = okBuffer1.writeInt(int1);
      byte byte0 = okBuffer0.readByte();
      int int2 = 0;
      OkBuffer okBuffer3 = okBuffer2.writeByte(int2);
      GzipSource gzipSource0 = new GzipSource(okBuffer3);
      byte byte1 = (byte)0;
      Deadline deadline0 = new Deadline();
      long long0 = gzipSource0.seek(byte1, deadline0);
      gzipSource0.require(byte1, deadline0);
      int int3 = (-1008);
      gzipSource0.require(int3, deadline0);
      try { 
        gzipSource0.consumeHeader(deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test43()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      GzipSource gzipSource1 = new GzipSource(gzipSource0);
      byte byte0 = (byte) (-82);
      byte byte1 = (byte)14;
      GzipSource.FNAME = byte1;
      byte byte2 = (byte) (-5);
      GzipSource.FCOMMENT = byte2;
      byte byte3 = (byte)0;
      GzipSource.SECTION_TRAILER = byte3;
      GzipSource.SECTION_HEADER = byte0;
      byte byte4 = (byte) (-31);
      Deadline deadline0 = new Deadline();
      // Undeclared exception!
      try { 
        gzipSource1.seek(byte4, deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test44()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      int int1 = (-13);
      int int2 = 51;
      OkBuffer okBuffer2 = okBuffer1.writeInt(int2);
      OkBuffer okBuffer3 = okBuffer1.writeInt(int1);
      byte byte0 = okBuffer0.readByte();
      int int3 = 0;
      OkBuffer okBuffer4 = okBuffer3.writeByte(int3);
      GzipSource gzipSource0 = new GzipSource(okBuffer4);
      byte byte1 = (byte)0;
      Deadline deadline0 = new Deadline();
      long long0 = gzipSource0.seek(byte1, deadline0);
      gzipSource0.require(byte1, deadline0);
      int int4 = (-1008);
      gzipSource0.require(int4, deadline0);
      try { 
        gzipSource0.consumeHeader(deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x000000 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test45()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      GzipSource gzipSource1 = new GzipSource(gzipSource0);
      byte byte0 = (byte) (-82);
      byte byte1 = (byte)14;
      GzipSource.FNAME = byte1;
      byte byte2 = (byte)95;
      GzipSource.FHCRC = byte2;
      byte byte3 = (byte) (-5);
      GzipSource.FCOMMENT = byte3;
      GzipSource.SECTION_HEADER = byte0;
      byte byte4 = (byte) (-32);
      OkBuffer okBuffer0 = gzipSource1.buffer.writeInt(gzipSource0.SECTION_DONE);
      long long0 = (-1L);
      gzipSource1.updateCrc(okBuffer0, GzipSource.FCOMMENT, long0);
      Deadline deadline0 = new Deadline();
      try { 
        gzipSource1.seek(byte4, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test46()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      OkBuffer okBuffer1 = okBuffer0.writeInt(gzipSource0.SECTION_HEADER);
      long long0 = 1048576L;
      long long1 = 987L;
      // Undeclared exception!
      gzipSource0.updateCrc(okBuffer0, long0, long1);
  }

  @Test(timeout = 11000)
  public void test47()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      int int1 = (-13);
      OkBuffer okBuffer2 = okBuffer1.writeInt(int1);
      OkBuffer okBuffer3 = okBuffer1.writeInt(int1);
      byte byte0 = okBuffer0.readByte();
      int int2 = 0;
      OkBuffer okBuffer4 = okBuffer3.writeByte(int2);
      GzipSource gzipSource0 = new GzipSource(okBuffer4);
      byte byte1 = (byte)0;
      Deadline deadline0 = new Deadline();
      long long0 = gzipSource0.seek(byte1, deadline0);
      int int3 = (-1008);
      gzipSource0.require(int3, deadline0);
      try { 
        gzipSource0.consumeHeader(deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x000000 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test48()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      GzipSource gzipSource1 = new GzipSource(gzipSource0);
      byte byte0 = (byte) (-82);
      byte byte1 = (byte)14;
      GzipSource.FNAME = byte1;
      byte byte2 = (byte) (-5);
      GzipSource.FCOMMENT = byte2;
      byte byte3 = (byte) (-7);
      GzipSource.SECTION_TRAILER = byte3;
      GzipSource.SECTION_HEADER = byte0;
      byte byte4 = (byte) (-31);
      Deadline deadline0 = new Deadline();
      try { 
        gzipSource1.seek(byte4, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test49()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      OkBuffer okBuffer1 = okBuffer0.writeInt(gzipSource0.SECTION_HEADER);
      OkBuffer okBuffer2 = okBuffer1.writeInt(gzipSource0.FNAME);
      OkBuffer okBuffer3 = okBuffer1.writeShort(gzipSource0.SECTION_BODY);
      GzipSource gzipSource1 = new GzipSource(okBuffer3);
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      Deadline deadline0 = Deadline.NONE;
      try { 
        gzipSource1.consumeTrailer(deadline0);
      } catch(IOException e) {
         //
         // ISIZE: actual 0x000000 != expected 0x3000000
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test50()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      int int1 = (-18);
      OkBuffer okBuffer2 = okBuffer1.writeInt(int1);
      OkBuffer okBuffer3 = okBuffer1.writeShort(int1);
      byte byte0 = okBuffer0.readByte();
      int int2 = 0;
      OkBuffer okBuffer4 = okBuffer3.writeByte(int2);
      GzipSource gzipSource0 = new GzipSource(okBuffer4);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = gzipSource0.SECTION_BODY;
      byteArray0[1] = gzipSource0.SECTION_HEADER;
      byteArray0[2] = gzipSource0.SECTION_HEADER;
      byteArray0[3] = gzipSource0.SECTION_HEADER;
      byteArray0[4] = gzipSource0.FEXTRA;
      int int3 = (-354);
      okBuffer3.write(byteArray0, int3, int1);
      byte byte1 = (byte)0;
      GzipSource.FHCRC = byteArray0[1];
      Deadline deadline0 = new Deadline();
      // Undeclared exception!
      try { 
        gzipSource0.seek(byte1, deadline0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.Util", e);
      }
  }

  @Test(timeout = 11000)
  public void test51()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      int int1 = (-13);
      OkBuffer okBuffer2 = okBuffer0.writeShort(int1);
      OkBuffer okBuffer3 = okBuffer1.writeInt(int1);
      OkBuffer okBuffer4 = okBuffer1.writeInt(int1);
      byte byte0 = okBuffer0.readByte();
      int int2 = 0;
      OkBuffer okBuffer5 = okBuffer4.writeByte(int2);
      GzipSource gzipSource0 = new GzipSource(okBuffer5);
      byte byte1 = (byte)0;
      Deadline deadline0 = new Deadline();
      long long0 = gzipSource0.seek(byte1, deadline0);
      int int3 = (-1008);
      gzipSource0.require(int3, deadline0);
      OkBuffer okBuffer6 = gzipSource0.buffer.writeByte(gzipSource0.FCOMMENT);
      long long1 = 17L;
      try { 
        gzipSource0.read(okBuffer6, long1, deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x000000 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test52()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      int int1 = (-13);
      int int2 = (-2126221436);
      OkBuffer okBuffer2 = okBuffer1.writeInt(int1);
      byte byte0 = okBuffer0.readByte();
      int int3 = 0;
      byte[] byteArray0 = new byte[1];
      byte byte1 = (byte) (-117);
      byteArray0[0] = byte1;
      int int4 = 1;
      int int5 = (-167);
      okBuffer1.write(byteArray0, int4, int5);
      OkBuffer okBuffer3 = okBuffer2.writeByte(int3);
      GzipSource gzipSource0 = new GzipSource(okBuffer3);
      byte byte2 = (byte)0;
      Deadline deadline0 = new Deadline();
      gzipSource0.require(byte2, deadline0);
      int int6 = (-1008);
      gzipSource0.require(int6, deadline0);
      // Undeclared exception!
      try { 
        gzipSource0.consumeHeader(deadline0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.Util", e);
      }
  }

  @Test(timeout = 11000)
  public void test53()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      boolean boolean0 = false;
      Inflater inflater0 = new Inflater(boolean0);
      InflaterSource inflaterSource0 = new InflaterSource(okBuffer1, inflater0);
      GzipSource gzipSource0 = new GzipSource(inflaterSource0);
      Deadline deadline0 = new Deadline();
      long long0 = 1028L;
      Deadline deadline1 = new Deadline();
      byte byte0 = (byte)9;
      GzipSource.FNAME = byte0;
      inflaterSource0.close(deadline1);
      byte[] byteArray0 = new byte[0];
      int int1 = 0;
      int int2 = (-1);
      okBuffer0.write(byteArray0, int1, int2);
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      Deadline deadline2 = deadline0.start(long0, timeUnit0);
      // Undeclared exception!
      try { 
        gzipSource0.consumeHeader(deadline0);
      } catch(IllegalStateException e) {
         //
         // closed
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }
}
