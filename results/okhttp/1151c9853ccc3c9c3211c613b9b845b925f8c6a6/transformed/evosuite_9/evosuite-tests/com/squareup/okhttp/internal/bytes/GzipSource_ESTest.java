/*
 * This file was automatically generated by EvoSuite
 * Mon May 25 21:51:29 GMT 2020
 */

package com.squareup.okhttp.internal.bytes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.squareup.okhttp.internal.bytes.ByteString;
import com.squareup.okhttp.internal.bytes.Deadline;
import com.squareup.okhttp.internal.bytes.GzipSource;
import com.squareup.okhttp.internal.bytes.InflaterSource;
import com.squareup.okhttp.internal.bytes.OkBuffer;
import com.squareup.okhttp.internal.bytes.Segment;
import com.squareup.okhttp.internal.bytes.Source;
import java.io.EOFException;
import java.io.IOException;
import java.util.List;
import java.util.concurrent.TimeUnit;
import java.util.zip.CRC32;
import java.util.zip.Inflater;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GzipSource_ESTest extends GzipSource_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = new Deadline();
      byte byte0 = (byte)9;
      GzipSource.SECTION_HEADER = byte0;
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      OkBuffer okBuffer0 = gzipSource0.buffer.writeInt(gzipSource0.FHCRC);
      OkBuffer okBuffer1 = okBuffer0.writeByte(gzipSource0.SECTION_BODY);
      String string0 = "]*%?vwRgFm>GG^_=\"aWT";
      okBuffer0.writeUtf8(string0);
      long long0 = gzipSource0.read(okBuffer0, gzipSource0.SECTION_TRAILER, deadline0);
      Deadline deadline1 = deadline0.start(gzipSource0.FNAME, timeUnit0);
      try { 
        gzipSource0.consumeHeader(deadline1);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x000000 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      GzipSource.SECTION_HEADER = gzipSource0.FEXTRA;
      OkBuffer okBuffer0 = gzipSource0.buffer.writeShort(gzipSource0.FEXTRA);
      GzipSource gzipSource1 = new GzipSource(okBuffer0);
      int int0 = (-82);
      Deadline deadline0 = new Deadline();
      try { 
        gzipSource1.consumeTrailer(deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 1559;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      byte byte0 = (byte)101;
      GzipSource.FHCRC = gzipSource0.SECTION_HEADER;
      Deadline deadline0 = new Deadline();
      try { 
        gzipSource0.seek(byte0, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      int int1 = 520;
      Segment segment0 = okBuffer1.writableSegment(int1);
      long long0 = 0L;
      gzipSource0.updateCrc(okBuffer0, gzipSource0.FNAME, long0);
      String string0 = "\\ktDCE(Ay{R";
      gzipSource0.checkEqual(string0, int1, int1);
      Deadline deadline0 = Deadline.NONE;
      deadline0.throwIfReached();
      long long1 = gzipSource0.read(okBuffer1, int0, deadline0);
      byte byte0 = (byte)0;
      long long2 = gzipSource0.seek(byte0, deadline0);
      try { 
        gzipSource0.consumeHeader(deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = Deadline.NONE;
      OkBuffer okBuffer0 = gzipSource0.buffer.writeByte(gzipSource0.FHCRC);
      deadline0.throwIfReached();
      deadline0.throwIfReached();
      String string0 = "7!:LLDPOr)^L'g";
      okBuffer0.writeUtf8(string0);
      long long0 = 4L;
      try { 
        gzipSource0.consumeTrailer(deadline0);
      } catch(IOException e) {
         //
         // CRC: actual 0x000000 != expected 0x3a213701
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = Deadline.NONE;
      OkBuffer okBuffer0 = gzipSource0.buffer.writeShort(gzipSource0.SECTION_HEADER);
      deadline0.throwIfReached();
      String string0 = "7!:LLDPOr)^L'g";
      OkBuffer okBuffer1 = okBuffer0.writeInt(gzipSource0.FEXTRA);
      okBuffer0.writeUtf8(string0);
      long long0 = 4L;
      try { 
        gzipSource0.read(okBuffer0, long0, deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x000000 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = new Deadline();
      byte byte0 = (byte)10;
      GzipSource.SECTION_HEADER = byte0;
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      byte byte1 = (byte)10;
      int int0 = 0;
      OkBuffer okBuffer0 = gzipSource0.buffer.writeByte(int0);
      OkBuffer okBuffer1 = okBuffer0.writeByte(int0);
      int int1 = okBuffer0.readShortLe();
      String string0 = "]T%?vgFm>GG^_=\"aWT";
      okBuffer0.writeUtf8(string0);
      long long0 = gzipSource0.read(okBuffer0, byte1, deadline0);
      try { 
        gzipSource0.consumeHeader(deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x005d54 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = new Deadline();
      long long0 = (-904L);
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      Deadline deadline1 = deadline0.start(long0, timeUnit0);
      // Undeclared exception!
      try { 
        gzipSource0.close(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      int int0 = (-3131);
      OkBuffer okBuffer0 = gzipSource0.buffer.writeShort(int0);
      long long0 = (-3064L);
      Deadline deadline0 = Deadline.NONE;
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer0, long0, deadline0);
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -3064
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = new Deadline();
      // Undeclared exception!
      try { 
        gzipSource0.consumeTrailer(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      GzipSource gzipSource1 = new GzipSource(gzipSource0);
      String string0 = "HtX;*dY ";
      int int0 = 0;
      try { 
        gzipSource1.checkEqual(string0, int0, gzipSource0.SECTION_TRAILER);
      } catch(IOException e) {
         //
         // HtX;*dY : actual 0x000002 != expected 0x000000
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = Deadline.NONE;
      // Undeclared exception!
      try { 
        gzipSource0.consumeHeader(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer.writeShort(gzipSource0.FNAME);
      OkBuffer okBuffer1 = okBuffer0.writeInt(gzipSource0.FNAME);
      long long0 = (-2151L);
      long long1 = 1L;
      // Undeclared exception!
      try { 
        gzipSource0.updateCrc(okBuffer1, long0, long1);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.zip.CRC32", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      int int0 = 0;
      OkBuffer okBuffer0 = gzipSource0.buffer.writeByte(int0);
      List<Integer> list0 = okBuffer0.segmentSizes();
      gzipSource0.updateCrc(okBuffer0, int0, int0);
      Deadline deadline0 = null;
      // Undeclared exception!
      try { 
        gzipSource0.consumeHeader(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      int int0 = (-2254);
      String string0 = "com.squareup.okhttp.internal.bytes.ByteString";
      gzipSource0.checkEqual(string0, int0, int0);
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      GzipSource gzipSource1 = new GzipSource(okBuffer1);
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      byte byte0 = (byte) (-53);
      Deadline deadline0 = Deadline.NONE;
      // Undeclared exception!
      try { 
        gzipSource0.seek(byte0, deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      byte byte0 = (byte)31;
      GzipSource.FCOMMENT = byte0;
      String string0 = null;
      int int0 = 4811;
      int int1 = 1;
      try { 
        gzipSource0.checkEqual(string0, int0, int1);
      } catch(IOException e) {
         //
         // null: actual 0x000001 != expected 0x0012cb
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      Source source0 = null;
      GzipSource gzipSource0 = null;
      try {
        gzipSource0 = new GzipSource(source0);
      } catch(IllegalArgumentException e) {
         //
         // source == null
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      int int1 = 520;
      Segment segment0 = okBuffer1.writableSegment(int1);
      long long0 = 3757L;
      long long1 = 0L;
      gzipSource0.updateCrc(okBuffer0, long0, long1);
      String string0 = "\\ktDCE(Ay{R";
      gzipSource0.checkEqual(string0, int1, int1);
      Deadline deadline0 = Deadline.NONE;
      deadline0.throwIfReached();
      try { 
        gzipSource0.consumeHeader(deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = Deadline.NONE;
      int int0 = (-848);
      gzipSource0.require(int0, deadline0);
      // Undeclared exception!
      try { 
        gzipSource0.consumeHeader(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      int int0 = (-714);
      Deadline deadline0 = new Deadline();
      gzipSource0.require(int0, deadline0);
      byte byte0 = (byte)91;
      // Undeclared exception!
      try { 
        gzipSource0.consumeHeader(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = new Deadline();
      // Undeclared exception!
      try { 
        gzipSource0.close(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource.SECTION_DONE = gzipSource0.SECTION_TRAILER;
      byte byte0 = (byte) (-121);
      GzipSource.FEXTRA = byte0;
      long long0 = (-1677L);
      long long1 = (-476L);
      gzipSource0.updateCrc(okBuffer0, long0, long1);
      String string0 = "rep_oYDGrx]Dfyp";
      gzipSource0.checkEqual(string0, GzipSource.SECTION_DONE, GzipSource.SECTION_DONE);
      GzipSource.FCOMMENT = gzipSource0.FNAME;
      Deadline deadline0 = Deadline.NONE;
      // Undeclared exception!
      try { 
        gzipSource0.close(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      GzipSource.FHCRC = gzipSource0.SECTION_HEADER;
      Deadline deadline0 = null;
      // Undeclared exception!
      try { 
        gzipSource0.consumeTrailer(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      GzipSource.SECTION_DONE = gzipSource0.FHCRC;
      OkBuffer okBuffer0 = gzipSource0.buffer;
      String string0 = okBuffer0.toString();
      GzipSource gzipSource1 = new GzipSource(okBuffer0);
      int int0 = 0;
      gzipSource1.section = int0;
      long long0 = 2L;
      // Undeclared exception!
      try { 
        gzipSource1.updateCrc(gzipSource0.buffer, long0, gzipSource0.FNAME);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 50;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      Deadline deadline0 = new Deadline();
      long long0 = (-3087L);
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      Deadline deadline1 = deadline0.start(long0, timeUnit0);
      gzipSource0.close(deadline1);
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      GzipSource gzipSource1 = new GzipSource(gzipSource0);
      long long0 = 10L;
      Deadline deadline0 = Deadline.NONE;
      // Undeclared exception!
      try { 
        gzipSource1.read(gzipSource0.buffer, long0, deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 3;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      OkBuffer okBuffer2 = okBuffer1.writeByte(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer2);
      Deadline deadline0 = new Deadline();
      try { 
        gzipSource0.consumeTrailer(deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      OkBuffer okBuffer1 = okBuffer0.writeShort(gzipSource0.SECTION_BODY);
      GzipSource gzipSource1 = new GzipSource(okBuffer1);
      Deadline deadline0 = new Deadline();
      long long0 = gzipSource1.read(gzipSource0.buffer, gzipSource0.section, deadline0);
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      int int0 = 1390;
      Deadline deadline0 = null;
      // Undeclared exception!
      try { 
        gzipSource0.require(int0, deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = new Deadline();
      long long0 = (-1439L);
      byte byte0 = (byte)9;
      GzipSource.SECTION_HEADER = byte0;
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      byte byte1 = (byte)10;
      int int0 = 0;
      OkBuffer okBuffer0 = gzipSource0.buffer.writeByte(int0);
      String string0 = "]T%?vgFm>GG^_=\"aWT";
      okBuffer0.writeUtf8(string0);
      String string1 = okBuffer0.readUtf8(gzipSource0.SECTION_HEADER);
      long long1 = gzipSource0.read(okBuffer0, byte1, deadline0);
      // Undeclared exception!
      try { 
        gzipSource0.seek(byte1, deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      String string0 = "uHG";
      GzipSource.SECTION_DONE = gzipSource0.SECTION_DONE;
      int int0 = 1011;
      OkBuffer okBuffer0 = gzipSource0.buffer.writeInt(int0);
      long long0 = 750L;
      Deadline deadline0 = new Deadline();
      byte byte0 = (byte)0;
      long long1 = gzipSource0.seek(byte0, deadline0);
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      Deadline deadline1 = deadline0.start(gzipSource0.SECTION_BODY, timeUnit0);
      TimeUnit timeUnit1 = TimeUnit.MICROSECONDS;
      Deadline deadline2 = deadline0.start(gzipSource0.FNAME, timeUnit1);
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer0, long0, deadline2);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test32()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 2802;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      int int1 = (-1174);
      OkBuffer okBuffer2 = okBuffer1.writeShort(int1);
      int int2 = 0;
      OkBuffer okBuffer3 = okBuffer2.writeByte(int2);
      GzipSource gzipSource0 = new GzipSource(okBuffer3);
      long long0 = 1312L;
      // Undeclared exception!
      try { 
        gzipSource0.updateCrc(okBuffer3, int0, long0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.zip.CRC32", e);
      }
  }

  @Test(timeout = 11000)
  public void test33()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      GzipSource gzipSource1 = new GzipSource(okBuffer0);
      OkBuffer okBuffer1 = okBuffer0.writeShort(gzipSource0.FCOMMENT);
      long long0 = (-1L);
      Deadline deadline0 = new Deadline();
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      Deadline deadline1 = deadline0.start(gzipSource0.FNAME, timeUnit0);
      // Undeclared exception!
      try { 
        gzipSource1.read(okBuffer1, long0, deadline1);
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -1
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test34()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer.writeByte(gzipSource0.FEXTRA);
      long long0 = 3807L;
      // Undeclared exception!
      try { 
        gzipSource0.updateCrc(okBuffer0, long0, long0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.zip.CRC32", e);
      }
  }

  @Test(timeout = 11000)
  public void test35()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = (-2932);
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      boolean boolean0 = false;
      Inflater inflater0 = new Inflater(boolean0);
      InflaterSource inflaterSource0 = new InflaterSource(okBuffer1, inflater0, okBuffer1);
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)48;
      byteArray0[1] = byte1;
      int int1 = inflater0.inflate(byteArray0);
      GzipSource gzipSource0 = new GzipSource(inflaterSource0);
      Deadline deadline0 = Deadline.NONE;
      try { 
        gzipSource0.consumeTrailer(deadline0);
      } catch(IOException e) {
         //
         // java.util.zip.DataFormatException: incorrect header check
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test36()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer.writeByte(gzipSource0.FNAME);
      long long0 = 1048576L;
      // Undeclared exception!
      gzipSource0.updateCrc(okBuffer0, long0, long0);
  }

  @Test(timeout = 11000)
  public void test37()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      GzipSource gzipSource1 = new GzipSource(okBuffer0);
      int int0 = 4061;
      Deadline deadline0 = Deadline.NONE;
      try { 
        gzipSource1.require(int0, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test38()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      int int0 = 0;
      Deadline deadline0 = new Deadline();
      long long0 = 0L;
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      Deadline deadline1 = deadline0.start(long0, timeUnit0);
      TimeUnit timeUnit1 = TimeUnit.MILLISECONDS;
      Deadline deadline2 = deadline0.start(gzipSource0.SECTION_TRAILER, timeUnit1);
      gzipSource0.require(int0, deadline0);
  }

  @Test(timeout = 11000)
  public void test39()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      int int0 = (-1);
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      int int1 = (-3289);
      int int2 = 669;
      OkBuffer okBuffer2 = okBuffer0.writeInt(int2);
      OkBuffer okBuffer3 = okBuffer1.writeInt(int1);
      GzipSource gzipSource1 = new GzipSource(okBuffer1);
      GzipSource.SECTION_BODY = gzipSource0.FHCRC;
      Deadline deadline0 = new Deadline();
      byte byte0 = (byte) (-111);
      GzipSource.FCOMMENT = byte0;
      byte byte1 = (byte)0;
      GzipSource.SECTION_DONE = byte1;
      long long0 = 1902L;
      byte byte2 = (byte) (-33);
      GzipSource.FEXTRA = byte2;
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      Deadline deadline1 = deadline0.start(long0, timeUnit0);
      try { 
        gzipSource1.consumeTrailer(deadline0);
      } catch(IOException e) {
         //
         // CRC: actual 0x000000 != expected 0xffffffff
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test40()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      GzipSource gzipSource1 = new GzipSource(okBuffer0);
      GzipSource.FNAME = gzipSource0.FNAME;
      OkBuffer okBuffer1 = okBuffer0.writeByte(gzipSource0.SECTION_DONE);
      byte byte0 = okBuffer1.readByte();
      long long0 = 609L;
      Deadline deadline0 = Deadline.NONE;
      try { 
        gzipSource1.read(okBuffer0, gzipSource0.SECTION_DONE, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test41()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      GzipSource gzipSource1 = new GzipSource(okBuffer0);
      byte byte0 = (byte)49;
      GzipSource.SECTION_BODY = byte0;
      Deadline deadline0 = new Deadline();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = gzipSource0.FCOMMENT;
      byteArray0[1] = gzipSource1.FCOMMENT;
      byteArray0[2] = gzipSource0.FNAME;
      byteArray0[3] = gzipSource0.SECTION_BODY;
      byteArray0[4] = gzipSource1.FNAME;
      byteArray0[5] = byte0;
      byteArray0[6] = gzipSource0.FHCRC;
      byteArray0[7] = gzipSource0.SECTION_TRAILER;
      int int0 = (-1238);
      okBuffer0.write(byteArray0, gzipSource1.section, int0);
      // Undeclared exception!
      try { 
        gzipSource1.consumeTrailer(deadline0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.Util", e);
      }
  }

  @Test(timeout = 11000)
  public void test42()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      String string0 = "?";
      GzipSource.FCOMMENT = gzipSource0.SECTION_HEADER;
      int int0 = 2146435583;
      gzipSource0.checkEqual(string0, int0, int0);
      int int1 = 466;
      gzipSource0.section = int1;
      GzipSource gzipSource1 = new GzipSource(gzipSource0);
      Deadline deadline0 = Deadline.NONE;
      deadline0.throwIfReached();
      try { 
        gzipSource1.read(gzipSource0.buffer, gzipSource0.section, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test43()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = new Deadline();
      long long0 = (-1439L);
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      OkBuffer okBuffer0 = gzipSource0.buffer.writeByte(gzipSource0.SECTION_HEADER);
      String string0 = "]T%?vgFm>GG^_=\"aWT";
      okBuffer0.writeUtf8(string0);
      String string1 = okBuffer0.readUtf8(GzipSource.SECTION_HEADER);
      String string2 = okBuffer0.readUtf8(gzipSource0.SECTION_HEADER);
      try { 
        gzipSource0.read(okBuffer0, gzipSource0.SECTION_DONE, deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x00005d != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test44()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = new Deadline();
      long long0 = (-1439L);
      byte byte0 = (byte)9;
      GzipSource.SECTION_HEADER = byte0;
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      byte byte1 = (byte)10;
      int int0 = 0;
      OkBuffer okBuffer0 = gzipSource0.buffer.writeByte(int0);
      OkBuffer okBuffer1 = okBuffer0.writeByte(int0);
      String string0 = "]T%?vgFm>GG^_=\"aWT";
      okBuffer0.writeUtf8(string0);
      long long1 = gzipSource0.read(okBuffer0, byte1, deadline0);
      Deadline deadline1 = deadline0.start(long0, timeUnit0);
      try { 
        gzipSource0.consumeHeader(deadline1);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x000000 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test45()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      int int1 = 520;
      Segment segment0 = okBuffer1.writableSegment(int1);
      long long0 = 3757L;
      long long1 = 0L;
      gzipSource0.updateCrc(okBuffer0, long0, long1);
      String string0 = "\\ktDCE(Ay{R";
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = gzipSource0.FNAME;
      int int2 = 323;
      int int3 = (-607);
      okBuffer0.write(byteArray0, int2, int3);
      gzipSource0.checkEqual(string0, int1, int1);
      Deadline deadline0 = Deadline.NONE;
      deadline0.throwIfReached();
      // Undeclared exception!
      try { 
        gzipSource0.consumeHeader(deadline0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.Util", e);
      }
  }

  @Test(timeout = 11000)
  public void test46()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = new Deadline();
      long long0 = (-1439L);
      byte byte0 = (byte)10;
      GzipSource.SECTION_HEADER = byte0;
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      byte byte1 = (byte)10;
      int int0 = 0;
      OkBuffer okBuffer0 = gzipSource0.buffer.writeByte(int0);
      OkBuffer okBuffer1 = okBuffer0.writeByte(int0);
      int int1 = okBuffer0.readShortLe();
      String string0 = "]T%?vgFm>GG^_=\"aWT";
      okBuffer0.writeUtf8(string0);
      long long1 = gzipSource0.read(okBuffer0, byte1, deadline0);
      Deadline deadline1 = deadline0.start(long0, timeUnit0);
      try { 
        gzipSource0.consumeHeader(deadline1);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x005d54 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test47()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = new Deadline();
      long long0 = 8L;
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      Deadline deadline1 = deadline0.start(long0, timeUnit0);
      long long1 = 1L;
      byte byte0 = (byte)9;
      GzipSource.SECTION_HEADER = byte0;
      TimeUnit timeUnit1 = TimeUnit.DAYS;
      byte byte1 = (byte)10;
      int int0 = 0;
      OkBuffer okBuffer0 = gzipSource0.buffer.writeByte(int0);
      String string0 = "]T%?vgFm>GG^_=\"aWT";
      GzipSource.SECTION_BODY = byte1;
      okBuffer0.writeUtf8(string0);
      String string1 = okBuffer0.readUtf8(gzipSource0.SECTION_HEADER);
      long long2 = gzipSource0.read(okBuffer0, byte1, deadline0);
      // Undeclared exception!
      try { 
        gzipSource0.seek(byte1, deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test48()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = new Deadline();
      long long0 = (-1439L);
      byte byte0 = (byte)10;
      GzipSource.SECTION_HEADER = byte0;
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      byte byte1 = (byte)10;
      int int0 = 0;
      OkBuffer okBuffer0 = gzipSource0.buffer.writeByte(int0);
      OkBuffer okBuffer1 = okBuffer0.writeByte(int0);
      int int1 = okBuffer0.readShortLe();
      String string0 = "]T%?vgFm>GG^_=\"aWT";
      okBuffer0.writeUtf8(string0);
      long long1 = gzipSource0.read(okBuffer0, byte1, deadline0);
      Deadline deadline1 = deadline0.start(long0, timeUnit0);
      short short0 = okBuffer0.readShort();
      try { 
        gzipSource0.consumeHeader(deadline1);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x00253f != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test49()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = new Deadline();
      byte byte0 = (byte)9;
      GzipSource.SECTION_HEADER = byte0;
      byte byte1 = (byte) (-91);
      GzipSource.FHCRC = byte1;
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      byte byte2 = (byte)10;
      OkBuffer okBuffer0 = gzipSource0.buffer.writeByte(byte2);
      OkBuffer okBuffer1 = okBuffer0.writeByte(gzipSource0.SECTION_BODY);
      String string0 = "]T%?vgFm>GG^_=\"aWT";
      okBuffer0.writeUtf8(string0);
      long long0 = gzipSource0.read(okBuffer0, byte2, deadline0);
      Deadline deadline1 = deadline0.start(gzipSource0.FNAME, timeUnit0);
      try { 
        gzipSource0.consumeHeader(deadline1);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x000a01 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test50()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      GzipSource.SECTION_HEADER = gzipSource0.FEXTRA;
      OkBuffer okBuffer0 = gzipSource0.buffer.writeShort(gzipSource0.FEXTRA);
      GzipSource gzipSource1 = new GzipSource(okBuffer0);
      Deadline deadline0 = new Deadline();
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      Deadline deadline1 = deadline0.start(gzipSource0.FNAME, timeUnit0);
      long long0 = gzipSource0.seek(gzipSource1.SECTION_TRAILER, deadline1);
      byte byte0 = (byte)0;
      GzipSource.SECTION_DONE = byte0;
      int int0 = (-82);
      Deadline deadline2 = new Deadline();
      try { 
        gzipSource1.consumeTrailer(deadline2);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }
}
