import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        java.lang.Class<?> wildcardClass8 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.Source source26 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource27.inflaterSource;
        java.util.zip.Inflater inflater31 = gzipSource27.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource27.buffer;
        gzipSource7.buffer = okBuffer32;
        gzipSource0.source = okBuffer32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource35.inflater = inflater45;
        gzipSource0.inflater = inflater45;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_49 = null;
        gzipSource48.crc = cRC32_49;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource48.inflaterSource;
        int int52 = gzipSource48.section;
        com.squareup.okhttp.internal.bytes.Source source53 = gzipSource48.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        gzipSource48.source = gzipSource54;
        java.util.zip.CRC32 cRC32_58 = gzipSource48.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater60 = null;
        gzipSource59.inflater = inflater60;
        int int62 = gzipSource59.section;
        gzipSource59.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource59);
        com.squareup.okhttp.internal.bytes.Deadline deadline67 = null;
        gzipSource65.require((-1), deadline67);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater70 = null;
        gzipSource69.inflater = inflater70;
        int int72 = gzipSource69.section;
        gzipSource69.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource69);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource76 = null;
        gzipSource69.inflaterSource = inflaterSource76;
        gzipSource65.source = inflaterSource76;
        java.util.zip.CRC32 cRC32_79 = gzipSource65.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource65.buffer;
        gzipSource48.updateCrc(okBuffer80, (long) (short) 100, (long) (short) -1);
        gzipSource0.updateCrc(okBuffer80, 0L, 0L);
        com.squareup.okhttp.internal.bytes.Deadline deadline88 = null;
        gzipSource0.require((int) (byte) -1, deadline88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer6 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        long long9 = gzipSource0.read(okBuffer6, (long) 100, deadline8);
        int int10 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource11.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer16 = null;
        gzipSource11.buffer = okBuffer16;
        int int18 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.Source source19 = null;
        gzipSource11.source = source19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.CRC32 cRC32_22 = gzipSource11.crc;
        int int23 = gzipSource11.section;
        gzipSource0.source = gzipSource11;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource29 = gzipSource25.inflaterSource;
        gzipSource25.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline33 = null;
        gzipSource25.require((int) (short) -1, deadline33);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        gzipSource35.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource35);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = null;
        gzipSource35.inflaterSource = inflaterSource42;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = gzipSource35.inflaterSource;
        gzipSource25.source = gzipSource35;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource50 = gzipSource46.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer51 = null;
        gzipSource46.buffer = okBuffer51;
        int int53 = gzipSource46.section;
        com.squareup.okhttp.internal.bytes.Source source54 = null;
        gzipSource46.source = source54;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        java.util.zip.CRC32 cRC32_57 = gzipSource46.crc;
        gzipSource35.crc = cRC32_57;
        gzipSource0.crc = cRC32_57;
        com.squareup.okhttp.internal.bytes.Source source60 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource44);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source60);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        java.util.zip.Inflater inflater10 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = null;
        gzipSource0.inflaterSource = inflaterSource11;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) inflaterSource11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: source == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long12 = gzipSource6.seek((byte) 2, deadline11);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource15.inflaterSource;
        gzipSource15.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline23 = null;
        gzipSource15.require((int) (short) -1, deadline23);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        gzipSource25.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource25);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = null;
        gzipSource25.inflaterSource = inflaterSource32;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource25.inflaterSource;
        gzipSource15.source = gzipSource25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource25);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = null;
        gzipSource25.inflaterSource = inflaterSource37;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer39 = gzipSource25.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource25.buffer;
        gzipSource0.buffer = okBuffer40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer40);
        com.squareup.okhttp.internal.bytes.Deadline deadline44 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long45 = gzipSource42.seek((byte) 1, deadline44);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        int int9 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long13 = gzipSource0.seek((byte) 100, deadline12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline23 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource3.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource3.buffer = okBuffer8;
        gzipSource3.section = (byte) -1;
        java.util.zip.Inflater inflater12 = gzipSource3.inflater;
        java.util.zip.CRC32 cRC32_13 = gzipSource3.crc;
        gzipSource0.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource15.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer20 = null;
        gzipSource15.buffer = okBuffer20;
        int int22 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.Source source23 = null;
        gzipSource15.source = source23;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        java.util.zip.CRC32 cRC32_26 = gzipSource15.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        java.util.zip.CRC32 cRC32_31 = gzipSource30.crc;
        gzipSource15.crc = cRC32_31;
        gzipSource0.crc = cRC32_31;
        java.lang.Class<?> wildcardClass34 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int12 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_14 = null;
        gzipSource13.crc = cRC32_14;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource13.inflaterSource;
        java.util.zip.CRC32 cRC32_17 = gzipSource13.crc;
        java.util.zip.Inflater inflater18 = gzipSource13.inflater;
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource13.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource13.buffer;
        gzipSource11.updateCrc(okBuffer21, (long) '4', (long) (-1));
        java.util.zip.CRC32 cRC32_25 = gzipSource11.crc;
        gzipSource0.crc = cRC32_25;
        java.util.zip.Inflater inflater27 = gzipSource0.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater27);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        com.squareup.okhttp.internal.bytes.Deadline deadline22 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long23 = gzipSource19.seek((byte) 0, deadline22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer7 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer7);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource11.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource19.inflater = inflater29;
        gzipSource11.inflater = inflater29;
        gzipSource10.inflater = inflater29;
        gzipSource9.inflater = inflater29;
        int int34 = gzipSource9.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        gzipSource35.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource35);
        java.util.zip.Inflater inflater42 = gzipSource41.inflater;
        gzipSource41.section = (byte) -1;
        java.util.zip.Inflater inflater45 = gzipSource41.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource46 = gzipSource41.inflaterSource;
        gzipSource9.inflaterSource = inflaterSource46;
        int int48 = gzipSource9.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        int int22 = gzipSource6.section;
        java.util.zip.CRC32 cRC32_23 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.Source source24 = gzipSource6.source;
        int int25 = gzipSource6.section;
        java.lang.Class<?> wildcardClass26 = gzipSource6.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.Inflater inflater15 = gzipSource14.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        gzipSource0.source = gzipSource16;
        java.util.zip.CRC32 cRC32_19 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_19);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        int int22 = gzipSource6.section;
        java.util.zip.CRC32 cRC32_23 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline24 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.consumeTrailer(deadline24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_23);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.Source source4 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline5 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source4);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        gzipSource0.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        gzipSource12.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        gzipSource19.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        java.util.zip.Inflater inflater26 = gzipSource25.inflater;
        gzipSource12.inflater = inflater26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = null;
        gzipSource12.inflaterSource = inflaterSource28;
        gzipSource0.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.Deadline deadline31 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource12.consumeHeader(deadline31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater26);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        java.util.zip.Inflater inflater10 = gzipSource0.inflater;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.Inflater inflater15 = gzipSource14.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        gzipSource0.source = gzipSource16;
        int int19 = gzipSource16.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource20.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer25 = null;
        gzipSource20.buffer = okBuffer25;
        int int27 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.Source source28 = null;
        gzipSource20.source = source28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        java.util.zip.CRC32 cRC32_31 = gzipSource20.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        java.util.zip.CRC32 cRC32_36 = gzipSource35.crc;
        gzipSource20.crc = cRC32_36;
        gzipSource16.crc = cRC32_36;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_36);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource10.inflaterSource;
        gzipSource10.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        gzipSource10.require((int) (short) -1, deadline18);
        com.squareup.okhttp.internal.bytes.Source source20 = gzipSource10.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource21.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource35.inflaterSource;
        gzipSource35.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        java.util.zip.Inflater inflater49 = gzipSource48.inflater;
        gzipSource35.inflater = inflater49;
        gzipSource30.inflater = inflater49;
        gzipSource21.inflater = inflater49;
        gzipSource10.inflater = inflater49;
        gzipSource0.inflater = inflater49;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource59 = gzipSource55.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = null;
        gzipSource55.buffer = okBuffer60;
        int int62 = gzipSource55.section;
        com.squareup.okhttp.internal.bytes.Source source63 = null;
        gzipSource55.source = source63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource55);
        java.util.zip.CRC32 cRC32_66 = gzipSource55.crc;
        gzipSource0.crc = cRC32_66;
        com.squareup.okhttp.internal.bytes.Source source68 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline69 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource59);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source68);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource0.buffer = okBuffer8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer6 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        long long9 = gzipSource0.read(okBuffer6, (long) 100, deadline8);
        int int10 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource11.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer16 = null;
        gzipSource11.buffer = okBuffer16;
        int int18 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.Source source19 = null;
        gzipSource11.source = source19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.CRC32 cRC32_22 = gzipSource11.crc;
        int int23 = gzipSource11.section;
        gzipSource0.source = gzipSource11;
        com.squareup.okhttp.internal.bytes.Deadline deadline26 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) '4', deadline26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        gzipSource0.require((int) (byte) -1, deadline7);
        com.squareup.okhttp.internal.bytes.Deadline deadline9 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer10 = null;
        gzipSource0.buffer = okBuffer10;
        java.util.zip.CRC32 cRC32_12 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        gzipSource13.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource13);
        com.squareup.okhttp.internal.bytes.Deadline deadline21 = null;
        gzipSource19.require((-1), deadline21);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        gzipSource23.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource23);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = null;
        gzipSource23.inflaterSource = inflaterSource30;
        gzipSource19.source = inflaterSource30;
        java.util.zip.CRC32 cRC32_33 = gzipSource19.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource34.inflaterSource;
        gzipSource34.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline42 = null;
        gzipSource34.require((int) (short) -1, deadline42);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = null;
        gzipSource44.inflaterSource = inflaterSource51;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource53 = gzipSource44.inflaterSource;
        gzipSource34.source = gzipSource44;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = null;
        gzipSource44.inflaterSource = inflaterSource56;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer58 = gzipSource44.buffer;
        gzipSource19.updateCrc(okBuffer58, (long) (short) 100, (long) (byte) 0);
        com.squareup.okhttp.internal.bytes.Deadline deadline63 = null;
        long long64 = gzipSource0.read(okBuffer58, (long) (byte) 0, deadline63);
        com.squareup.okhttp.internal.bytes.Deadline deadline65 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        gzipSource0.source = gzipSource6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        gzipSource16.require((-1), deadline18);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = null;
        gzipSource20.inflaterSource = inflaterSource27;
        gzipSource16.source = inflaterSource27;
        java.util.zip.CRC32 cRC32_30 = gzipSource16.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer31 = gzipSource16.buffer;
        java.util.zip.CRC32 cRC32_32 = gzipSource16.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource33.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource47.inflaterSource;
        gzipSource47.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        gzipSource54.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource54);
        java.util.zip.Inflater inflater61 = gzipSource60.inflater;
        gzipSource47.inflater = inflater61;
        gzipSource42.inflater = inflater61;
        gzipSource33.inflater = inflater61;
        gzipSource16.source = gzipSource33;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer66 = gzipSource16.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.updateCrc(okBuffer66, (long) (short) 10, (long) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer66);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        gzipSource0.section = 'a';
        java.lang.Class<?> wildcardClass16 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        gzipSource0.require((int) (byte) -1, deadline7);
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        gzipSource23.section = (byte) -1;
        java.util.zip.CRC32 cRC32_29 = null;
        gzipSource23.crc = cRC32_29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource31.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        java.util.zip.Inflater inflater41 = gzipSource40.inflater;
        gzipSource31.inflater = inflater41;
        gzipSource23.inflater = inflater41;
        gzipSource22.inflater = inflater41;
        gzipSource21.inflater = inflater41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        gzipSource0.source = gzipSource46;
        com.squareup.okhttp.internal.bytes.Deadline deadline48 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline48);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater41);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater24 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_26 = null;
        gzipSource25.crc = cRC32_26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource25.inflaterSource;
        java.util.zip.CRC32 cRC32_29 = gzipSource25.crc;
        java.util.zip.Inflater inflater30 = gzipSource25.inflater;
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource25.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource33.inflaterSource;
        gzipSource33.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        gzipSource40.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        java.util.zip.Inflater inflater47 = gzipSource46.inflater;
        gzipSource33.inflater = inflater47;
        gzipSource25.inflater = inflater47;
        int int50 = gzipSource25.section;
        gzipSource0.source = gzipSource25;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater2 = null;
        gzipSource1.inflater = inflater2;
        int int4 = gzipSource1.section;
        gzipSource1.section = (byte) -1;
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource1.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource1.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Deadline deadline23 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource10.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer15 = null;
        gzipSource10.buffer = okBuffer15;
        gzipSource10.section = (byte) -1;
        gzipSource10.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_22 = null;
        gzipSource21.crc = cRC32_22;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource21.inflaterSource;
        java.util.zip.CRC32 cRC32_25 = gzipSource21.crc;
        java.util.zip.Inflater inflater26 = gzipSource21.inflater;
        gzipSource21.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source31 = gzipSource21.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        int int35 = gzipSource32.section;
        gzipSource32.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource32.inflaterSource;
        gzipSource21.source = gzipSource32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_42 = null;
        gzipSource41.crc = cRC32_42;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        java.util.zip.Inflater inflater51 = gzipSource50.inflater;
        gzipSource41.inflater = inflater51;
        gzipSource40.inflater = inflater51;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer54 = gzipSource40.buffer;
        gzipSource21.updateCrc(okBuffer54, (long) '#', (long) (-1));
        gzipSource10.buffer = okBuffer54;
        com.squareup.okhttp.internal.bytes.Deadline deadline60 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long61 = gzipSource0.read(okBuffer54, (long) (short) 10, deadline60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer54);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer10 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer11, (long) 97, (long) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer10);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        gzipSource8.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        gzipSource15.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        java.util.zip.Inflater inflater22 = gzipSource21.inflater;
        gzipSource8.inflater = inflater22;
        gzipSource0.inflater = inflater22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_26 = null;
        gzipSource25.crc = cRC32_26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource25.inflaterSource;
        java.util.zip.CRC32 cRC32_29 = gzipSource25.crc;
        java.util.zip.Inflater inflater30 = gzipSource25.inflater;
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource25.crc = cRC32_31;
        java.util.zip.Inflater inflater33 = gzipSource25.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource34.inflaterSource;
        gzipSource34.section = (byte) 100;
        int int41 = gzipSource34.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        java.util.zip.CRC32 cRC32_47 = null;
        gzipSource42.crc = cRC32_47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_50 = null;
        gzipSource49.crc = cRC32_50;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource49.inflaterSource;
        java.util.zip.CRC32 cRC32_53 = gzipSource49.crc;
        java.util.zip.Inflater inflater54 = gzipSource49.inflater;
        gzipSource49.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source59 = gzipSource49.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater61 = null;
        gzipSource60.inflater = inflater61;
        int int63 = gzipSource60.section;
        gzipSource60.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource66 = gzipSource60.inflaterSource;
        gzipSource49.source = gzipSource60;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_70 = null;
        gzipSource69.crc = cRC32_70;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater73 = null;
        gzipSource72.inflater = inflater73;
        int int75 = gzipSource72.section;
        gzipSource72.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource78 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource72);
        java.util.zip.Inflater inflater79 = gzipSource78.inflater;
        gzipSource69.inflater = inflater79;
        gzipSource68.inflater = inflater79;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer82 = gzipSource68.buffer;
        gzipSource49.updateCrc(okBuffer82, (long) '#', (long) (-1));
        gzipSource42.updateCrc(okBuffer82, (long) 0, 0L);
        gzipSource34.buffer = okBuffer82;
        gzipSource25.buffer = okBuffer82;
        gzipSource0.buffer = okBuffer82;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource92 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline94 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long95 = gzipSource0.seek((byte) 100, deadline94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source59);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource66);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource92);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source4 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource5.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource13.inflaterSource;
        gzipSource13.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        java.util.zip.Inflater inflater27 = gzipSource26.inflater;
        gzipSource13.inflater = inflater27;
        gzipSource5.inflater = inflater27;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        java.util.zip.Inflater inflater35 = gzipSource30.inflater;
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource30.crc = cRC32_36;
        java.util.zip.Inflater inflater38 = gzipSource30.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater40 = null;
        gzipSource39.inflater = inflater40;
        int int42 = gzipSource39.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource39.inflaterSource;
        gzipSource39.section = (byte) 100;
        int int46 = gzipSource39.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_48 = null;
        gzipSource47.crc = cRC32_48;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource50 = gzipSource47.inflaterSource;
        java.util.zip.CRC32 cRC32_51 = gzipSource47.crc;
        java.util.zip.CRC32 cRC32_52 = null;
        gzipSource47.crc = cRC32_52;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_55 = null;
        gzipSource54.crc = cRC32_55;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource57 = gzipSource54.inflaterSource;
        java.util.zip.CRC32 cRC32_58 = gzipSource54.crc;
        java.util.zip.Inflater inflater59 = gzipSource54.inflater;
        gzipSource54.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source64 = gzipSource54.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater66 = null;
        gzipSource65.inflater = inflater66;
        int int68 = gzipSource65.section;
        gzipSource65.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource71 = gzipSource65.inflaterSource;
        gzipSource54.source = gzipSource65;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource74 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_75 = null;
        gzipSource74.crc = cRC32_75;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource77 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater78 = null;
        gzipSource77.inflater = inflater78;
        int int80 = gzipSource77.section;
        gzipSource77.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource83 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource77);
        java.util.zip.Inflater inflater84 = gzipSource83.inflater;
        gzipSource74.inflater = inflater84;
        gzipSource73.inflater = inflater84;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer87 = gzipSource73.buffer;
        gzipSource54.updateCrc(okBuffer87, (long) '#', (long) (-1));
        gzipSource47.updateCrc(okBuffer87, (long) 0, 0L);
        gzipSource39.buffer = okBuffer87;
        gzipSource30.buffer = okBuffer87;
        gzipSource5.buffer = okBuffer87;
        gzipSource0.source = okBuffer87;
        java.util.zip.CRC32 cRC32_98 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source64);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource71);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_98);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer6 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        long long9 = gzipSource0.read(okBuffer6, (long) 100, deadline8);
        int int10 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource11.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer16 = null;
        gzipSource11.buffer = okBuffer16;
        int int18 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.Source source19 = null;
        gzipSource11.source = source19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.CRC32 cRC32_22 = gzipSource11.crc;
        int int23 = gzipSource11.section;
        gzipSource0.source = gzipSource11;
        java.util.zip.CRC32 cRC32_25 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_25);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        gzipSource8.inflater = inflater18;
        gzipSource0.inflater = inflater18;
        com.squareup.okhttp.internal.bytes.Deadline deadline22 = null;
        gzipSource0.require((int) (byte) 0, deadline22);
        java.util.zip.CRC32 cRC32_24 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_24);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline13 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (short) 100, deadline13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        int int9 = gzipSource6.section;
        gzipSource6.section = (byte) -1;
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource6.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource14.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        gzipSource17.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource17);
        java.util.zip.Inflater inflater24 = gzipSource23.inflater;
        gzipSource14.inflater = inflater24;
        gzipSource6.inflater = inflater24;
        gzipSource0.source = gzipSource6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer28 = gzipSource0.buffer;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer28);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline33 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource33.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_39 = null;
        gzipSource38.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource38.inflaterSource;
        java.util.zip.CRC32 cRC32_42 = gzipSource38.crc;
        java.util.zip.Inflater inflater43 = gzipSource38.inflater;
        gzipSource38.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source48 = gzipSource38.source;
        gzipSource33.source = source48;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource50 = gzipSource33.inflaterSource;
        int int51 = gzipSource33.section;
        gzipSource0.source = gzipSource33;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = gzipSource53.buffer;
        gzipSource0.buffer = okBuffer60;
        gzipSource0.section = (short) 0;
        com.squareup.okhttp.internal.bytes.Deadline deadline65 = null;
        gzipSource0.require((-1), deadline65);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater68 = null;
        gzipSource67.inflater = inflater68;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater71 = null;
        gzipSource70.inflater = inflater71;
        int int73 = gzipSource70.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource74 = gzipSource70.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer75 = null;
        gzipSource70.buffer = okBuffer75;
        gzipSource70.section = (byte) -1;
        java.util.zip.Inflater inflater79 = gzipSource70.inflater;
        java.util.zip.CRC32 cRC32_80 = gzipSource70.crc;
        gzipSource67.crc = cRC32_80;
        java.util.zip.CRC32 cRC32_82 = gzipSource67.crc;
        com.squareup.okhttp.internal.bytes.Source source83 = gzipSource67.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource84 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater85 = gzipSource84.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource86 = null;
        gzipSource84.inflaterSource = inflaterSource86;
        com.squareup.okhttp.internal.bytes.Source source88 = gzipSource84.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer89 = gzipSource84.buffer;
        gzipSource67.buffer = okBuffer89;
        com.squareup.okhttp.internal.bytes.Deadline deadline92 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long93 = gzipSource0.read(okBuffer89, (long) 10, deadline92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer60);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer89);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater2 = null;
        gzipSource1.inflater = inflater2;
        int int4 = gzipSource1.section;
        gzipSource1.section = (byte) -1;
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource1.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource1.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        java.lang.Class<?> wildcardClass23 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        int int30 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        int int35 = gzipSource32.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = gzipSource32.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer37 = null;
        gzipSource32.buffer = okBuffer37;
        int int39 = gzipSource32.section;
        com.squareup.okhttp.internal.bytes.Source source40 = null;
        gzipSource32.source = source40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        java.util.zip.CRC32 cRC32_43 = gzipSource32.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        java.util.zip.CRC32 cRC32_48 = gzipSource47.crc;
        gzipSource32.crc = cRC32_48;
        gzipSource19.crc = cRC32_48;
        com.squareup.okhttp.internal.bytes.Deadline deadline51 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource19.consumeHeader(deadline51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_48);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require(100, deadline8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer9 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int11 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource12.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource12.inflaterSource;
        java.util.zip.CRC32 cRC32_16 = gzipSource12.crc;
        java.util.zip.Inflater inflater17 = gzipSource12.inflater;
        java.util.zip.CRC32 cRC32_18 = null;
        gzipSource12.crc = cRC32_18;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer20 = gzipSource12.buffer;
        gzipSource10.updateCrc(okBuffer20, (long) '4', (long) (-1));
        java.util.zip.CRC32 cRC32_24 = gzipSource10.crc;
        gzipSource0.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.Deadline deadline26 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_24);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        gzipSource8.section = (byte) 0;
        gzipSource8.section = (-1);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline14 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource8.close(deadline14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource13);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater2 = null;
        gzipSource1.inflater = inflater2;
        int int4 = gzipSource1.section;
        gzipSource1.section = (byte) -1;
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource1.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource1.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        java.util.zip.CRC32 cRC32_23 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_24 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        gzipSource25.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource25);
        com.squareup.okhttp.internal.bytes.Deadline deadline33 = null;
        gzipSource31.require((-1), deadline33);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        gzipSource35.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource35);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = null;
        gzipSource35.inflaterSource = inflaterSource42;
        gzipSource31.source = inflaterSource42;
        java.util.zip.CRC32 cRC32_45 = gzipSource31.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource50 = gzipSource46.inflaterSource;
        gzipSource46.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline54 = null;
        gzipSource46.require((int) (short) -1, deadline54);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater57 = null;
        gzipSource56.inflater = inflater57;
        int int59 = gzipSource56.section;
        gzipSource56.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource56);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource63 = null;
        gzipSource56.inflaterSource = inflaterSource63;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource65 = gzipSource56.inflaterSource;
        gzipSource46.source = gzipSource56;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource56);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource68 = null;
        gzipSource56.inflaterSource = inflaterSource68;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer70 = gzipSource56.buffer;
        gzipSource31.updateCrc(okBuffer70, (long) (short) 100, (long) (byte) 0);
        gzipSource0.buffer = okBuffer70;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater76 = null;
        gzipSource75.inflater = inflater76;
        int int78 = gzipSource75.section;
        gzipSource75.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource81 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource75);
        com.squareup.okhttp.internal.bytes.Deadline deadline83 = null;
        gzipSource81.require((-1), deadline83);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource85 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater86 = null;
        gzipSource85.inflater = inflater86;
        int int88 = gzipSource85.section;
        gzipSource85.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource91 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource85);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource92 = null;
        gzipSource85.inflaterSource = inflaterSource92;
        gzipSource81.source = inflaterSource92;
        java.util.zip.CRC32 cRC32_95 = gzipSource81.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer96 = gzipSource81.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer96, 0L, (long) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_45);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer70);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer96);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        gzipSource0.source = gzipSource6;
        java.util.zip.CRC32 cRC32_10 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        com.squareup.okhttp.internal.bytes.Deadline deadline19 = null;
        gzipSource17.require((-1), deadline19);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = null;
        gzipSource21.inflaterSource = inflaterSource28;
        gzipSource17.source = inflaterSource28;
        java.util.zip.CRC32 cRC32_31 = gzipSource17.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource17.buffer;
        gzipSource0.updateCrc(okBuffer32, (long) (short) 100, (long) (short) -1);
        com.squareup.okhttp.internal.bytes.Deadline deadline37 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long38 = gzipSource0.seek((byte) 100, deadline37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer32);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        java.util.zip.Inflater inflater14 = gzipSource9.inflater;
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource9.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource17.inflaterSource;
        gzipSource17.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource17.inflater = inflater31;
        gzipSource9.inflater = inflater31;
        gzipSource0.source = gzipSource9;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_37 = null;
        gzipSource36.crc = cRC32_37;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater40 = null;
        gzipSource39.inflater = inflater40;
        int int42 = gzipSource39.section;
        gzipSource39.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource39);
        java.util.zip.Inflater inflater46 = gzipSource45.inflater;
        gzipSource36.inflater = inflater46;
        gzipSource35.inflater = inflater46;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = gzipSource35.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer50 = gzipSource35.buffer;
        gzipSource0.source = gzipSource35;
        gzipSource0.section = 3;
        gzipSource0.section = (byte) 0;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer50);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource10.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource19.inflater = inflater29;
        gzipSource18.inflater = inflater29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        int int35 = gzipSource32.section;
        gzipSource32.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        com.squareup.okhttp.internal.bytes.Deadline deadline40 = null;
        gzipSource38.require((-1), deadline40);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = null;
        gzipSource42.inflaterSource = inflaterSource49;
        gzipSource38.source = inflaterSource49;
        java.util.zip.CRC32 cRC32_52 = gzipSource38.crc;
        gzipSource18.crc = cRC32_52;
        gzipSource10.crc = cRC32_52;
        gzipSource0.crc = cRC32_52;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_52);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource11.inflaterSource;
        gzipSource0.source = gzipSource11;
        com.squareup.okhttp.internal.bytes.Source source19 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        java.util.zip.CRC32 cRC32_26 = null;
        gzipSource20.crc = cRC32_26;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_29 = null;
        gzipSource28.crc = cRC32_29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        gzipSource31.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource31);
        java.util.zip.Inflater inflater38 = gzipSource37.inflater;
        gzipSource28.inflater = inflater38;
        gzipSource20.inflater = inflater38;
        gzipSource0.inflater = inflater38;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource46 = gzipSource42.inflaterSource;
        gzipSource42.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline50 = null;
        gzipSource42.require((int) (short) -1, deadline50);
        com.squareup.okhttp.internal.bytes.Source source52 = gzipSource42.source;
        int int53 = gzipSource42.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer54 = null;
        gzipSource42.buffer = okBuffer54;
        gzipSource0.source = okBuffer54;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater58 = null;
        gzipSource57.inflater = inflater58;
        int int60 = gzipSource57.section;
        gzipSource57.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource57);
        com.squareup.okhttp.internal.bytes.Deadline deadline65 = null;
        gzipSource63.require((-1), deadline65);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater68 = null;
        gzipSource67.inflater = inflater68;
        int int70 = gzipSource67.section;
        gzipSource67.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource67);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource74 = null;
        gzipSource67.inflaterSource = inflaterSource74;
        gzipSource63.source = inflaterSource74;
        java.util.zip.CRC32 cRC32_77 = gzipSource63.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer78 = gzipSource63.buffer;
        java.util.zip.CRC32 cRC32_79 = gzipSource63.crc;
        gzipSource0.crc = cRC32_79;
        com.squareup.okhttp.internal.bytes.Deadline deadline81 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_79);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer6 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        long long9 = gzipSource0.read(okBuffer6, (long) 100, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        java.util.zip.CRC32 cRC32_14 = gzipSource10.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource15.inflaterSource;
        gzipSource15.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource15.inflater = inflater29;
        gzipSource10.inflater = inflater29;
        gzipSource0.inflater = inflater29;
        com.squareup.okhttp.internal.bytes.Deadline deadline33 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer15 = gzipSource0.buffer;
        java.lang.Class<?> wildcardClass16 = okBuffer15.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = null;
        gzipSource0.inflaterSource = inflaterSource32;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer35 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline37 = null;
        long long38 = gzipSource0.read(okBuffer35, (long) 0, deadline37);
        com.squareup.okhttp.internal.bytes.Deadline deadline39 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        java.util.zip.CRC32 cRC32_22 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        gzipSource23.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource23);
        java.util.zip.CRC32 cRC32_30 = null;
        gzipSource23.crc = cRC32_30;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_33 = null;
        gzipSource32.crc = cRC32_33;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource32.inflaterSource;
        java.util.zip.CRC32 cRC32_36 = gzipSource32.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater38 = null;
        gzipSource37.inflater = inflater38;
        int int40 = gzipSource37.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource37.inflaterSource;
        gzipSource37.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        java.util.zip.Inflater inflater51 = gzipSource50.inflater;
        gzipSource37.inflater = inflater51;
        gzipSource32.inflater = inflater51;
        gzipSource23.inflater = inflater51;
        gzipSource6.source = gzipSource23;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_57 = null;
        gzipSource56.crc = cRC32_57;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource59 = gzipSource56.inflaterSource;
        java.util.zip.CRC32 cRC32_60 = gzipSource56.crc;
        java.util.zip.Inflater inflater61 = gzipSource56.inflater;
        gzipSource56.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater67 = null;
        gzipSource66.inflater = inflater67;
        int int69 = gzipSource66.section;
        gzipSource66.section = (byte) -1;
        java.util.zip.CRC32 cRC32_72 = null;
        gzipSource66.crc = cRC32_72;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource74 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_75 = null;
        gzipSource74.crc = cRC32_75;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource77 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater78 = null;
        gzipSource77.inflater = inflater78;
        int int80 = gzipSource77.section;
        gzipSource77.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource83 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource77);
        java.util.zip.Inflater inflater84 = gzipSource83.inflater;
        gzipSource74.inflater = inflater84;
        gzipSource66.inflater = inflater84;
        gzipSource56.inflater = inflater84;
        gzipSource23.inflater = inflater84;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater84);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = null;
        gzipSource0.buffer = okBuffer12;
        gzipSource0.section = (byte) -1;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = null;
        gzipSource0.buffer = okBuffer12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        java.util.zip.Inflater inflater25 = gzipSource24.inflater;
        gzipSource15.inflater = inflater25;
        gzipSource14.inflater = inflater25;
        gzipSource0.inflater = inflater25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.Inflater inflater40 = gzipSource39.inflater;
        gzipSource30.inflater = inflater40;
        gzipSource29.inflater = inflater40;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource29.inflaterSource;
        java.util.zip.Inflater inflater44 = gzipSource29.inflater;
        gzipSource0.inflater = inflater44;
        int int46 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer47 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater49 = null;
        gzipSource48.inflater = inflater49;
        int int51 = gzipSource48.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource48.inflaterSource;
        gzipSource48.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Source source55 = gzipSource48.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater57 = null;
        gzipSource56.inflater = inflater57;
        int int59 = gzipSource56.section;
        gzipSource56.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource56);
        java.util.zip.Inflater inflater63 = gzipSource62.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource62);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource65 = gzipSource64.inflaterSource;
        gzipSource48.inflaterSource = inflaterSource65;
        gzipSource0.inflaterSource = inflaterSource65;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source55);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource65);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        gzipSource0.section = 0;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline4 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource0.inflaterSource;
        int int19 = gzipSource0.section;
        java.util.zip.Inflater inflater20 = gzipSource0.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater20);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        gzipSource5.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource5);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = null;
        gzipSource5.inflaterSource = inflaterSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        gzipSource14.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer20 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline22 = null;
        long long23 = gzipSource14.read(okBuffer20, (long) 100, deadline22);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_25 = null;
        gzipSource24.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource24.inflaterSource;
        java.util.zip.CRC32 cRC32_28 = gzipSource24.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource29.inflaterSource;
        gzipSource29.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater37 = null;
        gzipSource36.inflater = inflater37;
        int int39 = gzipSource36.section;
        gzipSource36.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource36);
        java.util.zip.Inflater inflater43 = gzipSource42.inflater;
        gzipSource29.inflater = inflater43;
        gzipSource24.inflater = inflater43;
        gzipSource14.inflater = inflater43;
        gzipSource5.inflater = inflater43;
        gzipSource0.inflater = inflater43;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        int int50 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater43);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer15 = gzipSource10.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline16 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource10.close(deadline16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer15);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        com.squareup.okhttp.internal.bytes.Deadline deadline22 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource19.require((int) 'a', deadline22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        gzipSource0.section = 0;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline4 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource3.close(deadline4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource0.source;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource(source23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: source == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource21.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = null;
        gzipSource21.buffer = okBuffer26;
        int int28 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.Source source29 = null;
        gzipSource21.source = source29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.CRC32 cRC32_32 = gzipSource21.crc;
        gzipSource10.crc = cRC32_32;
        java.util.zip.Inflater inflater34 = gzipSource10.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater34);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer7 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer13 = null;
        gzipSource8.buffer = okBuffer13;
        gzipSource8.section = (byte) -1;
        gzipSource8.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource19.inflaterSource;
        java.util.zip.CRC32 cRC32_23 = gzipSource19.crc;
        java.util.zip.Inflater inflater24 = gzipSource19.inflater;
        gzipSource19.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source29 = gzipSource19.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = gzipSource30.inflaterSource;
        gzipSource19.source = gzipSource30;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource39.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        java.util.zip.Inflater inflater49 = gzipSource48.inflater;
        gzipSource39.inflater = inflater49;
        gzipSource38.inflater = inflater49;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer52 = gzipSource38.buffer;
        gzipSource19.updateCrc(okBuffer52, (long) '#', (long) (-1));
        gzipSource8.buffer = okBuffer52;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer52, (long) 3, (long) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer52);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.Deadline deadline13 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.Inflater inflater15 = gzipSource14.inflater;
        gzipSource0.inflater = inflater15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_18 = null;
        gzipSource17.crc = cRC32_18;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource20 = gzipSource17.inflaterSource;
        java.util.zip.CRC32 cRC32_21 = gzipSource17.crc;
        java.util.zip.Inflater inflater22 = gzipSource17.inflater;
        java.util.zip.CRC32 cRC32_23 = null;
        gzipSource17.crc = cRC32_23;
        java.util.zip.Inflater inflater25 = gzipSource17.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater27 = null;
        gzipSource26.inflater = inflater27;
        int int29 = gzipSource26.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource26.inflaterSource;
        gzipSource26.section = (byte) 100;
        int int33 = gzipSource26.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_35 = null;
        gzipSource34.crc = cRC32_35;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource34.inflaterSource;
        java.util.zip.CRC32 cRC32_38 = gzipSource34.crc;
        java.util.zip.CRC32 cRC32_39 = null;
        gzipSource34.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_42 = null;
        gzipSource41.crc = cRC32_42;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = gzipSource41.inflaterSource;
        java.util.zip.CRC32 cRC32_45 = gzipSource41.crc;
        java.util.zip.Inflater inflater46 = gzipSource41.inflater;
        gzipSource41.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source51 = gzipSource41.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater53 = null;
        gzipSource52.inflater = inflater53;
        int int55 = gzipSource52.section;
        gzipSource52.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource52.inflaterSource;
        gzipSource41.source = gzipSource52;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_62 = null;
        gzipSource61.crc = cRC32_62;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater65 = null;
        gzipSource64.inflater = inflater65;
        int int67 = gzipSource64.section;
        gzipSource64.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource64);
        java.util.zip.Inflater inflater71 = gzipSource70.inflater;
        gzipSource61.inflater = inflater71;
        gzipSource60.inflater = inflater71;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer74 = gzipSource60.buffer;
        gzipSource41.updateCrc(okBuffer74, (long) '#', (long) (-1));
        gzipSource34.updateCrc(okBuffer74, (long) 0, 0L);
        gzipSource26.buffer = okBuffer74;
        gzipSource17.buffer = okBuffer74;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer74, (long) (byte) -1, (long) 97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer74);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        int int11 = gzipSource0.section;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", (int) (short) 1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x00000a != expected 0x000001");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        gzipSource0.section = 'a';
        int int16 = gzipSource0.section;
        java.lang.Class<?> wildcardClass17 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 97 + "'", int16 == 97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.Source source26 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource27.inflaterSource;
        java.util.zip.Inflater inflater31 = gzipSource27.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource27.buffer;
        gzipSource7.buffer = okBuffer32;
        gzipSource0.source = okBuffer32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource35.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = null;
        gzipSource35.buffer = okBuffer40;
        int int42 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.Source source43 = null;
        gzipSource35.source = source43;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource35);
        gzipSource0.source = gzipSource45;
        com.squareup.okhttp.internal.bytes.Deadline deadline47 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource45.close(deadline47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer14 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline16 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer14);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.CRC32 cRC32_10 = gzipSource9.crc;
        java.util.zip.CRC32 cRC32_11 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource12.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource12.inflaterSource;
        int int16 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource12.source;
        gzipSource12.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer20 = gzipSource12.buffer;
        gzipSource12.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer23 = gzipSource12.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource24.inflaterSource;
        gzipSource24.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        gzipSource31.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource31);
        java.util.zip.Inflater inflater38 = gzipSource37.inflater;
        gzipSource24.inflater = inflater38;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource40 = null;
        gzipSource24.inflaterSource = inflaterSource40;
        gzipSource12.source = gzipSource24;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater44 = null;
        gzipSource43.inflater = inflater44;
        int int46 = gzipSource43.section;
        gzipSource43.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource43);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource50 = null;
        gzipSource43.inflaterSource = inflaterSource50;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater53 = null;
        gzipSource52.inflater = inflater53;
        int int55 = gzipSource52.section;
        gzipSource52.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer58 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline60 = null;
        long long61 = gzipSource52.read(okBuffer58, (long) 100, deadline60);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_63 = null;
        gzipSource62.crc = cRC32_63;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource65 = gzipSource62.inflaterSource;
        java.util.zip.CRC32 cRC32_66 = gzipSource62.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater68 = null;
        gzipSource67.inflater = inflater68;
        int int70 = gzipSource67.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource71 = gzipSource67.inflaterSource;
        gzipSource67.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource74 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater75 = null;
        gzipSource74.inflater = inflater75;
        int int77 = gzipSource74.section;
        gzipSource74.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource80 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource74);
        java.util.zip.Inflater inflater81 = gzipSource80.inflater;
        gzipSource67.inflater = inflater81;
        gzipSource62.inflater = inflater81;
        gzipSource52.inflater = inflater81;
        gzipSource43.inflater = inflater81;
        gzipSource24.inflater = inflater81;
        gzipSource9.inflater = inflater81;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_66);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource71);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater81);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource7.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        java.util.zip.Inflater inflater25 = gzipSource24.inflater;
        gzipSource15.inflater = inflater25;
        gzipSource7.inflater = inflater25;
        gzipSource6.inflater = inflater25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_30 = null;
        gzipSource29.crc = cRC32_30;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource29.inflaterSource;
        java.util.zip.CRC32 cRC32_33 = gzipSource29.crc;
        java.util.zip.CRC32 cRC32_34 = null;
        gzipSource29.crc = cRC32_34;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_37 = null;
        gzipSource36.crc = cRC32_37;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource36.inflaterSource;
        java.util.zip.CRC32 cRC32_40 = gzipSource36.crc;
        java.util.zip.Inflater inflater41 = gzipSource36.inflater;
        gzipSource36.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source46 = gzipSource36.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        gzipSource47.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource53 = gzipSource47.inflaterSource;
        gzipSource36.source = gzipSource47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_57 = null;
        gzipSource56.crc = cRC32_57;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater60 = null;
        gzipSource59.inflater = inflater60;
        int int62 = gzipSource59.section;
        gzipSource59.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource59);
        java.util.zip.Inflater inflater66 = gzipSource65.inflater;
        gzipSource56.inflater = inflater66;
        gzipSource55.inflater = inflater66;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer69 = gzipSource55.buffer;
        gzipSource36.updateCrc(okBuffer69, (long) '#', (long) (-1));
        gzipSource29.updateCrc(okBuffer69, (long) 0, 0L);
        gzipSource6.buffer = okBuffer69;
        gzipSource0.buffer = okBuffer69;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource78 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater79 = null;
        gzipSource78.inflater = inflater79;
        int int81 = gzipSource78.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource82 = gzipSource78.inflaterSource;
        gzipSource78.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer85 = gzipSource78.buffer;
        gzipSource0.buffer = okBuffer85;
        com.squareup.okhttp.internal.bytes.Deadline deadline87 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource53);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer69);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer85);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater3 = null;
        gzipSource2.inflater = inflater3;
        int int5 = gzipSource2.section;
        gzipSource2.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource2);
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource2.source;
        gzipSource0.source = gzipSource2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_18 = null;
        gzipSource17.crc = cRC32_18;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource20 = gzipSource17.inflaterSource;
        java.util.zip.CRC32 cRC32_21 = gzipSource17.crc;
        java.util.zip.Inflater inflater22 = gzipSource17.inflater;
        gzipSource17.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source27 = gzipSource17.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater29 = null;
        gzipSource28.inflater = inflater29;
        int int31 = gzipSource28.section;
        gzipSource28.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource28.inflaterSource;
        gzipSource17.source = gzipSource28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_38 = null;
        gzipSource37.crc = cRC32_38;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        gzipSource40.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        java.util.zip.Inflater inflater47 = gzipSource46.inflater;
        gzipSource37.inflater = inflater47;
        gzipSource36.inflater = inflater47;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer50 = gzipSource36.buffer;
        gzipSource17.updateCrc(okBuffer50, (long) '#', (long) (-1));
        com.squareup.okhttp.internal.bytes.Deadline deadline55 = null;
        long long56 = gzipSource11.read(okBuffer50, (long) (short) 0, deadline55);
        gzipSource0.source = gzipSource11;
        int int58 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline59 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater4 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline6 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer5);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        java.util.zip.Inflater inflater10 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource11.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource11.inflaterSource;
        java.util.zip.CRC32 cRC32_15 = gzipSource11.crc;
        java.util.zip.Inflater inflater16 = gzipSource11.inflater;
        gzipSource11.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source21 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_25 = null;
        gzipSource24.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        java.util.zip.Inflater inflater34 = gzipSource33.inflater;
        gzipSource24.inflater = inflater34;
        gzipSource23.inflater = inflater34;
        gzipSource11.inflater = inflater34;
        gzipSource0.inflater = inflater34;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater34);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.Deadline deadline3 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource10.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        java.util.zip.Inflater inflater20 = gzipSource15.inflater;
        gzipSource15.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source25 = gzipSource15.source;
        gzipSource10.source = source25;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource10.inflaterSource;
        int int28 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource29.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer34 = null;
        gzipSource29.buffer = okBuffer34;
        int int36 = gzipSource29.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource29.inflaterSource;
        gzipSource10.source = gzipSource29;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = null;
        gzipSource10.inflaterSource = inflaterSource39;
        java.util.zip.CRC32 cRC32_41 = gzipSource10.crc;
        gzipSource8.crc = cRC32_41;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_41);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = gzipSource0.buffer;
        java.lang.Class<?> wildcardClass12 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", 0, (int) (byte) 3);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000003 != expected 0x000000");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer13 = null;
        gzipSource8.buffer = okBuffer13;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource18.inflaterSource;
        gzipSource18.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline26 = null;
        gzipSource18.require((int) (short) -1, deadline26);
        com.squareup.okhttp.internal.bytes.Source source28 = gzipSource18.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        gzipSource29.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource29);
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource29.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_39 = null;
        gzipSource38.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource38.inflaterSource;
        java.util.zip.CRC32 cRC32_42 = gzipSource38.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater44 = null;
        gzipSource43.inflater = inflater44;
        int int46 = gzipSource43.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource43.inflaterSource;
        gzipSource43.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater51 = null;
        gzipSource50.inflater = inflater51;
        int int53 = gzipSource50.section;
        gzipSource50.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource50);
        java.util.zip.Inflater inflater57 = gzipSource56.inflater;
        gzipSource43.inflater = inflater57;
        gzipSource38.inflater = inflater57;
        gzipSource29.inflater = inflater57;
        gzipSource18.inflater = inflater57;
        gzipSource8.inflater = inflater57;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater64 = null;
        gzipSource63.inflater = inflater64;
        int int66 = gzipSource63.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource67 = gzipSource63.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer68 = null;
        gzipSource63.buffer = okBuffer68;
        int int70 = gzipSource63.section;
        com.squareup.okhttp.internal.bytes.Source source71 = null;
        gzipSource63.source = source71;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource63);
        java.util.zip.CRC32 cRC32_74 = gzipSource63.crc;
        gzipSource8.crc = cRC32_74;
        gzipSource0.crc = cRC32_74;
        com.squareup.okhttp.internal.bytes.Deadline deadline77 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater57);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource67);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_74);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater3 = null;
        gzipSource2.inflater = inflater3;
        int int5 = gzipSource2.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource2.inflaterSource;
        gzipSource2.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        gzipSource2.require((int) (short) -1, deadline10);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = null;
        gzipSource12.inflaterSource = inflaterSource19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource12.inflaterSource;
        gzipSource2.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = null;
        gzipSource12.inflaterSource = inflaterSource24;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = gzipSource12.buffer;
        gzipSource0.buffer = okBuffer26;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        gzipSource28.section = (short) 1;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer26);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        int int12 = gzipSource0.section;
        java.lang.Class<?> wildcardClass13 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.Source source21 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline23 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long24 = gzipSource0.seek((byte) 0, deadline23);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source21);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        gzipSource0.section = (byte) 1;
        java.util.zip.CRC32 cRC32_14 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        java.util.zip.Inflater inflater20 = gzipSource15.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource22.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.Inflater inflater40 = gzipSource39.inflater;
        gzipSource30.inflater = inflater40;
        gzipSource22.inflater = inflater40;
        gzipSource21.inflater = inflater40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_45 = null;
        gzipSource44.crc = cRC32_45;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource44.inflaterSource;
        java.util.zip.CRC32 cRC32_48 = gzipSource44.crc;
        java.util.zip.CRC32 cRC32_49 = null;
        gzipSource44.crc = cRC32_49;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_52 = null;
        gzipSource51.crc = cRC32_52;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource54 = gzipSource51.inflaterSource;
        java.util.zip.CRC32 cRC32_55 = gzipSource51.crc;
        java.util.zip.Inflater inflater56 = gzipSource51.inflater;
        gzipSource51.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source61 = gzipSource51.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater63 = null;
        gzipSource62.inflater = inflater63;
        int int65 = gzipSource62.section;
        gzipSource62.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource68 = gzipSource62.inflaterSource;
        gzipSource51.source = gzipSource62;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_72 = null;
        gzipSource71.crc = cRC32_72;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource74 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater75 = null;
        gzipSource74.inflater = inflater75;
        int int77 = gzipSource74.section;
        gzipSource74.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource80 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource74);
        java.util.zip.Inflater inflater81 = gzipSource80.inflater;
        gzipSource71.inflater = inflater81;
        gzipSource70.inflater = inflater81;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer84 = gzipSource70.buffer;
        gzipSource51.updateCrc(okBuffer84, (long) '#', (long) (-1));
        gzipSource44.updateCrc(okBuffer84, (long) 0, 0L);
        gzipSource21.buffer = okBuffer84;
        gzipSource15.buffer = okBuffer84;
        gzipSource0.buffer = okBuffer84;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source61);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource68);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer84);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 2;
        java.util.zip.Inflater inflater11 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource13.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource18.inflaterSource;
        java.util.zip.CRC32 cRC32_22 = gzipSource18.crc;
        java.util.zip.Inflater inflater23 = gzipSource18.inflater;
        gzipSource18.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source28 = gzipSource18.source;
        gzipSource13.source = source28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource13.inflaterSource;
        int int31 = gzipSource13.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        int int35 = gzipSource32.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = gzipSource32.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer37 = null;
        gzipSource32.buffer = okBuffer37;
        int int39 = gzipSource32.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource40 = gzipSource32.inflaterSource;
        gzipSource13.source = gzipSource32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        java.util.zip.CRC32 cRC32_45 = null;
        gzipSource42.crc = cRC32_45;
        gzipSource13.source = gzipSource42;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_49 = null;
        gzipSource48.crc = cRC32_49;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource48.inflaterSource;
        int int52 = gzipSource48.section;
        com.squareup.okhttp.internal.bytes.Source source53 = gzipSource48.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        gzipSource48.source = gzipSource54;
        java.util.zip.CRC32 cRC32_58 = gzipSource48.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater60 = null;
        gzipSource59.inflater = inflater60;
        int int62 = gzipSource59.section;
        gzipSource59.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource59);
        com.squareup.okhttp.internal.bytes.Deadline deadline67 = null;
        gzipSource65.require((-1), deadline67);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater70 = null;
        gzipSource69.inflater = inflater70;
        int int72 = gzipSource69.section;
        gzipSource69.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource69);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource76 = null;
        gzipSource69.inflaterSource = inflaterSource76;
        gzipSource65.source = inflaterSource76;
        java.util.zip.CRC32 cRC32_79 = gzipSource65.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource65.buffer;
        gzipSource48.updateCrc(okBuffer80, (long) (short) 100, (long) (short) -1);
        gzipSource13.buffer = okBuffer80;
        com.squareup.okhttp.internal.bytes.Deadline deadline86 = null;
        long long87 = gzipSource0.read(okBuffer80, 0L, deadline86);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 0L + "'", long87 == 0L);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater3 = null;
        gzipSource2.inflater = inflater3;
        int int5 = gzipSource2.section;
        gzipSource2.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource2);
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource2.source;
        gzipSource0.source = gzipSource2;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (byte) 10, deadline12);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        java.util.zip.CRC32 cRC32_14 = null;
        gzipSource8.crc = cRC32_14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource16.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        gzipSource19.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        java.util.zip.Inflater inflater26 = gzipSource25.inflater;
        gzipSource16.inflater = inflater26;
        gzipSource8.inflater = inflater26;
        gzipSource7.inflater = inflater26;
        java.util.zip.CRC32 cRC32_30 = gzipSource7.crc;
        gzipSource0.crc = cRC32_30;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_34 = null;
        gzipSource33.crc = cRC32_34;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater37 = null;
        gzipSource36.inflater = inflater37;
        int int39 = gzipSource36.section;
        gzipSource36.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource36);
        java.util.zip.Inflater inflater43 = gzipSource42.inflater;
        gzipSource33.inflater = inflater43;
        gzipSource32.inflater = inflater43;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer46 = gzipSource32.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline48 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long49 = gzipSource0.read(okBuffer46, (long) (short) -1, deadline48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: byteCount < 0: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer46);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Source source4 = gzipSource3.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        int int9 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource5.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = null;
        gzipSource5.inflaterSource = inflaterSource11;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource13.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer18 = null;
        gzipSource13.buffer = okBuffer18;
        gzipSource13.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = null;
        gzipSource13.inflaterSource = inflaterSource22;
        com.squareup.okhttp.internal.bytes.Source source24 = gzipSource13.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer25 = null;
        gzipSource13.buffer = okBuffer25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_29 = null;
        gzipSource28.crc = cRC32_29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        gzipSource31.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource31);
        java.util.zip.Inflater inflater38 = gzipSource37.inflater;
        gzipSource28.inflater = inflater38;
        gzipSource27.inflater = inflater38;
        gzipSource13.inflater = inflater38;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_44 = null;
        gzipSource43.crc = cRC32_44;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        java.util.zip.Inflater inflater53 = gzipSource52.inflater;
        gzipSource43.inflater = inflater53;
        gzipSource42.inflater = inflater53;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = gzipSource42.inflaterSource;
        java.util.zip.Inflater inflater57 = gzipSource42.inflater;
        gzipSource13.inflater = inflater57;
        gzipSource5.inflater = inflater57;
        gzipSource3.inflater = inflater57;
        com.squareup.okhttp.internal.bytes.Deadline deadline62 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource3.require((int) (byte) 1, deadline62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater57);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        gzipSource8.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        gzipSource15.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        java.util.zip.Inflater inflater22 = gzipSource21.inflater;
        gzipSource8.inflater = inflater22;
        gzipSource0.inflater = inflater22;
        com.squareup.okhttp.internal.bytes.Deadline deadline25 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater22);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater10 = null;
        gzipSource9.inflater = inflater10;
        int int12 = gzipSource9.section;
        gzipSource9.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource9);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = null;
        gzipSource9.inflaterSource = inflaterSource16;
        java.util.zip.CRC32 cRC32_18 = gzipSource9.crc;
        gzipSource9.section = 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource9.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer21, (long) 100, (long) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater10 = null;
        gzipSource9.inflater = inflater10;
        int int12 = gzipSource9.section;
        gzipSource9.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource9);
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource9.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource18.inflaterSource;
        java.util.zip.CRC32 cRC32_22 = gzipSource18.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource23.inflaterSource;
        gzipSource23.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        gzipSource23.inflater = inflater37;
        gzipSource18.inflater = inflater37;
        gzipSource9.inflater = inflater37;
        java.util.zip.CRC32 cRC32_41 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        java.util.zip.CRC32 cRC32_49 = null;
        gzipSource42.crc = cRC32_49;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_52 = null;
        gzipSource51.crc = cRC32_52;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource54 = gzipSource51.inflaterSource;
        java.util.zip.CRC32 cRC32_55 = gzipSource51.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater57 = null;
        gzipSource56.inflater = inflater57;
        int int59 = gzipSource56.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource60 = gzipSource56.inflaterSource;
        gzipSource56.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater64 = null;
        gzipSource63.inflater = inflater64;
        int int66 = gzipSource63.section;
        gzipSource63.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource63);
        java.util.zip.Inflater inflater70 = gzipSource69.inflater;
        gzipSource56.inflater = inflater70;
        gzipSource51.inflater = inflater70;
        gzipSource42.inflater = inflater70;
        java.util.zip.CRC32 cRC32_74 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_77 = null;
        gzipSource76.crc = cRC32_77;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource79 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater80 = null;
        gzipSource79.inflater = inflater80;
        int int82 = gzipSource79.section;
        gzipSource79.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource85 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource79);
        java.util.zip.Inflater inflater86 = gzipSource85.inflater;
        gzipSource76.inflater = inflater86;
        gzipSource75.inflater = inflater86;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer89 = gzipSource75.buffer;
        gzipSource42.buffer = okBuffer89;
        gzipSource9.updateCrc(okBuffer89, (long) '#', (long) (short) 0);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer94 = gzipSource9.buffer;
        gzipSource0.buffer = okBuffer94;
        com.squareup.okhttp.internal.bytes.Deadline deadline96 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_55);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource60);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_74);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer94);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = null;
        gzipSource0.inflaterSource = inflaterSource3;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline13 = null;
        gzipSource5.require((int) (short) -1, deadline13);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        gzipSource15.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = null;
        gzipSource15.inflaterSource = inflaterSource22;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource15.inflaterSource;
        gzipSource5.source = gzipSource15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = null;
        gzipSource15.inflaterSource = inflaterSource27;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer29 = gzipSource15.buffer;
        gzipSource0.updateCrc(okBuffer29, 1L, (long) (byte) 0);
        gzipSource0.section = 1;
        com.squareup.okhttp.internal.bytes.Deadline deadline36 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long37 = gzipSource0.seek((byte) 100, deadline36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer29);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.Inflater inflater14 = gzipSource13.inflater;
        gzipSource0.inflater = inflater14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource16.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource16.inflaterSource;
        java.util.zip.CRC32 cRC32_20 = gzipSource16.crc;
        java.util.zip.CRC32 cRC32_21 = null;
        gzipSource16.crc = cRC32_21;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        java.util.zip.Inflater inflater28 = gzipSource23.inflater;
        gzipSource23.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source33 = gzipSource23.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource40 = gzipSource34.inflaterSource;
        gzipSource23.source = gzipSource34;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_44 = null;
        gzipSource43.crc = cRC32_44;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        java.util.zip.Inflater inflater53 = gzipSource52.inflater;
        gzipSource43.inflater = inflater53;
        gzipSource42.inflater = inflater53;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer56 = gzipSource42.buffer;
        gzipSource23.updateCrc(okBuffer56, (long) '#', (long) (-1));
        gzipSource16.updateCrc(okBuffer56, (long) 0, 0L);
        gzipSource0.updateCrc(okBuffer56, (long) (byte) 3, 0L);
        int int66 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline68 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long69 = gzipSource0.seek((byte) 2, deadline68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        java.util.zip.CRC32 cRC32_10 = gzipSource6.crc;
        java.lang.Class<?> wildcardClass11 = gzipSource6.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource21.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = null;
        gzipSource21.buffer = okBuffer26;
        int int28 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.Source source29 = null;
        gzipSource21.source = source29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.CRC32 cRC32_32 = gzipSource21.crc;
        gzipSource10.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer34 = gzipSource10.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource35.inflaterSource;
        java.util.zip.CRC32 cRC32_39 = gzipSource35.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = gzipSource40.inflaterSource;
        gzipSource40.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        gzipSource47.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource47);
        java.util.zip.Inflater inflater54 = gzipSource53.inflater;
        gzipSource40.inflater = inflater54;
        gzipSource35.inflater = inflater54;
        com.squareup.okhttp.internal.bytes.Source source57 = gzipSource35.source;
        int int58 = gzipSource35.section;
        java.util.zip.CRC32 cRC32_59 = gzipSource35.crc;
        com.squareup.okhttp.internal.bytes.Source source60 = gzipSource35.source;
        gzipSource10.source = source60;
        java.util.zip.Inflater inflater62 = gzipSource10.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline63 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource10.close(deadline63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource44);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source57);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater62);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = null;
        gzipSource10.inflaterSource = inflaterSource22;
        com.squareup.okhttp.internal.bytes.Deadline deadline24 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource10.consumeTrailer(deadline24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.Inflater inflater14 = gzipSource13.inflater;
        gzipSource0.inflater = inflater14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource16.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource16.inflaterSource;
        java.util.zip.CRC32 cRC32_20 = gzipSource16.crc;
        java.util.zip.CRC32 cRC32_21 = null;
        gzipSource16.crc = cRC32_21;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        java.util.zip.Inflater inflater28 = gzipSource23.inflater;
        gzipSource23.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source33 = gzipSource23.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource40 = gzipSource34.inflaterSource;
        gzipSource23.source = gzipSource34;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_44 = null;
        gzipSource43.crc = cRC32_44;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        java.util.zip.Inflater inflater53 = gzipSource52.inflater;
        gzipSource43.inflater = inflater53;
        gzipSource42.inflater = inflater53;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer56 = gzipSource42.buffer;
        gzipSource23.updateCrc(okBuffer56, (long) '#', (long) (-1));
        gzipSource16.updateCrc(okBuffer56, (long) 0, 0L);
        gzipSource0.updateCrc(okBuffer56, (long) (byte) 3, 0L);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource66 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource66);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource3.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource3.buffer = okBuffer8;
        gzipSource3.section = (byte) -1;
        java.util.zip.Inflater inflater12 = gzipSource3.inflater;
        java.util.zip.CRC32 cRC32_13 = gzipSource3.crc;
        gzipSource0.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource15.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer20 = null;
        gzipSource15.buffer = okBuffer20;
        int int22 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.Source source23 = null;
        gzipSource15.source = source23;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        java.util.zip.CRC32 cRC32_26 = gzipSource15.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        java.util.zip.CRC32 cRC32_31 = gzipSource30.crc;
        gzipSource15.crc = cRC32_31;
        gzipSource0.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_35 = null;
        gzipSource34.crc = cRC32_35;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource34.inflaterSource;
        java.util.zip.CRC32 cRC32_38 = gzipSource34.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater40 = null;
        gzipSource39.inflater = inflater40;
        int int42 = gzipSource39.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource39.inflaterSource;
        gzipSource39.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        java.util.zip.Inflater inflater53 = gzipSource52.inflater;
        gzipSource39.inflater = inflater53;
        gzipSource34.inflater = inflater53;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = gzipSource34.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source57 = gzipSource34.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource58);
        java.util.zip.CRC32 cRC32_62 = gzipSource61.crc;
        gzipSource34.crc = cRC32_62;
        java.util.zip.CRC32 cRC32_64 = gzipSource34.crc;
        gzipSource0.crc = cRC32_64;
        com.squareup.okhttp.internal.bytes.Deadline deadline67 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long68 = gzipSource0.seek((byte) 100, deadline67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_64);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource0.crc = cRC32_5;
        gzipSource0.section = (-1);
        java.lang.Class<?> wildcardClass9 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource10.buffer;
        java.lang.Class<?> wildcardClass22 = okBuffer21.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = null;
        gzipSource30.inflaterSource = inflaterSource37;
        java.util.zip.CRC32 cRC32_39 = gzipSource30.crc;
        gzipSource19.crc = cRC32_39;
        java.util.zip.Inflater inflater41 = gzipSource19.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        java.util.zip.Inflater inflater49 = gzipSource48.inflater;
        gzipSource48.section = (byte) -1;
        java.util.zip.Inflater inflater52 = gzipSource48.inflater;
        gzipSource19.inflater = inflater52;
        com.squareup.okhttp.internal.bytes.Deadline deadline54 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource19.consumeHeader(deadline54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater52);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource0.buffer = okBuffer8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource11.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource16.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource16.inflaterSource;
        java.util.zip.CRC32 cRC32_20 = gzipSource16.crc;
        java.util.zip.Inflater inflater21 = gzipSource16.inflater;
        gzipSource16.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source26 = gzipSource16.source;
        gzipSource11.source = source26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource11.inflaterSource;
        gzipSource0.source = inflaterSource28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        int int34 = gzipSource30.section;
        com.squareup.okhttp.internal.bytes.Source source35 = gzipSource30.source;
        gzipSource30.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer38 = gzipSource30.buffer;
        gzipSource30.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer41 = gzipSource30.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer41, (-1L), (long) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer41);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        int int9 = gzipSource6.section;
        gzipSource6.section = (byte) -1;
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource6.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource14.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        gzipSource17.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource17);
        java.util.zip.Inflater inflater24 = gzipSource23.inflater;
        gzipSource14.inflater = inflater24;
        gzipSource6.inflater = inflater24;
        gzipSource0.source = gzipSource6;
        java.util.zip.Inflater inflater28 = gzipSource6.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        gzipSource6.section = (byte) -1;
        java.util.zip.Inflater inflater10 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource6.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = gzipSource6.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource6.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource13);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        int int9 = gzipSource6.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource6.inflaterSource;
        gzipSource6.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        gzipSource13.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource13);
        java.util.zip.Inflater inflater20 = gzipSource19.inflater;
        gzipSource6.inflater = inflater20;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = null;
        gzipSource6.inflaterSource = inflaterSource22;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = gzipSource6.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline26 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long27 = gzipSource0.read(okBuffer24, (long) (byte) 3, deadline26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer24);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        java.lang.Class<?> wildcardClass21 = gzipSource19.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        gzipSource6.section = (byte) -1;
        java.util.zip.Inflater inflater10 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource6.source;
        java.lang.Class<?> wildcardClass12 = source11.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer7 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        java.util.zip.CRC32 cRC32_12 = gzipSource8.crc;
        java.util.zip.Inflater inflater13 = gzipSource8.inflater;
        gzipSource8.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source18 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.Source source19 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_22 = null;
        gzipSource21.crc = cRC32_22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource21.inflater = inflater31;
        gzipSource20.inflater = inflater31;
        gzipSource8.inflater = inflater31;
        gzipSource0.inflater = inflater31;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.Source source26 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource27.inflaterSource;
        java.util.zip.Inflater inflater31 = gzipSource27.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource27.buffer;
        gzipSource7.buffer = okBuffer32;
        gzipSource0.source = okBuffer32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource35.inflater = inflater45;
        gzipSource0.inflater = inflater45;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_49 = null;
        gzipSource48.crc = cRC32_49;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource48.inflaterSource;
        int int52 = gzipSource48.section;
        com.squareup.okhttp.internal.bytes.Source source53 = gzipSource48.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        gzipSource48.source = gzipSource54;
        java.util.zip.CRC32 cRC32_58 = gzipSource48.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater60 = null;
        gzipSource59.inflater = inflater60;
        int int62 = gzipSource59.section;
        gzipSource59.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource59);
        com.squareup.okhttp.internal.bytes.Deadline deadline67 = null;
        gzipSource65.require((-1), deadline67);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater70 = null;
        gzipSource69.inflater = inflater70;
        int int72 = gzipSource69.section;
        gzipSource69.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource69);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource76 = null;
        gzipSource69.inflaterSource = inflaterSource76;
        gzipSource65.source = inflaterSource76;
        java.util.zip.CRC32 cRC32_79 = gzipSource65.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource65.buffer;
        gzipSource48.updateCrc(okBuffer80, (long) (short) 100, (long) (short) -1);
        gzipSource0.updateCrc(okBuffer80, 0L, 0L);
        com.squareup.okhttp.internal.bytes.Source source87 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline88 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline88);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source87);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        int int30 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        com.squareup.okhttp.internal.bytes.Deadline deadline33 = null;
        gzipSource31.require((int) (byte) 0, deadline33);
        com.squareup.okhttp.internal.bytes.Source source35 = gzipSource31.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source35);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        gzipSource0.section = '4';
        com.squareup.okhttp.internal.bytes.Deadline deadline9 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource12.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource12.inflaterSource;
        java.util.zip.CRC32 cRC32_16 = gzipSource12.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource17.inflaterSource;
        gzipSource17.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource17.inflater = inflater31;
        gzipSource12.inflater = inflater31;
        com.squareup.okhttp.internal.bytes.Source source34 = gzipSource12.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource12.inflaterSource;
        gzipSource11.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater38 = null;
        gzipSource37.inflater = inflater38;
        int int40 = gzipSource37.section;
        gzipSource37.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource37);
        java.util.zip.CRC32 cRC32_44 = null;
        gzipSource37.crc = cRC32_44;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_47 = null;
        gzipSource46.crc = cRC32_47;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = gzipSource46.inflaterSource;
        java.util.zip.CRC32 cRC32_50 = gzipSource46.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater52 = null;
        gzipSource51.inflater = inflater52;
        int int54 = gzipSource51.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource55 = gzipSource51.inflaterSource;
        gzipSource51.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        int int61 = gzipSource58.section;
        gzipSource58.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource58);
        java.util.zip.Inflater inflater65 = gzipSource64.inflater;
        gzipSource51.inflater = inflater65;
        gzipSource46.inflater = inflater65;
        gzipSource37.inflater = inflater65;
        java.util.zip.CRC32 cRC32_69 = gzipSource37.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_72 = null;
        gzipSource71.crc = cRC32_72;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource74 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater75 = null;
        gzipSource74.inflater = inflater75;
        int int77 = gzipSource74.section;
        gzipSource74.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource80 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource74);
        java.util.zip.Inflater inflater81 = gzipSource80.inflater;
        gzipSource71.inflater = inflater81;
        gzipSource70.inflater = inflater81;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer84 = gzipSource70.buffer;
        gzipSource37.buffer = okBuffer84;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource86 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer84);
        gzipSource12.updateCrc(okBuffer84, (long) (byte) 100, (long) (short) -1);
        gzipSource12.section = (short) 100;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource55);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_69);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer84);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        gzipSource0.source = gzipSource6;
        java.util.zip.CRC32 cRC32_10 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        com.squareup.okhttp.internal.bytes.Deadline deadline19 = null;
        gzipSource17.require((-1), deadline19);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = null;
        gzipSource21.inflaterSource = inflaterSource28;
        gzipSource17.source = inflaterSource28;
        java.util.zip.CRC32 cRC32_31 = gzipSource17.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource17.buffer;
        gzipSource0.updateCrc(okBuffer32, (long) (short) 100, (long) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", (int) '4', (int) (byte) 2);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000002 != expected 0x000034");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer32);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.Source source26 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource27.inflaterSource;
        java.util.zip.Inflater inflater31 = gzipSource27.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource27.buffer;
        gzipSource7.buffer = okBuffer32;
        gzipSource0.source = okBuffer32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource35.inflater = inflater45;
        gzipSource0.inflater = inflater45;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_49 = null;
        gzipSource48.crc = cRC32_49;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource48.inflaterSource;
        int int52 = gzipSource48.section;
        com.squareup.okhttp.internal.bytes.Source source53 = gzipSource48.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        gzipSource48.source = gzipSource54;
        java.util.zip.CRC32 cRC32_58 = gzipSource48.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater60 = null;
        gzipSource59.inflater = inflater60;
        int int62 = gzipSource59.section;
        gzipSource59.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource59);
        com.squareup.okhttp.internal.bytes.Deadline deadline67 = null;
        gzipSource65.require((-1), deadline67);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater70 = null;
        gzipSource69.inflater = inflater70;
        int int72 = gzipSource69.section;
        gzipSource69.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource69);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource76 = null;
        gzipSource69.inflaterSource = inflaterSource76;
        gzipSource65.source = inflaterSource76;
        java.util.zip.CRC32 cRC32_79 = gzipSource65.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource65.buffer;
        gzipSource48.updateCrc(okBuffer80, (long) (short) 100, (long) (short) -1);
        gzipSource0.updateCrc(okBuffer80, 0L, 0L);
        com.squareup.okhttp.internal.bytes.Source source87 = gzipSource0.source;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", 10, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0xffffffff != expected 0x00000a");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source87);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer7 = gzipSource6.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        java.util.zip.CRC32 cRC32_12 = gzipSource8.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        gzipSource13.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource13);
        java.util.zip.Inflater inflater20 = gzipSource19.inflater;
        gzipSource19.section = (byte) -1;
        java.util.zip.Inflater inflater23 = gzipSource19.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource30.section = (byte) -1;
        java.util.zip.Inflater inflater34 = gzipSource30.inflater;
        gzipSource19.inflater = inflater34;
        gzipSource8.inflater = inflater34;
        gzipSource6.inflater = inflater34;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater34);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource0.buffer = okBuffer8;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer10 = null;
        gzipSource0.buffer = okBuffer10;
        gzipSource0.section = (byte) -1;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater2 = null;
        gzipSource1.inflater = inflater2;
        int int4 = gzipSource1.section;
        gzipSource1.section = (byte) -1;
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource1.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource1.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource23.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        java.util.zip.Inflater inflater35 = gzipSource30.inflater;
        gzipSource30.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source40 = gzipSource30.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource41.inflaterSource;
        gzipSource30.source = gzipSource41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        java.util.zip.Inflater inflater60 = gzipSource59.inflater;
        gzipSource50.inflater = inflater60;
        gzipSource49.inflater = inflater60;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer63 = gzipSource49.buffer;
        gzipSource30.updateCrc(okBuffer63, (long) '#', (long) (-1));
        gzipSource23.updateCrc(okBuffer63, (long) 0, 0L);
        gzipSource0.buffer = okBuffer63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_72 = null;
        gzipSource71.crc = cRC32_72;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource74 = gzipSource71.inflaterSource;
        java.util.zip.CRC32 cRC32_75 = gzipSource71.crc;
        java.util.zip.Inflater inflater76 = gzipSource71.inflater;
        java.util.zip.CRC32 cRC32_77 = null;
        gzipSource71.crc = cRC32_77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer79 = null;
        gzipSource71.buffer = okBuffer79;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer81 = null;
        gzipSource71.buffer = okBuffer81;
        gzipSource0.source = gzipSource71;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource84 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        int int85 = gzipSource84.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline87 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long88 = gzipSource84.seek((byte) 0, deadline87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater76);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        int int9 = gzipSource6.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource6.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = null;
        gzipSource6.buffer = okBuffer11;
        int int13 = gzipSource6.section;
        java.util.zip.Inflater inflater14 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        java.util.zip.Inflater inflater20 = gzipSource15.inflater;
        java.util.zip.CRC32 cRC32_21 = null;
        gzipSource15.crc = cRC32_21;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource23.inflaterSource;
        gzipSource23.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        gzipSource23.inflater = inflater37;
        gzipSource15.inflater = inflater37;
        gzipSource6.source = gzipSource15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource41.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_47 = null;
        gzipSource46.crc = cRC32_47;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = gzipSource46.inflaterSource;
        java.util.zip.CRC32 cRC32_50 = gzipSource46.crc;
        java.util.zip.Inflater inflater51 = gzipSource46.inflater;
        gzipSource46.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source56 = gzipSource46.source;
        gzipSource41.source = source56;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource41.inflaterSource;
        int int59 = gzipSource41.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater61 = null;
        gzipSource60.inflater = inflater61;
        int int63 = gzipSource60.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource64 = gzipSource60.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer65 = null;
        gzipSource60.buffer = okBuffer65;
        int int67 = gzipSource60.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource68 = gzipSource60.inflaterSource;
        gzipSource41.source = gzipSource60;
        java.util.zip.Inflater inflater70 = gzipSource60.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater72 = null;
        gzipSource71.inflater = inflater72;
        int int74 = gzipSource71.section;
        gzipSource71.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource77 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource71);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource78 = null;
        gzipSource71.inflaterSource = inflaterSource78;
        java.util.zip.CRC32 cRC32_80 = gzipSource71.crc;
        gzipSource60.crc = cRC32_80;
        gzipSource6.crc = cRC32_80;
        gzipSource0.crc = cRC32_80;
        java.util.zip.CRC32 cRC32_84 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource64);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater70);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_84);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer13 = null;
        gzipSource8.buffer = okBuffer13;
        int int15 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.Source source16 = null;
        gzipSource8.source = source16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        gzipSource0.source = gzipSource8;
        gzipSource8.checkEqual("hi!", (int) (byte) 1, (int) (byte) 1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        gzipSource8.inflater = inflater18;
        gzipSource0.inflater = inflater18;
        com.squareup.okhttp.internal.bytes.Deadline deadline22 = null;
        gzipSource0.require((int) (byte) 0, deadline22);
        java.lang.Class<?> wildcardClass24 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.Inflater inflater14 = gzipSource13.inflater;
        gzipSource0.inflater = inflater14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        gzipSource16.section = (byte) -1;
        java.util.zip.CRC32 cRC32_22 = null;
        gzipSource16.crc = cRC32_22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_25 = null;
        gzipSource24.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        java.util.zip.Inflater inflater34 = gzipSource33.inflater;
        gzipSource24.inflater = inflater34;
        gzipSource16.inflater = inflater34;
        gzipSource0.inflater = inflater34;
        com.squareup.okhttp.internal.bytes.Source source38 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline39 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source38);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        int int9 = gzipSource6.section;
        gzipSource6.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = null;
        gzipSource6.inflaterSource = inflaterSource13;
        java.util.zip.CRC32 cRC32_15 = gzipSource6.crc;
        gzipSource6.section = 100;
        com.squareup.okhttp.internal.bytes.Source source18 = gzipSource6.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer19 = gzipSource6.buffer;
        gzipSource5.buffer = okBuffer19;
        gzipSource0.buffer = okBuffer19;
        com.squareup.okhttp.internal.bytes.Deadline deadline22 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer19);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        int int7 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater4 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource6.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource6.inflaterSource;
        int int10 = gzipSource6.section;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource6.source;
        gzipSource6.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer14 = gzipSource6.buffer;
        gzipSource6.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer17 = gzipSource6.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer17, 0L, (long) (byte) 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer17);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = null;
        gzipSource0.inflaterSource = inflaterSource33;
        com.squareup.okhttp.internal.bytes.Deadline deadline35 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.Inflater inflater14 = gzipSource13.inflater;
        gzipSource0.inflater = inflater14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        gzipSource16.section = (byte) -1;
        java.util.zip.CRC32 cRC32_22 = null;
        gzipSource16.crc = cRC32_22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_25 = null;
        gzipSource24.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        java.util.zip.Inflater inflater34 = gzipSource33.inflater;
        gzipSource24.inflater = inflater34;
        gzipSource16.inflater = inflater34;
        gzipSource0.inflater = inflater34;
        com.squareup.okhttp.internal.bytes.Source source38 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source39 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline41 = null;
        gzipSource0.require(0, deadline41);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer43 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline45 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long46 = gzipSource0.read(okBuffer43, (-1L), deadline45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: byteCount < 0: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source39);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        java.util.zip.CRC32 cRC32_9 = gzipSource8.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource11.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        gzipSource14.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        java.util.zip.Inflater inflater21 = gzipSource20.inflater;
        gzipSource11.inflater = inflater21;
        gzipSource10.inflater = inflater21;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = gzipSource10.buffer;
        java.util.zip.CRC32 cRC32_25 = gzipSource10.crc;
        gzipSource8.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource27.inflaterSource;
        gzipSource27.section = (byte) 100;
        int int34 = gzipSource27.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource35.inflaterSource;
        java.util.zip.CRC32 cRC32_39 = gzipSource35.crc;
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource35.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        java.util.zip.Inflater inflater47 = gzipSource42.inflater;
        gzipSource42.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source52 = gzipSource42.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource59 = gzipSource53.inflaterSource;
        gzipSource42.source = gzipSource53;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_63 = null;
        gzipSource62.crc = cRC32_63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater66 = null;
        gzipSource65.inflater = inflater66;
        int int68 = gzipSource65.section;
        gzipSource65.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource65);
        java.util.zip.Inflater inflater72 = gzipSource71.inflater;
        gzipSource62.inflater = inflater72;
        gzipSource61.inflater = inflater72;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer75 = gzipSource61.buffer;
        gzipSource42.updateCrc(okBuffer75, (long) '#', (long) (-1));
        gzipSource35.updateCrc(okBuffer75, (long) 0, 0L);
        gzipSource27.buffer = okBuffer75;
        gzipSource8.buffer = okBuffer75;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source52);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource59);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer75);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource33.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_39 = null;
        gzipSource38.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource38.inflaterSource;
        java.util.zip.CRC32 cRC32_42 = gzipSource38.crc;
        java.util.zip.Inflater inflater43 = gzipSource38.inflater;
        gzipSource38.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source48 = gzipSource38.source;
        gzipSource33.source = source48;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource50 = gzipSource33.inflaterSource;
        int int51 = gzipSource33.section;
        gzipSource0.source = gzipSource33;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = gzipSource53.buffer;
        gzipSource0.buffer = okBuffer60;
        gzipSource0.section = (short) 0;
        int int64 = gzipSource0.section;
        java.util.zip.CRC32 cRC32_65 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_65);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        java.util.zip.CRC32 cRC32_9 = gzipSource8.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource11.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        gzipSource14.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        java.util.zip.Inflater inflater21 = gzipSource20.inflater;
        gzipSource11.inflater = inflater21;
        gzipSource10.inflater = inflater21;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = gzipSource10.buffer;
        java.util.zip.CRC32 cRC32_25 = gzipSource10.crc;
        gzipSource8.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource8.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource27);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer9 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource10.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = gzipSource10.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource13.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource18.inflaterSource;
        java.util.zip.CRC32 cRC32_22 = gzipSource18.crc;
        java.util.zip.Inflater inflater23 = gzipSource18.inflater;
        gzipSource18.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source28 = gzipSource18.source;
        gzipSource13.source = source28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource13.inflaterSource;
        int int31 = gzipSource13.section;
        gzipSource13.section = 3;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        java.util.zip.Inflater inflater41 = gzipSource40.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater46 = null;
        gzipSource45.inflater = inflater46;
        int int48 = gzipSource45.section;
        gzipSource45.section = (byte) -1;
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource45.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_54 = null;
        gzipSource53.crc = cRC32_54;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater57 = null;
        gzipSource56.inflater = inflater57;
        int int59 = gzipSource56.section;
        gzipSource56.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource56);
        java.util.zip.Inflater inflater63 = gzipSource62.inflater;
        gzipSource53.inflater = inflater63;
        gzipSource45.inflater = inflater63;
        gzipSource44.inflater = inflater63;
        gzipSource43.inflater = inflater63;
        gzipSource13.inflater = inflater63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_70 = null;
        gzipSource69.crc = cRC32_70;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource72 = gzipSource69.inflaterSource;
        int int73 = gzipSource69.section;
        com.squareup.okhttp.internal.bytes.Source source74 = gzipSource69.source;
        gzipSource69.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer77 = gzipSource69.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer78 = gzipSource69.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource79 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource69);
        com.squareup.okhttp.internal.bytes.Source source80 = gzipSource79.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer81 = gzipSource79.buffer;
        gzipSource13.buffer = okBuffer81;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource10.updateCrc(okBuffer81, (long) 0, (long) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource72);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer81);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource0.buffer = okBuffer8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer12, (long) 100, (long) 97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        gzipSource6.section = (byte) -1;
        gzipSource6.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer17 = null;
        gzipSource12.buffer = okBuffer17;
        gzipSource12.section = (byte) -1;
        gzipSource12.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer23 = gzipSource12.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource24.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_30 = null;
        gzipSource29.crc = cRC32_30;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource29.inflaterSource;
        java.util.zip.CRC32 cRC32_33 = gzipSource29.crc;
        java.util.zip.Inflater inflater34 = gzipSource29.inflater;
        gzipSource29.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source39 = gzipSource29.source;
        gzipSource24.source = source39;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource24.inflaterSource;
        int int42 = gzipSource24.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater44 = null;
        gzipSource43.inflater = inflater44;
        int int46 = gzipSource43.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource43.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer48 = null;
        gzipSource43.buffer = okBuffer48;
        int int50 = gzipSource43.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource43.inflaterSource;
        gzipSource24.source = gzipSource43;
        java.util.zip.Inflater inflater53 = gzipSource43.inflater;
        int int54 = gzipSource43.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource43);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_57 = null;
        gzipSource56.crc = cRC32_57;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource59 = gzipSource56.inflaterSource;
        int int60 = gzipSource56.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer61 = gzipSource56.buffer;
        gzipSource55.buffer = okBuffer61;
        gzipSource12.buffer = okBuffer61;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.updateCrc(okBuffer61, (long) (byte) 2, (long) 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater53);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource59);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer61);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline9 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long10 = gzipSource0.seek((byte) 3, deadline9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = null;
        gzipSource0.inflaterSource = inflaterSource3;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource5 = null;
        gzipSource0.inflaterSource = inflaterSource5;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", (int) '#', (-1));
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0xffffffff != expected 0x000023");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = null;
        gzipSource0.inflaterSource = inflaterSource3;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline13 = null;
        gzipSource5.require((int) (short) -1, deadline13);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        gzipSource15.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = null;
        gzipSource15.inflaterSource = inflaterSource22;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource15.inflaterSource;
        gzipSource5.source = gzipSource15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = null;
        gzipSource15.inflaterSource = inflaterSource27;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer29 = gzipSource15.buffer;
        gzipSource0.updateCrc(okBuffer29, 1L, (long) (byte) 0);
        gzipSource0.section = 1;
        com.squareup.okhttp.internal.bytes.Deadline deadline36 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long37 = gzipSource0.seek((byte) -1, deadline36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer29);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        gzipSource17.section = (byte) -1;
        java.util.zip.Inflater inflater21 = gzipSource17.inflater;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource17.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer23 = gzipSource17.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer23, (long) 100, (long) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer23);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource6.inflaterSource;
        gzipSource6.section = 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline25 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.consumeTrailer(deadline25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource22);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_11 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.CRC32 cRC32_16 = gzipSource15.crc;
        gzipSource0.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = null;
        gzipSource0.inflaterSource = inflaterSource18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        java.util.zip.Inflater inflater27 = gzipSource26.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource26);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource29 = gzipSource28.inflaterSource;
        gzipSource0.inflaterSource = inflaterSource29;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource29);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        java.util.zip.CRC32 cRC32_2 = gzipSource0.crc;
        java.lang.Class<?> wildcardClass3 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.Inflater inflater40 = gzipSource39.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource39);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource41);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        java.util.zip.CRC32 cRC32_50 = null;
        gzipSource44.crc = cRC32_50;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_53 = null;
        gzipSource52.crc = cRC32_53;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        gzipSource55.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource55);
        java.util.zip.Inflater inflater62 = gzipSource61.inflater;
        gzipSource52.inflater = inflater62;
        gzipSource44.inflater = inflater62;
        gzipSource43.inflater = inflater62;
        gzipSource42.inflater = inflater62;
        gzipSource0.inflater = inflater62;
        java.util.zip.Inflater inflater68 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater70 = null;
        gzipSource69.inflater = inflater70;
        int int72 = gzipSource69.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource73 = gzipSource69.inflaterSource;
        gzipSource69.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer76 = gzipSource69.buffer;
        gzipSource0.buffer = okBuffer76;
        gzipSource0.section = 3;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater68);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer76);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        long long11 = gzipSource0.read(okBuffer8, (long) (byte) 10, deadline10);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource12.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource12.inflaterSource;
        java.util.zip.CRC32 cRC32_16 = gzipSource12.crc;
        java.util.zip.Inflater inflater17 = gzipSource12.inflater;
        gzipSource12.checkEqual("", 100, 100);
        java.util.zip.Inflater inflater22 = gzipSource12.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer23 = gzipSource12.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer23, 0L, 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer23);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource10.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        java.util.zip.Inflater inflater20 = gzipSource15.inflater;
        gzipSource15.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source25 = gzipSource15.source;
        gzipSource10.source = source25;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource10.inflaterSource;
        int int28 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource29.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer34 = null;
        gzipSource29.buffer = okBuffer34;
        int int36 = gzipSource29.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource29.inflaterSource;
        gzipSource10.source = gzipSource29;
        java.util.zip.Inflater inflater39 = gzipSource29.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        gzipSource40.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = null;
        gzipSource40.inflaterSource = inflaterSource47;
        java.util.zip.CRC32 cRC32_49 = gzipSource40.crc;
        gzipSource29.crc = cRC32_49;
        gzipSource6.source = gzipSource29;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource29.checkEqual("hi!", (int) (byte) 2, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000064 != expected 0x000002");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_49);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        gzipSource0.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = null;
        gzipSource0.inflaterSource = inflaterSource6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        java.util.zip.Inflater inflater13 = gzipSource8.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource8.inflaterSource;
        java.util.zip.Inflater inflater15 = gzipSource8.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource16.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource16.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource20 = gzipSource16.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        com.squareup.okhttp.internal.bytes.Deadline deadline29 = null;
        gzipSource27.require((-1), deadline29);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        gzipSource31.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource31);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = null;
        gzipSource31.inflaterSource = inflaterSource38;
        gzipSource27.source = inflaterSource38;
        java.util.zip.CRC32 cRC32_41 = gzipSource27.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer42 = gzipSource27.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource27.inflaterSource;
        gzipSource16.inflaterSource = inflaterSource43;
        gzipSource8.inflaterSource = inflaterSource43;
        gzipSource0.inflaterSource = inflaterSource43;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource43);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        gzipSource0.source = gzipSource6;
        java.util.zip.CRC32 cRC32_10 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        com.squareup.okhttp.internal.bytes.Deadline deadline19 = null;
        gzipSource17.require((-1), deadline19);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = null;
        gzipSource21.inflaterSource = inflaterSource28;
        gzipSource17.source = inflaterSource28;
        java.util.zip.CRC32 cRC32_31 = gzipSource17.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource17.buffer;
        gzipSource0.updateCrc(okBuffer32, (long) (short) 100, (long) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", 0, (int) (byte) 3);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000003 != expected 0x000000");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer32);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater7 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        gzipSource13.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource13);
        com.squareup.okhttp.internal.bytes.Deadline deadline21 = null;
        gzipSource19.require((-1), deadline21);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        gzipSource23.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource23);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = null;
        gzipSource23.inflaterSource = inflaterSource30;
        gzipSource19.source = inflaterSource30;
        java.util.zip.CRC32 cRC32_33 = gzipSource19.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer34 = gzipSource19.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource19.inflaterSource;
        gzipSource8.inflaterSource = inflaterSource35;
        gzipSource0.inflaterSource = inflaterSource35;
        java.lang.Class<?> wildcardClass38 = inflaterSource35.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        gzipSource0.section = 0;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline5 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_4);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater15 = gzipSource0.inflater;
        java.util.zip.Inflater inflater16 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long19 = gzipSource0.seek((byte) 100, deadline18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater16);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource0.buffer = okBuffer8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource11.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource16.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource16.inflaterSource;
        java.util.zip.CRC32 cRC32_20 = gzipSource16.crc;
        java.util.zip.Inflater inflater21 = gzipSource16.inflater;
        gzipSource16.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source26 = gzipSource16.source;
        gzipSource11.source = source26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource11.inflaterSource;
        gzipSource0.source = inflaterSource28;
        int int30 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline32 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long33 = gzipSource0.seek((byte) 0, deadline32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        gzipSource3.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource3);
        java.util.zip.Inflater inflater10 = gzipSource9.inflater;
        gzipSource0.inflater = inflater10;
        java.util.zip.CRC32 cRC32_12 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline14 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (short) 1, deadline14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        gzipSource0.section = 0;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline6 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_4);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        java.util.zip.CRC32 cRC32_9 = gzipSource8.crc;
        int int10 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource8.close(deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource0.source;
        int int23 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = gzipSource0.buffer;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer24);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((int) (short) 0, deadline8);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource6.source;
        java.lang.Class<?> wildcardClass11 = source10.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        java.util.zip.CRC32 cRC32_21 = gzipSource10.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline22 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource10.close(deadline22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_21);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        java.util.zip.Inflater inflater14 = gzipSource9.inflater;
        gzipSource9.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source19 = gzipSource9.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource20.inflaterSource;
        gzipSource9.source = gzipSource20;
        gzipSource0.source = gzipSource20;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource29 = null;
        gzipSource20.inflaterSource = inflaterSource29;
        com.squareup.okhttp.internal.bytes.Deadline deadline32 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long33 = gzipSource20.seek((byte) 10, deadline32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        int int30 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_33 = null;
        gzipSource32.crc = cRC32_33;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource32.inflaterSource;
        int int36 = gzipSource32.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer37 = gzipSource32.buffer;
        gzipSource31.buffer = okBuffer37;
        com.squareup.okhttp.internal.bytes.Deadline deadline39 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource31.consumeTrailer(deadline39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer37);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = null;
        gzipSource30.inflaterSource = inflaterSource37;
        java.util.zip.CRC32 cRC32_39 = gzipSource30.crc;
        gzipSource19.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource41.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_47 = null;
        gzipSource46.crc = cRC32_47;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = gzipSource46.inflaterSource;
        java.util.zip.CRC32 cRC32_50 = gzipSource46.crc;
        java.util.zip.Inflater inflater51 = gzipSource46.inflater;
        gzipSource46.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source56 = gzipSource46.source;
        gzipSource41.source = source56;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource41.inflaterSource;
        int int59 = gzipSource41.section;
        gzipSource41.section = 3;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater63 = null;
        gzipSource62.inflater = inflater63;
        int int65 = gzipSource62.section;
        gzipSource62.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource62);
        java.util.zip.Inflater inflater69 = gzipSource68.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource68);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource70);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater74 = null;
        gzipSource73.inflater = inflater74;
        int int76 = gzipSource73.section;
        gzipSource73.section = (byte) -1;
        java.util.zip.CRC32 cRC32_79 = null;
        gzipSource73.crc = cRC32_79;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource81 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_82 = null;
        gzipSource81.crc = cRC32_82;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource84 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater85 = null;
        gzipSource84.inflater = inflater85;
        int int87 = gzipSource84.section;
        gzipSource84.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource90 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource84);
        java.util.zip.Inflater inflater91 = gzipSource90.inflater;
        gzipSource81.inflater = inflater91;
        gzipSource73.inflater = inflater91;
        gzipSource72.inflater = inflater91;
        gzipSource71.inflater = inflater91;
        gzipSource41.inflater = inflater91;
        gzipSource19.inflater = inflater91;
        gzipSource19.section = '4';
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater69);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int87 + "' != '" + 100 + "'", int87 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater91);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater3 = null;
        gzipSource2.inflater = inflater3;
        int int5 = gzipSource2.section;
        gzipSource2.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource2);
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource2.source;
        gzipSource0.source = gzipSource2;
        java.lang.Class<?> wildcardClass11 = gzipSource2.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        gzipSource0.section = (byte) 3;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = null;
        gzipSource0.inflaterSource = inflaterSource3;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource5 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer6 = gzipSource0.buffer;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer6);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        java.util.zip.Inflater inflater10 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_12 = gzipSource11.crc;
        int int13 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline15 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long16 = gzipSource11.seek((byte) 1, deadline15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        gzipSource3.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource3);
        java.util.zip.Inflater inflater10 = gzipSource9.inflater;
        gzipSource0.inflater = inflater10;
        java.util.zip.CRC32 cRC32_12 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Source source13 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        java.util.zip.Inflater inflater25 = gzipSource24.inflater;
        gzipSource15.inflater = inflater25;
        gzipSource14.inflater = inflater25;
        gzipSource0.inflater = inflater25;
        java.util.zip.CRC32 cRC32_29 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline31 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require(100, deadline31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_29);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource0.buffer = okBuffer8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource12.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource12.inflaterSource;
        java.util.zip.CRC32 cRC32_16 = gzipSource12.crc;
        java.util.zip.Inflater inflater17 = gzipSource12.inflater;
        gzipSource12.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource12.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        gzipSource23.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource29 = gzipSource23.inflaterSource;
        gzipSource12.source = gzipSource23;
        com.squareup.okhttp.internal.bytes.Source source31 = gzipSource12.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        int int35 = gzipSource32.section;
        gzipSource32.section = (byte) -1;
        java.util.zip.CRC32 cRC32_38 = null;
        gzipSource32.crc = cRC32_38;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_41 = null;
        gzipSource40.crc = cRC32_41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater44 = null;
        gzipSource43.inflater = inflater44;
        int int46 = gzipSource43.section;
        gzipSource43.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource43);
        java.util.zip.Inflater inflater50 = gzipSource49.inflater;
        gzipSource40.inflater = inflater50;
        gzipSource32.inflater = inflater50;
        gzipSource12.inflater = inflater50;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource54.inflaterSource;
        gzipSource54.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline62 = null;
        gzipSource54.require((int) (short) -1, deadline62);
        com.squareup.okhttp.internal.bytes.Source source64 = gzipSource54.source;
        int int65 = gzipSource54.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer66 = null;
        gzipSource54.buffer = okBuffer66;
        gzipSource12.source = okBuffer66;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer69 = gzipSource12.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater71 = null;
        gzipSource70.inflater = inflater71;
        int int73 = gzipSource70.section;
        gzipSource70.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource70);
        com.squareup.okhttp.internal.bytes.Deadline deadline78 = null;
        gzipSource76.require((-1), deadline78);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource80 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater81 = null;
        gzipSource80.inflater = inflater81;
        int int83 = gzipSource80.section;
        gzipSource80.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource86 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource80);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource87 = null;
        gzipSource80.inflaterSource = inflaterSource87;
        gzipSource76.source = inflaterSource87;
        java.util.zip.CRC32 cRC32_90 = gzipSource76.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer91 = gzipSource76.buffer;
        int int92 = gzipSource76.section;
        java.util.zip.CRC32 cRC32_93 = gzipSource76.crc;
        com.squareup.okhttp.internal.bytes.Source source94 = gzipSource76.source;
        java.util.zip.CRC32 cRC32_95 = gzipSource76.crc;
        gzipSource12.crc = cRC32_95;
        gzipSource0.crc = cRC32_95;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer69);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int83 + "' != '" + 100 + "'", int83 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer91);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int92 + "' != '" + 100 + "'", int92 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_95);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        gzipSource6.section = (byte) -1;
        java.util.zip.Inflater inflater10 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource6.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = gzipSource6.buffer;
        com.squareup.okhttp.internal.bytes.Source source13 = null;
        gzipSource6.source = source13;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer12);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        gzipSource0.source = gzipSource6;
        int int10 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        int int12 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer7 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = null;
        gzipSource8.inflaterSource = inflaterSource15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        java.util.zip.CRC32 cRC32_24 = gzipSource18.crc;
        gzipSource8.crc = cRC32_24;
        gzipSource0.crc = cRC32_24;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_24);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        java.util.zip.Inflater inflater17 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Source source18 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source18);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int11 = gzipSource10.section;
        java.util.zip.CRC32 cRC32_12 = gzipSource10.crc;
        gzipSource0.crc = cRC32_12;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_12);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource21.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = null;
        gzipSource21.buffer = okBuffer26;
        int int28 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.Source source29 = null;
        gzipSource21.source = source29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.CRC32 cRC32_32 = gzipSource21.crc;
        gzipSource10.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer34 = gzipSource10.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource35.inflaterSource;
        java.util.zip.CRC32 cRC32_39 = gzipSource35.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = gzipSource40.inflaterSource;
        gzipSource40.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        gzipSource47.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource47);
        java.util.zip.Inflater inflater54 = gzipSource53.inflater;
        gzipSource40.inflater = inflater54;
        gzipSource35.inflater = inflater54;
        com.squareup.okhttp.internal.bytes.Source source57 = gzipSource35.source;
        int int58 = gzipSource35.section;
        java.util.zip.CRC32 cRC32_59 = gzipSource35.crc;
        com.squareup.okhttp.internal.bytes.Source source60 = gzipSource35.source;
        gzipSource10.source = source60;
        java.util.zip.Inflater inflater62 = gzipSource10.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater64 = null;
        gzipSource63.inflater = inflater64;
        int int66 = gzipSource63.section;
        gzipSource63.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource63);
        java.util.zip.Inflater inflater70 = gzipSource69.inflater;
        gzipSource69.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int74 = gzipSource73.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_76 = null;
        gzipSource75.crc = cRC32_76;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource78 = gzipSource75.inflaterSource;
        java.util.zip.CRC32 cRC32_79 = gzipSource75.crc;
        java.util.zip.Inflater inflater80 = gzipSource75.inflater;
        java.util.zip.CRC32 cRC32_81 = null;
        gzipSource75.crc = cRC32_81;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer83 = gzipSource75.buffer;
        gzipSource73.updateCrc(okBuffer83, (long) '4', (long) (-1));
        gzipSource69.buffer = okBuffer83;
        gzipSource10.source = gzipSource69;
        java.util.zip.CRC32 cRC32_89 = gzipSource10.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource44);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source57);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater62);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater70);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_89);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.Inflater inflater40 = gzipSource39.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource39);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource41);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        java.util.zip.CRC32 cRC32_50 = null;
        gzipSource44.crc = cRC32_50;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_53 = null;
        gzipSource52.crc = cRC32_53;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        gzipSource55.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource55);
        java.util.zip.Inflater inflater62 = gzipSource61.inflater;
        gzipSource52.inflater = inflater62;
        gzipSource44.inflater = inflater62;
        gzipSource43.inflater = inflater62;
        gzipSource42.inflater = inflater62;
        gzipSource0.inflater = inflater62;
        java.util.zip.Inflater inflater68 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline69 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater68);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_11 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer17 = null;
        gzipSource12.buffer = okBuffer17;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = null;
        gzipSource12.inflaterSource = inflaterSource21;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource12.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource12.buffer = okBuffer24;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        gzipSource27.inflater = inflater37;
        gzipSource26.inflater = inflater37;
        gzipSource12.inflater = inflater37;
        gzipSource0.source = gzipSource12;
        java.util.zip.CRC32 cRC32_42 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_42);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        gzipSource0.section = '4';
        com.squareup.okhttp.internal.bytes.Deadline deadline5 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long6 = gzipSource0.seek((byte) 0, deadline5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer13 = null;
        gzipSource8.buffer = okBuffer13;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource18.inflaterSource;
        gzipSource18.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline26 = null;
        gzipSource18.require((int) (short) -1, deadline26);
        com.squareup.okhttp.internal.bytes.Source source28 = gzipSource18.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        gzipSource29.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource29);
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource29.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_39 = null;
        gzipSource38.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource38.inflaterSource;
        java.util.zip.CRC32 cRC32_42 = gzipSource38.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater44 = null;
        gzipSource43.inflater = inflater44;
        int int46 = gzipSource43.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource43.inflaterSource;
        gzipSource43.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater51 = null;
        gzipSource50.inflater = inflater51;
        int int53 = gzipSource50.section;
        gzipSource50.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource50);
        java.util.zip.Inflater inflater57 = gzipSource56.inflater;
        gzipSource43.inflater = inflater57;
        gzipSource38.inflater = inflater57;
        gzipSource29.inflater = inflater57;
        gzipSource18.inflater = inflater57;
        gzipSource8.inflater = inflater57;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater64 = null;
        gzipSource63.inflater = inflater64;
        int int66 = gzipSource63.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource67 = gzipSource63.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer68 = null;
        gzipSource63.buffer = okBuffer68;
        int int70 = gzipSource63.section;
        com.squareup.okhttp.internal.bytes.Source source71 = null;
        gzipSource63.source = source71;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource63);
        java.util.zip.CRC32 cRC32_74 = gzipSource63.crc;
        gzipSource8.crc = cRC32_74;
        gzipSource0.crc = cRC32_74;
        int int77 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater57);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource67);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_74);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource2.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource5 = gzipSource2.inflaterSource;
        java.util.zip.CRC32 cRC32_6 = gzipSource2.crc;
        java.util.zip.Inflater inflater7 = gzipSource2.inflater;
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource2.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer10 = gzipSource2.buffer;
        gzipSource0.updateCrc(okBuffer10, (long) '4', (long) (-1));
        java.util.zip.CRC32 cRC32_14 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        gzipSource16.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = null;
        gzipSource16.inflaterSource = inflaterSource23;
        java.util.zip.CRC32 cRC32_25 = gzipSource16.crc;
        gzipSource16.section = 100;
        com.squareup.okhttp.internal.bytes.Source source28 = gzipSource16.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer29 = gzipSource16.buffer;
        gzipSource15.buffer = okBuffer29;
        com.squareup.okhttp.internal.bytes.Deadline deadline32 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long33 = gzipSource0.read(okBuffer29, (long) '#', deadline32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer29);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long13 = gzipSource0.seek((byte) 10, deadline12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        int int11 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource33.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_39 = null;
        gzipSource38.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource38.inflaterSource;
        java.util.zip.CRC32 cRC32_42 = gzipSource38.crc;
        java.util.zip.Inflater inflater43 = gzipSource38.inflater;
        gzipSource38.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source48 = gzipSource38.source;
        gzipSource33.source = source48;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource50 = gzipSource33.inflaterSource;
        int int51 = gzipSource33.section;
        gzipSource0.source = gzipSource33;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer53 = gzipSource33.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline55 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long56 = gzipSource33.seek((byte) 1, deadline55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer53);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_11 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_11);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 2;
        java.util.zip.Inflater inflater11 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater11);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource6.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = null;
        gzipSource11.inflaterSource = inflaterSource15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource11.inflaterSource;
        int int18 = gzipSource11.section;
        gzipSource6.source = gzipSource11;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        com.squareup.okhttp.internal.bytes.Deadline deadline22 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long23 = gzipSource20.seek((byte) 10, deadline22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        gzipSource10.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = gzipSource10.crc;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource10.checkEqual("", 97, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000001 != expected 0x000061");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_17);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater2 = null;
        gzipSource1.inflater = inflater2;
        int int4 = gzipSource1.section;
        gzipSource1.section = (byte) -1;
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource1.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource1.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource23.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        java.util.zip.Inflater inflater35 = gzipSource30.inflater;
        gzipSource30.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source40 = gzipSource30.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource41.inflaterSource;
        gzipSource30.source = gzipSource41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        java.util.zip.Inflater inflater60 = gzipSource59.inflater;
        gzipSource50.inflater = inflater60;
        gzipSource49.inflater = inflater60;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer63 = gzipSource49.buffer;
        gzipSource30.updateCrc(okBuffer63, (long) '#', (long) (-1));
        gzipSource23.updateCrc(okBuffer63, (long) 0, 0L);
        gzipSource0.buffer = okBuffer63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_72 = null;
        gzipSource71.crc = cRC32_72;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource74 = gzipSource71.inflaterSource;
        java.util.zip.CRC32 cRC32_75 = gzipSource71.crc;
        java.util.zip.Inflater inflater76 = gzipSource71.inflater;
        java.util.zip.CRC32 cRC32_77 = null;
        gzipSource71.crc = cRC32_77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer79 = null;
        gzipSource71.buffer = okBuffer79;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer81 = null;
        gzipSource71.buffer = okBuffer81;
        gzipSource0.source = gzipSource71;
        com.squareup.okhttp.internal.bytes.Source source84 = gzipSource0.source;
        java.util.zip.Inflater inflater85 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline86 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater85);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        java.util.zip.CRC32 cRC32_9 = gzipSource0.crc;
        gzipSource0.section = 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = null;
        gzipSource0.buffer = okBuffer12;
        java.util.zip.Inflater inflater14 = gzipSource0.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater14);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        gzipSource6.section = 97;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource2.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource5 = gzipSource2.inflaterSource;
        java.util.zip.CRC32 cRC32_6 = gzipSource2.crc;
        java.util.zip.Inflater inflater7 = gzipSource2.inflater;
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource2.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer10 = gzipSource2.buffer;
        gzipSource0.updateCrc(okBuffer10, (long) '4', (long) (-1));
        java.util.zip.CRC32 cRC32_14 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline15 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_14);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource21.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = null;
        gzipSource21.buffer = okBuffer26;
        int int28 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.Source source29 = null;
        gzipSource21.source = source29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.CRC32 cRC32_32 = gzipSource21.crc;
        gzipSource10.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer34 = gzipSource10.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource35.inflaterSource;
        java.util.zip.CRC32 cRC32_39 = gzipSource35.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = gzipSource40.inflaterSource;
        gzipSource40.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        gzipSource47.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource47);
        java.util.zip.Inflater inflater54 = gzipSource53.inflater;
        gzipSource40.inflater = inflater54;
        gzipSource35.inflater = inflater54;
        com.squareup.okhttp.internal.bytes.Source source57 = gzipSource35.source;
        int int58 = gzipSource35.section;
        java.util.zip.CRC32 cRC32_59 = gzipSource35.crc;
        com.squareup.okhttp.internal.bytes.Source source60 = gzipSource35.source;
        gzipSource10.source = source60;
        java.util.zip.Inflater inflater62 = gzipSource10.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater64 = null;
        gzipSource63.inflater = inflater64;
        int int66 = gzipSource63.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource67 = gzipSource63.inflaterSource;
        gzipSource63.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline71 = null;
        gzipSource63.require((int) (short) -1, deadline71);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater74 = null;
        gzipSource73.inflater = inflater74;
        int int76 = gzipSource73.section;
        gzipSource73.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource79 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource73);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource80 = null;
        gzipSource73.inflaterSource = inflaterSource80;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource82 = gzipSource73.inflaterSource;
        gzipSource63.source = gzipSource73;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource84 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource73);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource85 = null;
        gzipSource73.inflaterSource = inflaterSource85;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer87 = gzipSource73.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer88 = gzipSource73.buffer;
        gzipSource10.source = okBuffer88;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource44);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source57);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater62);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource67);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer88);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        gzipSource8.section = (byte) 0;
        gzipSource8.section = (-1);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        gzipSource15.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        com.squareup.okhttp.internal.bytes.Deadline deadline23 = null;
        gzipSource21.require((-1), deadline23);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        gzipSource25.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource25);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = null;
        gzipSource25.inflaterSource = inflaterSource32;
        gzipSource21.source = inflaterSource32;
        java.util.zip.CRC32 cRC32_35 = gzipSource21.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer36 = gzipSource21.buffer;
        int int37 = gzipSource21.section;
        java.util.zip.CRC32 cRC32_38 = gzipSource21.crc;
        gzipSource8.crc = cRC32_38;
        java.util.zip.CRC32 cRC32_40 = gzipSource8.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_40);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        gzipSource0.source = gzipSource6;
        java.util.zip.CRC32 cRC32_10 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource11.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource11.inflaterSource;
        java.util.zip.CRC32 cRC32_15 = gzipSource11.crc;
        java.util.zip.Inflater inflater16 = gzipSource11.inflater;
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource11.crc = cRC32_17;
        java.util.zip.Inflater inflater19 = gzipSource11.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource20.inflaterSource;
        gzipSource20.section = (byte) 100;
        int int27 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_29 = null;
        gzipSource28.crc = cRC32_29;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource28.inflaterSource;
        java.util.zip.CRC32 cRC32_32 = gzipSource28.crc;
        java.util.zip.CRC32 cRC32_33 = null;
        gzipSource28.crc = cRC32_33;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource35.inflaterSource;
        java.util.zip.CRC32 cRC32_39 = gzipSource35.crc;
        java.util.zip.Inflater inflater40 = gzipSource35.inflater;
        gzipSource35.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source45 = gzipSource35.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource46.inflaterSource;
        gzipSource35.source = gzipSource46;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_56 = null;
        gzipSource55.crc = cRC32_56;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        int int61 = gzipSource58.section;
        gzipSource58.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource58);
        java.util.zip.Inflater inflater65 = gzipSource64.inflater;
        gzipSource55.inflater = inflater65;
        gzipSource54.inflater = inflater65;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer68 = gzipSource54.buffer;
        gzipSource35.updateCrc(okBuffer68, (long) '#', (long) (-1));
        gzipSource28.updateCrc(okBuffer68, (long) 0, 0L);
        gzipSource20.buffer = okBuffer68;
        gzipSource11.buffer = okBuffer68;
        gzipSource0.source = okBuffer68;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source45);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource52);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer68);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer9 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        java.util.zip.CRC32 cRC32_14 = gzipSource10.crc;
        java.util.zip.Inflater inflater15 = gzipSource10.inflater;
        gzipSource10.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source20 = gzipSource10.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource21.inflaterSource;
        gzipSource10.source = gzipSource21;
        com.squareup.okhttp.internal.bytes.Source source29 = gzipSource10.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource30.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_39 = null;
        gzipSource38.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource41);
        java.util.zip.Inflater inflater48 = gzipSource47.inflater;
        gzipSource38.inflater = inflater48;
        gzipSource30.inflater = inflater48;
        gzipSource10.inflater = inflater48;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater53 = null;
        gzipSource52.inflater = inflater53;
        int int55 = gzipSource52.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = gzipSource52.inflaterSource;
        gzipSource52.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline60 = null;
        gzipSource52.require((int) (short) -1, deadline60);
        com.squareup.okhttp.internal.bytes.Source source62 = gzipSource52.source;
        int int63 = gzipSource52.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer64 = null;
        gzipSource52.buffer = okBuffer64;
        gzipSource10.source = okBuffer64;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer67 = gzipSource10.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline69 = null;
        long long70 = gzipSource0.read(okBuffer67, 0L, deadline69);
        com.squareup.okhttp.internal.bytes.Deadline deadline72 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (byte) 3, deadline72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater48);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer10 = null;
        gzipSource0.buffer = okBuffer10;
        java.util.zip.CRC32 cRC32_12 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline13 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        int int9 = gzipSource6.section;
        gzipSource6.section = (byte) -1;
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource6.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource14.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        gzipSource17.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource17);
        java.util.zip.Inflater inflater24 = gzipSource23.inflater;
        gzipSource14.inflater = inflater24;
        gzipSource6.inflater = inflater24;
        gzipSource0.source = gzipSource6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource6.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer10 = null;
        gzipSource0.buffer = okBuffer10;
        com.squareup.okhttp.internal.bytes.Source source12 = gzipSource0.source;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = source12.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source12);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Source source4 = gzipSource3.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        int int9 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource5.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = null;
        gzipSource5.inflaterSource = inflaterSource11;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource13.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer18 = null;
        gzipSource13.buffer = okBuffer18;
        gzipSource13.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = null;
        gzipSource13.inflaterSource = inflaterSource22;
        com.squareup.okhttp.internal.bytes.Source source24 = gzipSource13.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer25 = null;
        gzipSource13.buffer = okBuffer25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_29 = null;
        gzipSource28.crc = cRC32_29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        gzipSource31.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource31);
        java.util.zip.Inflater inflater38 = gzipSource37.inflater;
        gzipSource28.inflater = inflater38;
        gzipSource27.inflater = inflater38;
        gzipSource13.inflater = inflater38;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_44 = null;
        gzipSource43.crc = cRC32_44;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        java.util.zip.Inflater inflater53 = gzipSource52.inflater;
        gzipSource43.inflater = inflater53;
        gzipSource42.inflater = inflater53;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = gzipSource42.inflaterSource;
        java.util.zip.Inflater inflater57 = gzipSource42.inflater;
        gzipSource13.inflater = inflater57;
        gzipSource5.inflater = inflater57;
        gzipSource3.inflater = inflater57;
        com.squareup.okhttp.internal.bytes.Deadline deadline62 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource3.require(2, deadline62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater57);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource8.consumeTrailer(deadline12);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source11);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer7 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        java.util.zip.CRC32 cRC32_12 = gzipSource8.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource13.inflaterSource;
        gzipSource13.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        java.util.zip.Inflater inflater27 = gzipSource26.inflater;
        gzipSource13.inflater = inflater27;
        gzipSource8.inflater = inflater27;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source31 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        java.util.zip.CRC32 cRC32_36 = gzipSource35.crc;
        gzipSource8.crc = cRC32_36;
        gzipSource0.crc = cRC32_36;
        java.lang.Class<?> wildcardClass39 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.Inflater inflater14 = gzipSource13.inflater;
        gzipSource0.inflater = inflater14;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass18 = inflaterSource17.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_11 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.CRC32 cRC32_16 = gzipSource15.crc;
        gzipSource0.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = null;
        gzipSource0.inflaterSource = inflaterSource18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = null;
        gzipSource20.inflaterSource = inflaterSource24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource20.inflaterSource;
        int int27 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.Source source28 = gzipSource20.source;
        com.squareup.okhttp.internal.bytes.Source source29 = gzipSource20.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        gzipSource20.source = gzipSource30;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource35.inflaterSource;
        gzipSource35.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline43 = null;
        gzipSource35.require((int) (short) -1, deadline43);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater46 = null;
        gzipSource45.inflater = inflater46;
        int int48 = gzipSource45.section;
        gzipSource45.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource45);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = null;
        gzipSource45.inflaterSource = inflaterSource52;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource54 = gzipSource45.inflaterSource;
        gzipSource35.source = gzipSource45;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource45);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource57 = null;
        gzipSource45.inflaterSource = inflaterSource57;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer59 = gzipSource45.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = gzipSource45.buffer;
        gzipSource20.buffer = okBuffer60;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer60, 0L, (long) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer60);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        java.util.zip.CRC32 cRC32_12 = gzipSource8.crc;
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource8.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        java.util.zip.Inflater inflater20 = gzipSource15.inflater;
        gzipSource15.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source25 = gzipSource15.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater27 = null;
        gzipSource26.inflater = inflater27;
        int int29 = gzipSource26.section;
        gzipSource26.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource26.inflaterSource;
        gzipSource15.source = gzipSource26;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource35.inflater = inflater45;
        gzipSource34.inflater = inflater45;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer48 = gzipSource34.buffer;
        gzipSource15.updateCrc(okBuffer48, (long) '#', (long) (-1));
        gzipSource8.updateCrc(okBuffer48, (long) 0, 0L);
        gzipSource0.buffer = okBuffer48;
        com.squareup.okhttp.internal.bytes.Deadline deadline56 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer48);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource6.source;
        java.util.zip.Inflater inflater11 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource12.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource12.inflaterSource;
        java.util.zip.Inflater inflater16 = gzipSource12.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        gzipSource17.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource17);
        com.squareup.okhttp.internal.bytes.Source source24 = gzipSource17.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource17.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = gzipSource17.buffer;
        gzipSource12.buffer = okBuffer26;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.updateCrc(okBuffer26, (long) 3, (long) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer26);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
{ // flaky:         try {
// flaky:             gzipSource11.consumeTrailer(deadline12);
// flaky:             org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
// flaky:         } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource0.source;
        int int23 = gzipSource0.section;
        java.util.zip.CRC32 cRC32_24 = gzipSource0.crc;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", (int) (byte) 10, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000001 != expected 0x00000a");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_24);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource21.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = null;
        gzipSource21.buffer = okBuffer26;
        int int28 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.Source source29 = null;
        gzipSource21.source = source29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.CRC32 cRC32_32 = gzipSource21.crc;
        gzipSource10.crc = cRC32_32;
        gzipSource10.section = (byte) 3;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_32);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        gzipSource8.section = (byte) 0;
        int int11 = gzipSource8.section;
        int int12 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline14 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long15 = gzipSource8.seek((byte) -1, deadline14);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        int int9 = gzipSource6.section;
        gzipSource6.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = null;
        gzipSource6.inflaterSource = inflaterSource13;
        java.util.zip.CRC32 cRC32_15 = gzipSource6.crc;
        gzipSource0.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = null;
        gzipSource0.buffer = okBuffer12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        java.util.zip.Inflater inflater25 = gzipSource24.inflater;
        gzipSource15.inflater = inflater25;
        gzipSource14.inflater = inflater25;
        gzipSource0.inflater = inflater25;
        gzipSource0.section = (short) -1;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater25);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource33.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource47.inflaterSource;
        gzipSource47.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        gzipSource54.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource54);
        java.util.zip.Inflater inflater61 = gzipSource60.inflater;
        gzipSource47.inflater = inflater61;
        gzipSource42.inflater = inflater61;
        gzipSource33.inflater = inflater61;
        java.util.zip.CRC32 cRC32_65 = gzipSource33.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_68 = null;
        gzipSource67.crc = cRC32_68;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater71 = null;
        gzipSource70.inflater = inflater71;
        int int73 = gzipSource70.section;
        gzipSource70.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource70);
        java.util.zip.Inflater inflater77 = gzipSource76.inflater;
        gzipSource67.inflater = inflater77;
        gzipSource66.inflater = inflater77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource66.buffer;
        gzipSource33.buffer = okBuffer80;
        gzipSource0.updateCrc(okBuffer80, (long) '#', (long) (short) 0);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer85 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource86 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer85);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer87 = gzipSource86.buffer;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_65);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer87);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        gzipSource0.section = (short) 1;
        java.util.zip.Inflater inflater3 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource4.crc = cRC32_5;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource4.inflaterSource;
        java.util.zip.CRC32 cRC32_8 = gzipSource4.crc;
        java.util.zip.Inflater inflater9 = gzipSource4.inflater;
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource4.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        gzipSource12.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        gzipSource19.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        java.util.zip.Inflater inflater26 = gzipSource25.inflater;
        gzipSource12.inflater = inflater26;
        gzipSource4.inflater = inflater26;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_30 = null;
        gzipSource29.crc = cRC32_30;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource29.inflaterSource;
        java.util.zip.CRC32 cRC32_33 = gzipSource29.crc;
        java.util.zip.Inflater inflater34 = gzipSource29.inflater;
        java.util.zip.CRC32 cRC32_35 = null;
        gzipSource29.crc = cRC32_35;
        java.util.zip.Inflater inflater37 = gzipSource29.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = gzipSource38.inflaterSource;
        gzipSource38.section = (byte) 100;
        int int45 = gzipSource38.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_47 = null;
        gzipSource46.crc = cRC32_47;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = gzipSource46.inflaterSource;
        java.util.zip.CRC32 cRC32_50 = gzipSource46.crc;
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource46.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_54 = null;
        gzipSource53.crc = cRC32_54;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = gzipSource53.inflaterSource;
        java.util.zip.CRC32 cRC32_57 = gzipSource53.crc;
        java.util.zip.Inflater inflater58 = gzipSource53.inflater;
        gzipSource53.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source63 = gzipSource53.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater65 = null;
        gzipSource64.inflater = inflater65;
        int int67 = gzipSource64.section;
        gzipSource64.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource70 = gzipSource64.inflaterSource;
        gzipSource53.source = gzipSource64;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_74 = null;
        gzipSource73.crc = cRC32_74;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater77 = null;
        gzipSource76.inflater = inflater77;
        int int79 = gzipSource76.section;
        gzipSource76.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource82 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource76);
        java.util.zip.Inflater inflater83 = gzipSource82.inflater;
        gzipSource73.inflater = inflater83;
        gzipSource72.inflater = inflater83;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer86 = gzipSource72.buffer;
        gzipSource53.updateCrc(okBuffer86, (long) '#', (long) (-1));
        gzipSource46.updateCrc(okBuffer86, (long) 0, 0L);
        gzipSource38.buffer = okBuffer86;
        gzipSource29.buffer = okBuffer86;
        gzipSource4.buffer = okBuffer86;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer86, (long) (short) 100, (long) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source63);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource70);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int79 + "' != '" + 100 + "'", int79 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer86);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        gzipSource0.section = (short) 0;
        com.squareup.okhttp.internal.bytes.Deadline deadline6 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource33.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource47.inflaterSource;
        gzipSource47.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        gzipSource54.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource54);
        java.util.zip.Inflater inflater61 = gzipSource60.inflater;
        gzipSource47.inflater = inflater61;
        gzipSource42.inflater = inflater61;
        gzipSource33.inflater = inflater61;
        java.util.zip.CRC32 cRC32_65 = gzipSource33.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_68 = null;
        gzipSource67.crc = cRC32_68;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater71 = null;
        gzipSource70.inflater = inflater71;
        int int73 = gzipSource70.section;
        gzipSource70.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource70);
        java.util.zip.Inflater inflater77 = gzipSource76.inflater;
        gzipSource67.inflater = inflater77;
        gzipSource66.inflater = inflater77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource66.buffer;
        gzipSource33.buffer = okBuffer80;
        gzipSource0.updateCrc(okBuffer80, (long) '#', (long) (short) 0);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer85 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline86 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_65);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer85);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer7 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource14.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource14.inflaterSource;
        java.util.zip.CRC32 cRC32_18 = gzipSource14.crc;
        java.util.zip.Inflater inflater19 = gzipSource14.inflater;
        gzipSource14.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source24 = gzipSource14.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        gzipSource25.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource25.inflaterSource;
        gzipSource14.source = gzipSource25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_35 = null;
        gzipSource34.crc = cRC32_35;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater38 = null;
        gzipSource37.inflater = inflater38;
        int int40 = gzipSource37.section;
        gzipSource37.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource37);
        java.util.zip.Inflater inflater44 = gzipSource43.inflater;
        gzipSource34.inflater = inflater44;
        gzipSource33.inflater = inflater44;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer47 = gzipSource33.buffer;
        gzipSource14.updateCrc(okBuffer47, (long) '#', (long) (-1));
        com.squareup.okhttp.internal.bytes.Deadline deadline52 = null;
        long long53 = gzipSource8.read(okBuffer47, (long) (short) 0, deadline52);
        com.squareup.okhttp.internal.bytes.Deadline deadline55 = null;
        long long56 = gzipSource0.read(okBuffer47, 100L, deadline55);
        com.squareup.okhttp.internal.bytes.Deadline deadline58 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long59 = gzipSource0.seek((byte) 10, deadline58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        gzipSource29.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource29);
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource29.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_39 = null;
        gzipSource38.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource38.inflaterSource;
        java.util.zip.CRC32 cRC32_42 = gzipSource38.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater44 = null;
        gzipSource43.inflater = inflater44;
        int int46 = gzipSource43.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource43.inflaterSource;
        gzipSource43.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater51 = null;
        gzipSource50.inflater = inflater51;
        int int53 = gzipSource50.section;
        gzipSource50.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource50);
        java.util.zip.Inflater inflater57 = gzipSource56.inflater;
        gzipSource43.inflater = inflater57;
        gzipSource38.inflater = inflater57;
        gzipSource29.inflater = inflater57;
        gzipSource19.inflater = inflater57;
        com.squareup.okhttp.internal.bytes.Deadline deadline62 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource19.consumeHeader(deadline62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater57);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        java.util.zip.CRC32 cRC32_10 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.require(3, deadline12);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_10);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        int int9 = gzipSource6.section;
        gzipSource6.section = (byte) -1;
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource6.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource14.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        gzipSource17.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource17);
        java.util.zip.Inflater inflater24 = gzipSource23.inflater;
        gzipSource14.inflater = inflater24;
        gzipSource6.inflater = inflater24;
        gzipSource0.source = gzipSource6;
        int int28 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        java.util.zip.Inflater inflater14 = gzipSource9.inflater;
        gzipSource9.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source19 = gzipSource9.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource20.inflaterSource;
        gzipSource9.source = gzipSource20;
        gzipSource0.source = gzipSource20;
        java.util.zip.Inflater inflater29 = gzipSource0.inflater;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = null;
        gzipSource0.buffer = okBuffer12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        java.util.zip.Inflater inflater25 = gzipSource24.inflater;
        gzipSource15.inflater = inflater25;
        gzipSource14.inflater = inflater25;
        gzipSource0.inflater = inflater25;
        com.squareup.okhttp.internal.bytes.Deadline deadline29 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater25);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        int int19 = gzipSource0.section;
        int int20 = gzipSource0.section;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", (int) (short) 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000020 != expected 0x000064");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        int int22 = gzipSource6.section;
        java.util.zip.CRC32 cRC32_23 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.Source source24 = gzipSource6.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline26 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.require(10, deadline26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source24);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = null;
        gzipSource0.inflaterSource = inflaterSource10;
        int int12 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource11.inflaterSource;
        gzipSource0.source = gzipSource11;
        gzipSource11.section = (short) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        com.squareup.okhttp.internal.bytes.Source source28 = gzipSource21.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource29 = gzipSource21.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer30 = gzipSource21.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource31.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource31.inflaterSource;
        java.util.zip.CRC32 cRC32_35 = gzipSource31.crc;
        java.util.zip.Inflater inflater36 = gzipSource31.inflater;
        gzipSource31.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source41 = gzipSource31.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource48 = gzipSource42.inflaterSource;
        gzipSource31.source = gzipSource42;
        com.squareup.okhttp.internal.bytes.Source source50 = gzipSource31.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater52 = null;
        gzipSource51.inflater = inflater52;
        int int54 = gzipSource51.section;
        gzipSource51.section = (byte) -1;
        java.util.zip.CRC32 cRC32_57 = null;
        gzipSource51.crc = cRC32_57;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_60 = null;
        gzipSource59.crc = cRC32_60;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater63 = null;
        gzipSource62.inflater = inflater63;
        int int65 = gzipSource62.section;
        gzipSource62.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource62);
        java.util.zip.Inflater inflater69 = gzipSource68.inflater;
        gzipSource59.inflater = inflater69;
        gzipSource51.inflater = inflater69;
        gzipSource31.inflater = inflater69;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater74 = null;
        gzipSource73.inflater = inflater74;
        int int76 = gzipSource73.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource77 = gzipSource73.inflaterSource;
        gzipSource73.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline81 = null;
        gzipSource73.require((int) (short) -1, deadline81);
        com.squareup.okhttp.internal.bytes.Source source83 = gzipSource73.source;
        int int84 = gzipSource73.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer85 = null;
        gzipSource73.buffer = okBuffer85;
        gzipSource31.source = okBuffer85;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer88 = gzipSource31.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline90 = null;
        long long91 = gzipSource21.read(okBuffer88, 0L, deadline90);
        com.squareup.okhttp.internal.bytes.Deadline deadline93 = null;
        long long94 = 0L; // flaky: gzipSource11.read(okBuffer88, (long) 3, deadline93);
        gzipSource11.section = ' ';
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater69);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 100 + "'", int84 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 0L + "'", long91 == 0L);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + long94 + "' != '" + (-1L) + "'", long94 == (-1L));
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_4 = null;
        gzipSource3.crc = cRC32_4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource3.inflaterSource;
        java.util.zip.CRC32 cRC32_7 = gzipSource3.crc;
        java.util.zip.Inflater inflater8 = gzipSource3.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource10.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource18.inflater = inflater28;
        gzipSource10.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_33 = null;
        gzipSource32.crc = cRC32_33;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource32.inflaterSource;
        java.util.zip.CRC32 cRC32_36 = gzipSource32.crc;
        java.util.zip.CRC32 cRC32_37 = null;
        gzipSource32.crc = cRC32_37;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource39.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = gzipSource39.inflaterSource;
        java.util.zip.CRC32 cRC32_43 = gzipSource39.crc;
        java.util.zip.Inflater inflater44 = gzipSource39.inflater;
        gzipSource39.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source49 = gzipSource39.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater51 = null;
        gzipSource50.inflater = inflater51;
        int int53 = gzipSource50.section;
        gzipSource50.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = gzipSource50.inflaterSource;
        gzipSource39.source = gzipSource50;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_60 = null;
        gzipSource59.crc = cRC32_60;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater63 = null;
        gzipSource62.inflater = inflater63;
        int int65 = gzipSource62.section;
        gzipSource62.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource62);
        java.util.zip.Inflater inflater69 = gzipSource68.inflater;
        gzipSource59.inflater = inflater69;
        gzipSource58.inflater = inflater69;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer72 = gzipSource58.buffer;
        gzipSource39.updateCrc(okBuffer72, (long) '#', (long) (-1));
        gzipSource32.updateCrc(okBuffer72, (long) 0, 0L);
        gzipSource9.buffer = okBuffer72;
        gzipSource3.buffer = okBuffer72;
        gzipSource0.source = gzipSource3;
        gzipSource0.section = 'a';
        com.squareup.okhttp.internal.bytes.Deadline deadline84 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source49);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource56);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer72);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        java.util.zip.Inflater inflater10 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource11.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        gzipSource13.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer19 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline21 = null;
        long long22 = gzipSource13.read(okBuffer19, (long) 100, deadline21);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater29 = null;
        gzipSource28.inflater = inflater29;
        int int31 = gzipSource28.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource28.inflaterSource;
        gzipSource28.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        gzipSource35.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource35);
        java.util.zip.Inflater inflater42 = gzipSource41.inflater;
        gzipSource28.inflater = inflater42;
        gzipSource23.inflater = inflater42;
        gzipSource13.inflater = inflater42;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline53 = null;
        gzipSource46.require((int) (byte) -1, deadline53);
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer57 = gzipSource46.buffer;
        gzipSource13.buffer = okBuffer57;
        gzipSource11.source = gzipSource13;
        com.squareup.okhttp.internal.bytes.Deadline deadline60 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource11.close(deadline60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer57);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource6.source;
        java.util.zip.Inflater inflater11 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        gzipSource12.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline20 = null;
        gzipSource12.require((int) (short) -1, deadline20);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource29 = null;
        gzipSource22.inflaterSource = inflaterSource29;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource22.inflaterSource;
        gzipSource12.source = gzipSource22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource33.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer38 = null;
        gzipSource33.buffer = okBuffer38;
        int int40 = gzipSource33.section;
        com.squareup.okhttp.internal.bytes.Source source41 = null;
        gzipSource33.source = source41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.CRC32 cRC32_44 = gzipSource33.crc;
        gzipSource22.crc = cRC32_44;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer46 = gzipSource22.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.updateCrc(okBuffer46, (long) (short) 0, (long) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer46);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource3.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource3.buffer = okBuffer8;
        gzipSource3.section = (byte) -1;
        java.util.zip.Inflater inflater12 = gzipSource3.inflater;
        java.util.zip.CRC32 cRC32_13 = gzipSource3.crc;
        gzipSource0.crc = cRC32_13;
        java.util.zip.CRC32 cRC32_15 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Source source16 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer17 = gzipSource0.buffer;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline20 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (short) 1, deadline20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer13 = null;
        gzipSource8.buffer = okBuffer13;
        int int15 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.Source source16 = null;
        gzipSource8.source = source16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        gzipSource0.source = gzipSource8;
        com.squareup.okhttp.internal.bytes.Deadline deadline21 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource8.consumeTrailer(deadline21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource11.inflaterSource;
        gzipSource0.source = gzipSource11;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", (int) 'a', (-1));
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0xffffffff != expected 0x000061");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer9 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (byte) 100, deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer9);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.Inflater inflater15 = gzipSource14.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        gzipSource0.source = gzipSource16;
        com.squareup.okhttp.internal.bytes.Deadline deadline19 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater15);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource29);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        int int35 = gzipSource32.section;
        gzipSource32.section = (byte) -1;
        java.util.zip.CRC32 cRC32_38 = null;
        gzipSource32.crc = cRC32_38;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_41 = null;
        gzipSource40.crc = cRC32_41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater44 = null;
        gzipSource43.inflater = inflater44;
        int int46 = gzipSource43.section;
        gzipSource43.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource43);
        java.util.zip.Inflater inflater50 = gzipSource49.inflater;
        gzipSource40.inflater = inflater50;
        gzipSource32.inflater = inflater50;
        gzipSource31.inflater = inflater50;
        gzipSource30.inflater = inflater50;
        int int55 = gzipSource30.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater57 = null;
        gzipSource56.inflater = inflater57;
        int int59 = gzipSource56.section;
        gzipSource56.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource56);
        java.util.zip.Inflater inflater63 = gzipSource62.inflater;
        gzipSource62.section = (byte) -1;
        java.util.zip.Inflater inflater66 = gzipSource62.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource67 = gzipSource62.inflaterSource;
        gzipSource30.inflaterSource = inflaterSource67;
        gzipSource6.inflaterSource = inflaterSource67;
        gzipSource6.section = (byte) 2;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource67);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource33.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource47.inflaterSource;
        gzipSource47.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        gzipSource54.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource54);
        java.util.zip.Inflater inflater61 = gzipSource60.inflater;
        gzipSource47.inflater = inflater61;
        gzipSource42.inflater = inflater61;
        gzipSource33.inflater = inflater61;
        java.util.zip.CRC32 cRC32_65 = gzipSource33.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_68 = null;
        gzipSource67.crc = cRC32_68;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater71 = null;
        gzipSource70.inflater = inflater71;
        int int73 = gzipSource70.section;
        gzipSource70.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource70);
        java.util.zip.Inflater inflater77 = gzipSource76.inflater;
        gzipSource67.inflater = inflater77;
        gzipSource66.inflater = inflater77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource66.buffer;
        gzipSource33.buffer = okBuffer80;
        gzipSource0.updateCrc(okBuffer80, (long) '#', (long) (short) 0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource85 = gzipSource0.inflaterSource;
        int int86 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline87 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_65);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource0.inflaterSource;
        int int19 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = null;
        gzipSource21.inflaterSource = inflaterSource25;
        com.squareup.okhttp.internal.bytes.Source source27 = gzipSource21.source;
        gzipSource20.source = source27;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source27);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        int int9 = gzipSource6.section;
        gzipSource6.section = (byte) -1;
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource6.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource14.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        gzipSource17.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource17);
        java.util.zip.Inflater inflater24 = gzipSource23.inflater;
        gzipSource14.inflater = inflater24;
        gzipSource6.inflater = inflater24;
        gzipSource0.source = gzipSource6;
        gzipSource6.checkEqual("", (int) (byte) 3, (int) (byte) 3);
        com.squareup.okhttp.internal.bytes.Deadline deadline33 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long34 = gzipSource6.seek((byte) 3, deadline33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater24);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        java.util.zip.CRC32 cRC32_9 = gzipSource0.crc;
        gzipSource0.section = 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        gzipSource12.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline20 = null;
        gzipSource12.require((int) (short) -1, deadline20);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource29 = null;
        gzipSource22.inflaterSource = inflaterSource29;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource22.inflaterSource;
        gzipSource12.source = gzipSource22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_34 = null;
        gzipSource33.crc = cRC32_34;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = gzipSource33.inflaterSource;
        int int37 = gzipSource33.section;
        com.squareup.okhttp.internal.bytes.Source source38 = gzipSource33.source;
        gzipSource33.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer41 = gzipSource33.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer42 = gzipSource33.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer43 = gzipSource33.buffer;
        gzipSource22.buffer = okBuffer43;
        com.squareup.okhttp.internal.bytes.Deadline deadline46 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long47 = gzipSource0.read(okBuffer43, (long) 3, deadline46);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer43);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        int int10 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.Inflater inflater14 = gzipSource13.inflater;
        gzipSource0.inflater = inflater14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource16.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource16.inflaterSource;
        java.util.zip.CRC32 cRC32_20 = gzipSource16.crc;
        java.util.zip.CRC32 cRC32_21 = null;
        gzipSource16.crc = cRC32_21;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        java.util.zip.Inflater inflater28 = gzipSource23.inflater;
        gzipSource23.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source33 = gzipSource23.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource40 = gzipSource34.inflaterSource;
        gzipSource23.source = gzipSource34;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_44 = null;
        gzipSource43.crc = cRC32_44;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        java.util.zip.Inflater inflater53 = gzipSource52.inflater;
        gzipSource43.inflater = inflater53;
        gzipSource42.inflater = inflater53;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer56 = gzipSource42.buffer;
        gzipSource23.updateCrc(okBuffer56, (long) '#', (long) (-1));
        gzipSource16.updateCrc(okBuffer56, (long) 0, 0L);
        gzipSource0.updateCrc(okBuffer56, (long) (byte) 3, 0L);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", 0, 2);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000002 != expected 0x000000");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer56);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Source source4 = gzipSource3.source;
        java.util.zip.Inflater inflater5 = gzipSource3.inflater;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater5);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        gzipSource6.section = (byte) -1;
        java.util.zip.Inflater inflater10 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        gzipSource17.section = (byte) -1;
        java.util.zip.Inflater inflater21 = gzipSource17.inflater;
        gzipSource6.inflater = inflater21;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        java.util.zip.CRC32 cRC32_24 = gzipSource6.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_24);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline4 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer7, 10L, (long) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = null;
        gzipSource10.inflaterSource = inflaterSource22;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = gzipSource10.buffer;
        gzipSource10.checkEqual("hi!", (int) (byte) 0, 0);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer24);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.Inflater inflater15 = gzipSource14.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource16.inflaterSource;
        gzipSource0.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.Deadline deadline19 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource17);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.Deadline deadline20 = null;
        gzipSource18.require((int) (short) 0, deadline20);
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource18.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource18.inflaterSource;
        gzipSource0.inflaterSource = inflaterSource23;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource23);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer19 = gzipSource0.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", (int) (short) 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x00000a != expected 0x000064");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer19);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.Source source26 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource27.inflaterSource;
        java.util.zip.Inflater inflater31 = gzipSource27.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource27.buffer;
        gzipSource7.buffer = okBuffer32;
        gzipSource0.source = okBuffer32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource35.inflater = inflater45;
        gzipSource0.inflater = inflater45;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", (int) '4', (int) (byte) 3);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000003 != expected 0x000034");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater15 = gzipSource0.inflater;
        java.util.zip.Inflater inflater16 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline17 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater16);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource6.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource6.inflaterSource;
        java.util.zip.CRC32 cRC32_10 = gzipSource6.crc;
        java.util.zip.Inflater inflater11 = gzipSource6.inflater;
        gzipSource6.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source16 = gzipSource6.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        gzipSource17.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource17.inflaterSource;
        gzipSource6.source = gzipSource17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_27 = null;
        gzipSource26.crc = cRC32_27;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        gzipSource29.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource29);
        java.util.zip.Inflater inflater36 = gzipSource35.inflater;
        gzipSource26.inflater = inflater36;
        gzipSource25.inflater = inflater36;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer39 = gzipSource25.buffer;
        gzipSource6.updateCrc(okBuffer39, (long) '#', (long) (-1));
        com.squareup.okhttp.internal.bytes.Deadline deadline44 = null;
        long long45 = gzipSource0.read(okBuffer39, (long) (short) 0, deadline44);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", (int) (byte) 100, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000061 != expected 0x000064");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource11.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource16.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource16.inflaterSource;
        java.util.zip.CRC32 cRC32_20 = gzipSource16.crc;
        java.util.zip.Inflater inflater21 = gzipSource16.inflater;
        gzipSource16.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source26 = gzipSource16.source;
        gzipSource11.source = source26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource11.inflaterSource;
        int int29 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource30.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer35 = null;
        gzipSource30.buffer = okBuffer35;
        int int37 = gzipSource30.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource30.inflaterSource;
        gzipSource11.source = gzipSource30;
        java.util.zip.Inflater inflater40 = gzipSource30.inflater;
        java.util.zip.CRC32 cRC32_41 = gzipSource30.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        java.util.zip.Inflater inflater47 = gzipSource42.inflater;
        gzipSource42.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source52 = gzipSource42.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource59 = gzipSource53.inflaterSource;
        gzipSource42.source = gzipSource53;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_63 = null;
        gzipSource62.crc = cRC32_63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater66 = null;
        gzipSource65.inflater = inflater66;
        int int68 = gzipSource65.section;
        gzipSource65.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource65);
        java.util.zip.Inflater inflater72 = gzipSource71.inflater;
        gzipSource62.inflater = inflater72;
        gzipSource61.inflater = inflater72;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer75 = gzipSource61.buffer;
        gzipSource42.updateCrc(okBuffer75, (long) '#', (long) (-1));
        gzipSource30.updateCrc(okBuffer75, (long) '4', (long) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer75, (long) 1, (long) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source52);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource59);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer75);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        int int11 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        int int13 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.Source source14 = gzipSource12.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source14);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource18.inflaterSource;
        int int22 = gzipSource18.section;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource18.source;
        gzipSource18.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = gzipSource18.buffer;
        gzipSource0.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.Deadline deadline29 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) '4', deadline29);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer26);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_11 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = gzipSource12.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = null;
        gzipSource12.inflaterSource = inflaterSource14;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer16 = null;
        gzipSource12.buffer = okBuffer16;
        java.util.zip.Inflater inflater18 = gzipSource12.inflater;
        gzipSource12.checkEqual("hi!", (-1), (int) (byte) -1);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_25 = null;
        gzipSource24.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource24.inflaterSource;
        java.util.zip.CRC32 cRC32_28 = gzipSource24.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource29.inflaterSource;
        gzipSource29.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater37 = null;
        gzipSource36.inflater = inflater37;
        int int39 = gzipSource36.section;
        gzipSource36.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource36);
        java.util.zip.Inflater inflater43 = gzipSource42.inflater;
        gzipSource29.inflater = inflater43;
        gzipSource24.inflater = inflater43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource46 = gzipSource24.inflaterSource;
        java.util.zip.Inflater inflater47 = gzipSource24.inflater;
        gzipSource12.inflater = inflater47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater50 = null;
        gzipSource49.inflater = inflater50;
        int int52 = gzipSource49.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource53 = gzipSource49.inflaterSource;
        gzipSource49.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline57 = null;
        gzipSource49.require((int) (short) -1, deadline57);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater60 = null;
        gzipSource59.inflater = inflater60;
        int int62 = gzipSource59.section;
        gzipSource59.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource59);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource66 = null;
        gzipSource59.inflaterSource = inflaterSource66;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource68 = gzipSource59.inflaterSource;
        gzipSource49.source = gzipSource59;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource59);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource71 = null;
        gzipSource59.inflaterSource = inflaterSource71;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer73 = gzipSource59.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer74 = gzipSource59.buffer;
        gzipSource12.buffer = okBuffer74;
        com.squareup.okhttp.internal.bytes.Deadline deadline77 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long78 = gzipSource0.read(okBuffer74, (long) (byte) 100, deadline77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource53);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer74);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource10.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        java.util.zip.Inflater inflater20 = gzipSource15.inflater;
        gzipSource15.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source25 = gzipSource15.source;
        gzipSource10.source = source25;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource10.inflaterSource;
        int int28 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource29.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer34 = null;
        gzipSource29.buffer = okBuffer34;
        int int36 = gzipSource29.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource29.inflaterSource;
        gzipSource10.source = gzipSource29;
        java.util.zip.Inflater inflater39 = gzipSource29.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        gzipSource40.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = null;
        gzipSource40.inflaterSource = inflaterSource47;
        java.util.zip.CRC32 cRC32_49 = gzipSource40.crc;
        gzipSource29.crc = cRC32_49;
        gzipSource6.source = gzipSource29;
        int int52 = gzipSource6.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline54 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long55 = gzipSource6.seek((byte) 10, deadline54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_49);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource9.consumeTrailer(deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        java.util.zip.Inflater inflater10 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource11.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource11.inflaterSource;
        java.util.zip.CRC32 cRC32_15 = gzipSource11.crc;
        java.util.zip.Inflater inflater16 = gzipSource11.inflater;
        gzipSource11.checkEqual("", 100, 100);
        java.util.zip.Inflater inflater21 = gzipSource11.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer22 = gzipSource11.buffer;
        gzipSource0.updateCrc(okBuffer22, (long) 100, (long) (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer22);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        java.util.zip.CRC32 cRC32_22 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        gzipSource23.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource23);
        java.util.zip.CRC32 cRC32_30 = null;
        gzipSource23.crc = cRC32_30;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_33 = null;
        gzipSource32.crc = cRC32_33;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource32.inflaterSource;
        java.util.zip.CRC32 cRC32_36 = gzipSource32.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater38 = null;
        gzipSource37.inflater = inflater38;
        int int40 = gzipSource37.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource37.inflaterSource;
        gzipSource37.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        java.util.zip.Inflater inflater51 = gzipSource50.inflater;
        gzipSource37.inflater = inflater51;
        gzipSource32.inflater = inflater51;
        gzipSource23.inflater = inflater51;
        gzipSource6.source = gzipSource23;
        int int56 = gzipSource6.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer6 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        long long9 = gzipSource0.read(okBuffer6, (long) 100, deadline8);
        int int10 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = null;
        gzipSource11.inflaterSource = inflaterSource18;
        java.util.zip.CRC32 cRC32_20 = gzipSource11.crc;
        gzipSource11.section = 100;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = gzipSource11.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline26 = null;
        long long27 = gzipSource0.read(okBuffer24, (long) (byte) 10, deadline26);
        com.squareup.okhttp.internal.bytes.Deadline deadline28 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource33.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource47.inflaterSource;
        gzipSource47.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        gzipSource54.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource54);
        java.util.zip.Inflater inflater61 = gzipSource60.inflater;
        gzipSource47.inflater = inflater61;
        gzipSource42.inflater = inflater61;
        gzipSource33.inflater = inflater61;
        java.util.zip.CRC32 cRC32_65 = gzipSource33.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_68 = null;
        gzipSource67.crc = cRC32_68;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater71 = null;
        gzipSource70.inflater = inflater71;
        int int73 = gzipSource70.section;
        gzipSource70.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource70);
        java.util.zip.Inflater inflater77 = gzipSource76.inflater;
        gzipSource67.inflater = inflater77;
        gzipSource66.inflater = inflater77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource66.buffer;
        gzipSource33.buffer = okBuffer80;
        gzipSource0.updateCrc(okBuffer80, (long) '#', (long) (short) 0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource85 = gzipSource0.inflaterSource;
        int int86 = gzipSource0.section;
        java.lang.Class<?> wildcardClass87 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_65);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource11.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource19.inflater = inflater29;
        gzipSource11.inflater = inflater29;
        gzipSource10.inflater = inflater29;
        gzipSource0.inflater = inflater29;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline35 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        gzipSource6.section = (byte) -1;
        java.util.zip.Inflater inflater10 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.consumeHeader(deadline11);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater10);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        int int7 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.Inflater inflater14 = gzipSource13.inflater;
        gzipSource0.inflater = inflater14;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource18.inflaterSource;
        gzipSource18.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline26 = null;
        gzipSource18.require((int) (short) -1, deadline26);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater29 = null;
        gzipSource28.inflater = inflater29;
        int int31 = gzipSource28.section;
        gzipSource28.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource28);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = null;
        gzipSource28.inflaterSource = inflaterSource35;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource28.inflaterSource;
        gzipSource18.source = gzipSource28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource28);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource40 = null;
        gzipSource28.inflaterSource = inflaterSource40;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer42 = gzipSource28.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer43 = gzipSource28.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer43, (long) 1, (long) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer43);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = 97;
        java.lang.Class<?> wildcardClass9 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource21.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = null;
        gzipSource21.buffer = okBuffer26;
        int int28 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.Source source29 = null;
        gzipSource21.source = source29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.CRC32 cRC32_32 = gzipSource21.crc;
        gzipSource10.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer34 = gzipSource10.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource35.inflaterSource;
        java.util.zip.CRC32 cRC32_39 = gzipSource35.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = gzipSource40.inflaterSource;
        gzipSource40.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        gzipSource47.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource47);
        java.util.zip.Inflater inflater54 = gzipSource53.inflater;
        gzipSource40.inflater = inflater54;
        gzipSource35.inflater = inflater54;
        com.squareup.okhttp.internal.bytes.Source source57 = gzipSource35.source;
        int int58 = gzipSource35.section;
        java.util.zip.CRC32 cRC32_59 = gzipSource35.crc;
        com.squareup.okhttp.internal.bytes.Source source60 = gzipSource35.source;
        gzipSource10.source = source60;
        java.util.zip.Inflater inflater62 = gzipSource10.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater64 = null;
        gzipSource63.inflater = inflater64;
        int int66 = gzipSource63.section;
        gzipSource63.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource63);
        java.util.zip.Inflater inflater70 = gzipSource69.inflater;
        gzipSource69.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int74 = gzipSource73.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_76 = null;
        gzipSource75.crc = cRC32_76;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource78 = gzipSource75.inflaterSource;
        java.util.zip.CRC32 cRC32_79 = gzipSource75.crc;
        java.util.zip.Inflater inflater80 = gzipSource75.inflater;
        java.util.zip.CRC32 cRC32_81 = null;
        gzipSource75.crc = cRC32_81;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer83 = gzipSource75.buffer;
        gzipSource73.updateCrc(okBuffer83, (long) '4', (long) (-1));
        gzipSource69.buffer = okBuffer83;
        gzipSource10.source = gzipSource69;
        java.lang.Class<?> wildcardClass89 = gzipSource10.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource44);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source57);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater62);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater70);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        gzipSource0.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        gzipSource12.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        gzipSource19.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        java.util.zip.Inflater inflater26 = gzipSource25.inflater;
        gzipSource12.inflater = inflater26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = null;
        gzipSource12.inflaterSource = inflaterSource28;
        gzipSource0.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource31.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource31.inflaterSource;
        java.util.zip.CRC32 cRC32_35 = gzipSource31.crc;
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource31.crc = cRC32_36;
        gzipSource31.section = (-1);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        gzipSource40.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        com.squareup.okhttp.internal.bytes.Deadline deadline48 = null;
        gzipSource46.require((-1), deadline48);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater51 = null;
        gzipSource50.inflater = inflater51;
        int int53 = gzipSource50.section;
        gzipSource50.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource50);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource57 = null;
        gzipSource50.inflaterSource = inflaterSource57;
        gzipSource46.source = inflaterSource57;
        java.util.zip.CRC32 cRC32_60 = gzipSource46.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer61 = gzipSource46.buffer;
        int int62 = gzipSource46.section;
        java.util.zip.CRC32 cRC32_63 = gzipSource46.crc;
        com.squareup.okhttp.internal.bytes.Source source64 = gzipSource46.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater66 = null;
        gzipSource65.inflater = inflater66;
        int int68 = gzipSource65.section;
        gzipSource65.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource65);
        com.squareup.okhttp.internal.bytes.Deadline deadline73 = null;
        gzipSource71.require((-1), deadline73);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater76 = null;
        gzipSource75.inflater = inflater76;
        int int78 = gzipSource75.section;
        gzipSource75.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource81 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource75);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource82 = null;
        gzipSource75.inflaterSource = inflaterSource82;
        gzipSource71.source = inflaterSource82;
        java.util.zip.CRC32 cRC32_85 = gzipSource71.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer86 = gzipSource71.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource87 = gzipSource71.inflaterSource;
        gzipSource46.inflaterSource = inflaterSource87;
        gzipSource31.inflaterSource = inflaterSource87;
        gzipSource12.inflaterSource = inflaterSource87;
        gzipSource12.checkEqual("hi!", 3, (int) (byte) 3);
        java.lang.Class<?> wildcardClass95 = gzipSource12.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer61);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source64);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource5 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer14 = gzipSource7.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        gzipSource15.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_22 = null;
        gzipSource21.crc = cRC32_22;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource21.inflaterSource;
        java.util.zip.CRC32 cRC32_25 = gzipSource21.crc;
        java.util.zip.Inflater inflater26 = gzipSource21.inflater;
        gzipSource21.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source31 = gzipSource21.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        int int35 = gzipSource32.section;
        gzipSource32.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource32.inflaterSource;
        gzipSource21.source = gzipSource32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_42 = null;
        gzipSource41.crc = cRC32_42;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        java.util.zip.Inflater inflater51 = gzipSource50.inflater;
        gzipSource41.inflater = inflater51;
        gzipSource40.inflater = inflater51;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer54 = gzipSource40.buffer;
        gzipSource21.updateCrc(okBuffer54, (long) '#', (long) (-1));
        com.squareup.okhttp.internal.bytes.Deadline deadline59 = null;
        long long60 = gzipSource15.read(okBuffer54, (long) (short) 0, deadline59);
        com.squareup.okhttp.internal.bytes.Deadline deadline62 = null;
        long long63 = gzipSource7.read(okBuffer54, 100L, deadline62);
        gzipSource6.source = okBuffer54;
        java.util.zip.Inflater inflater65 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline67 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.require((int) (short) 100, deadline67);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater65);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.CRC32 cRC32_10 = gzipSource9.crc;
        java.util.zip.CRC32 cRC32_11 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.Deadline deadline20 = null;
        gzipSource18.require((-1), deadline20);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource29 = null;
        gzipSource22.inflaterSource = inflaterSource29;
        gzipSource18.source = inflaterSource29;
        java.util.zip.CRC32 cRC32_32 = gzipSource18.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer33 = gzipSource18.buffer;
        int int34 = gzipSource18.section;
        java.util.zip.CRC32 cRC32_35 = gzipSource18.crc;
        gzipSource9.crc = cRC32_35;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_35);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.Inflater inflater14 = gzipSource13.inflater;
        gzipSource0.inflater = inflater14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        gzipSource16.section = (byte) -1;
        java.util.zip.CRC32 cRC32_22 = null;
        gzipSource16.crc = cRC32_22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_25 = null;
        gzipSource24.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        java.util.zip.Inflater inflater34 = gzipSource33.inflater;
        gzipSource24.inflater = inflater34;
        gzipSource16.inflater = inflater34;
        gzipSource0.inflater = inflater34;
        com.squareup.okhttp.internal.bytes.Source source38 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source39 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline41 = null;
        gzipSource0.require(0, deadline41);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", 10, (-1));
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0xffffffff != expected 0x00000a");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source39);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_11 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.CRC32 cRC32_16 = gzipSource15.crc;
        gzipSource0.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource18.inflaterSource;
        java.util.zip.CRC32 cRC32_22 = gzipSource18.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        gzipSource23.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource23);
        java.util.zip.Inflater inflater30 = gzipSource29.inflater;
        gzipSource29.section = (byte) -1;
        java.util.zip.Inflater inflater33 = gzipSource29.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        java.util.zip.Inflater inflater41 = gzipSource40.inflater;
        gzipSource40.section = (byte) -1;
        java.util.zip.Inflater inflater44 = gzipSource40.inflater;
        gzipSource29.inflater = inflater44;
        gzipSource18.inflater = inflater44;
        gzipSource0.inflater = inflater44;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource48 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource48);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        int int30 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource31.inflaterSource;
        gzipSource31.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource31.inflater = inflater45;
        gzipSource19.inflater = inflater45;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater49 = null;
        gzipSource48.inflater = inflater49;
        int int51 = gzipSource48.section;
        gzipSource48.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource48);
        com.squareup.okhttp.internal.bytes.Deadline deadline56 = null;
        gzipSource54.require((-1), deadline56);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        int int61 = gzipSource58.section;
        gzipSource58.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource58);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource65 = null;
        gzipSource58.inflaterSource = inflaterSource65;
        gzipSource54.source = inflaterSource65;
        java.util.zip.CRC32 cRC32_68 = gzipSource54.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer69 = gzipSource54.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource70 = gzipSource54.inflaterSource;
        gzipSource19.inflaterSource = inflaterSource70;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_73 = null;
        gzipSource72.crc = cRC32_73;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource75 = gzipSource72.inflaterSource;
        java.util.zip.Inflater inflater76 = gzipSource72.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer77 = gzipSource72.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer78 = gzipSource72.buffer;
        gzipSource19.updateCrc(okBuffer78, (long) (byte) -1, 0L);
        com.squareup.okhttp.internal.bytes.Deadline deadline82 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource19.consumeTrailer(deadline82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer78);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        java.util.zip.CRC32 cRC32_21 = gzipSource10.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline22 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource10.consumeTrailer(deadline22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_21);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        int int12 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.Source source13 = gzipSource8.source;
        gzipSource8.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer16 = gzipSource8.buffer;
        gzipSource8.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer19 = gzipSource8.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource20.inflaterSource;
        gzipSource20.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        java.util.zip.Inflater inflater34 = gzipSource33.inflater;
        gzipSource20.inflater = inflater34;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = null;
        gzipSource20.inflaterSource = inflaterSource36;
        gzipSource8.source = gzipSource20;
        gzipSource6.source = gzipSource8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = gzipSource40.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer45 = null;
        gzipSource40.buffer = okBuffer45;
        gzipSource40.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = null;
        gzipSource40.inflaterSource = inflaterSource49;
        com.squareup.okhttp.internal.bytes.Source source51 = gzipSource40.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer52 = null;
        gzipSource40.buffer = okBuffer52;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_56 = null;
        gzipSource55.crc = cRC32_56;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        int int61 = gzipSource58.section;
        gzipSource58.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource58);
        java.util.zip.Inflater inflater65 = gzipSource64.inflater;
        gzipSource55.inflater = inflater65;
        gzipSource54.inflater = inflater65;
        gzipSource40.inflater = inflater65;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_71 = null;
        gzipSource70.crc = cRC32_71;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater74 = null;
        gzipSource73.inflater = inflater74;
        int int76 = gzipSource73.section;
        gzipSource73.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource79 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource73);
        java.util.zip.Inflater inflater80 = gzipSource79.inflater;
        gzipSource70.inflater = inflater80;
        gzipSource69.inflater = inflater80;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource83 = gzipSource69.inflaterSource;
        java.util.zip.Inflater inflater84 = gzipSource69.inflater;
        gzipSource40.inflater = inflater84;
        java.util.zip.Inflater inflater86 = gzipSource40.inflater;
        gzipSource6.inflater = inflater86;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater65);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater86);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_30 = null;
        gzipSource29.crc = cRC32_30;
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource29.crc = cRC32_32;
        gzipSource0.source = gzipSource29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        gzipSource35.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource35);
        java.util.zip.Inflater inflater42 = gzipSource41.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource41);
        gzipSource43.section = (byte) 0;
        gzipSource43.section = (-1);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource48 = gzipSource43.inflaterSource;
        gzipSource0.inflaterSource = inflaterSource48;
        com.squareup.okhttp.internal.bytes.Deadline deadline50 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource48);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        int int30 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource31.inflaterSource;
        gzipSource31.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource31.inflater = inflater45;
        gzipSource19.inflater = inflater45;
        com.squareup.okhttp.internal.bytes.Deadline deadline48 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource19.consumeHeader(deadline48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater2 = null;
        gzipSource1.inflater = inflater2;
        int int4 = gzipSource1.section;
        gzipSource1.section = (byte) -1;
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource1.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource1.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline25 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long26 = gzipSource0.seek((byte) 1, deadline25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource10.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource18.inflater = inflater28;
        gzipSource10.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_33 = null;
        gzipSource32.crc = cRC32_33;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource32.inflaterSource;
        java.util.zip.CRC32 cRC32_36 = gzipSource32.crc;
        java.util.zip.Inflater inflater37 = gzipSource32.inflater;
        java.util.zip.CRC32 cRC32_38 = null;
        gzipSource32.crc = cRC32_38;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = null;
        gzipSource32.buffer = okBuffer40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer49 = gzipSource42.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline51 = null;
        long long52 = gzipSource32.read(okBuffer49, (long) (short) 0, deadline51);
        gzipSource0.updateCrc(okBuffer49, (long) 2, (long) 0);
        java.util.zip.Inflater inflater56 = gzipSource0.inflater;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater56);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.CRC32 cRC32_14 = null;
        gzipSource7.crc = cRC32_14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource16.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource16.inflaterSource;
        java.util.zip.CRC32 cRC32_20 = gzipSource16.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource21.inflaterSource;
        gzipSource21.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater29 = null;
        gzipSource28.inflater = inflater29;
        int int31 = gzipSource28.section;
        gzipSource28.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource28);
        java.util.zip.Inflater inflater35 = gzipSource34.inflater;
        gzipSource21.inflater = inflater35;
        gzipSource16.inflater = inflater35;
        gzipSource7.inflater = inflater35;
        java.util.zip.CRC32 cRC32_39 = gzipSource7.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_42 = null;
        gzipSource41.crc = cRC32_42;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        java.util.zip.Inflater inflater51 = gzipSource50.inflater;
        gzipSource41.inflater = inflater51;
        gzipSource40.inflater = inflater51;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer54 = gzipSource40.buffer;
        gzipSource7.buffer = okBuffer54;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer54);
        gzipSource0.buffer = okBuffer54;
        com.squareup.okhttp.internal.bytes.Source source58 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source58);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        gzipSource0.require((int) (byte) -1, deadline7);
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 0;
        com.squareup.okhttp.internal.bytes.Deadline deadline14 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long15 = gzipSource0.seek((byte) 0, deadline14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        int int30 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource19.buffer;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass33 = okBuffer32.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer32);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer2 = null;
        gzipSource0.buffer = okBuffer2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource4.inflaterSource;
        gzipSource4.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        gzipSource4.inflater = inflater18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_21 = null;
        gzipSource20.crc = cRC32_21;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource20.inflaterSource;
        java.util.zip.CRC32 cRC32_24 = gzipSource20.crc;
        java.util.zip.CRC32 cRC32_25 = null;
        gzipSource20.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource27.inflaterSource;
        java.util.zip.CRC32 cRC32_31 = gzipSource27.crc;
        java.util.zip.Inflater inflater32 = gzipSource27.inflater;
        gzipSource27.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source37 = gzipSource27.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = gzipSource38.inflaterSource;
        gzipSource27.source = gzipSource38;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_48 = null;
        gzipSource47.crc = cRC32_48;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater51 = null;
        gzipSource50.inflater = inflater51;
        int int53 = gzipSource50.section;
        gzipSource50.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource50);
        java.util.zip.Inflater inflater57 = gzipSource56.inflater;
        gzipSource47.inflater = inflater57;
        gzipSource46.inflater = inflater57;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = gzipSource46.buffer;
        gzipSource27.updateCrc(okBuffer60, (long) '#', (long) (-1));
        gzipSource20.updateCrc(okBuffer60, (long) 0, 0L);
        gzipSource4.updateCrc(okBuffer60, (long) (byte) 3, 0L);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer60, (long) 'a', (long) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource44);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer60);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater4 = gzipSource0.inflater;
        int int5 = gzipSource0.section;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        int int9 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer10 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer10);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        gzipSource6.section = (byte) -1;
        java.util.zip.Inflater inflater10 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer19 = null;
        gzipSource14.buffer = okBuffer19;
        gzipSource14.section = (byte) -1;
        java.util.zip.Inflater inflater23 = gzipSource14.inflater;
        java.util.zip.CRC32 cRC32_24 = gzipSource14.crc;
        gzipSource11.crc = cRC32_24;
        java.util.zip.CRC32 cRC32_26 = gzipSource11.crc;
        com.squareup.okhttp.internal.bytes.Source source27 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = null;
        gzipSource28.inflaterSource = inflaterSource30;
        com.squareup.okhttp.internal.bytes.Source source32 = gzipSource28.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer33 = gzipSource28.buffer;
        gzipSource11.buffer = okBuffer33;
        com.squareup.okhttp.internal.bytes.Deadline deadline36 = null;
        long long37 = gzipSource6.read(okBuffer33, 0L, deadline36);
        gzipSource6.section = (byte) -1;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource0.crc = cRC32_5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer13 = null;
        gzipSource8.buffer = okBuffer13;
        gzipSource8.section = (byte) -1;
        gzipSource8.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        gzipSource8.section = (byte) 1;
        java.util.zip.CRC32 cRC32_22 = gzipSource8.crc;
        gzipSource0.source = gzipSource8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = gzipSource24.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = null;
        gzipSource24.inflaterSource = inflaterSource26;
        com.squareup.okhttp.internal.bytes.Source source28 = gzipSource24.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer29 = gzipSource24.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline31 = null;
        long long32 = 0L; // flaky: gzipSource8.read(okBuffer29, (long) (short) 10, deadline31);
        java.util.zip.Inflater inflater33 = gzipSource8.inflater;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater33);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource0.crc = cRC32_5;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        gzipSource27.inflater = inflater37;
        gzipSource26.inflater = inflater37;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource26.buffer;
        gzipSource7.updateCrc(okBuffer40, (long) '#', (long) (-1));
        gzipSource0.updateCrc(okBuffer40, (long) 0, 0L);
        com.squareup.okhttp.internal.bytes.Source source47 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource48 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        gzipSource0.section = (byte) 0;
        com.squareup.okhttp.internal.bytes.Deadline deadline52 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource48);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        java.util.zip.CRC32 cRC32_21 = gzipSource19.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline23 = null;
        gzipSource19.require((int) (short) -1, deadline23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_21);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource12.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource12.inflaterSource;
        java.util.zip.CRC32 cRC32_16 = gzipSource12.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource17.inflaterSource;
        gzipSource17.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource17.inflater = inflater31;
        gzipSource12.inflater = inflater31;
        com.squareup.okhttp.internal.bytes.Source source34 = gzipSource12.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource12.inflaterSource;
        gzipSource11.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.Deadline deadline38 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long39 = gzipSource12.seek((byte) 3, deadline38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        java.util.zip.CRC32 cRC32_22 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        gzipSource23.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource23);
        java.util.zip.CRC32 cRC32_30 = null;
        gzipSource23.crc = cRC32_30;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_33 = null;
        gzipSource32.crc = cRC32_33;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource32.inflaterSource;
        java.util.zip.CRC32 cRC32_36 = gzipSource32.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater38 = null;
        gzipSource37.inflater = inflater38;
        int int40 = gzipSource37.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource37.inflaterSource;
        gzipSource37.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        java.util.zip.Inflater inflater51 = gzipSource50.inflater;
        gzipSource37.inflater = inflater51;
        gzipSource32.inflater = inflater51;
        gzipSource23.inflater = inflater51;
        gzipSource6.source = gzipSource23;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater57 = null;
        gzipSource56.inflater = inflater57;
        int int59 = gzipSource56.section;
        gzipSource56.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource56);
        java.util.zip.Inflater inflater63 = gzipSource62.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource62);
        java.util.zip.CRC32 cRC32_65 = gzipSource64.crc;
        gzipSource6.crc = cRC32_65;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.checkEqual("", (int) (short) 1, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000000 != expected 0x000001");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_65);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource9);
        gzipSource9.section = (byte) 3;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource3.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource3.buffer = okBuffer8;
        gzipSource3.section = (byte) -1;
        java.util.zip.Inflater inflater12 = gzipSource3.inflater;
        java.util.zip.CRC32 cRC32_13 = gzipSource3.crc;
        gzipSource0.crc = cRC32_13;
        java.util.zip.CRC32 cRC32_15 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Source source16 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = null;
        gzipSource17.inflaterSource = inflaterSource19;
        com.squareup.okhttp.internal.bytes.Source source21 = gzipSource17.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer22 = gzipSource17.buffer;
        gzipSource0.buffer = okBuffer22;
        java.lang.Class<?> wildcardClass24 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource0.crc = cRC32_5;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        gzipSource27.inflater = inflater37;
        gzipSource26.inflater = inflater37;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource26.buffer;
        gzipSource7.updateCrc(okBuffer40, (long) '#', (long) (-1));
        gzipSource0.updateCrc(okBuffer40, (long) 0, 0L);
        com.squareup.okhttp.internal.bytes.Source source47 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource48 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline50 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long51 = gzipSource0.seek((byte) 0, deadline50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource48);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource0.buffer = okBuffer8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource11.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource11.inflaterSource;
        java.util.zip.CRC32 cRC32_15 = gzipSource11.crc;
        java.util.zip.Inflater inflater16 = gzipSource11.inflater;
        gzipSource11.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source21 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_25 = null;
        gzipSource24.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        java.util.zip.Inflater inflater34 = gzipSource33.inflater;
        gzipSource24.inflater = inflater34;
        gzipSource23.inflater = inflater34;
        gzipSource11.inflater = inflater34;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer38 = gzipSource11.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline40 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long41 = gzipSource0.read(okBuffer38, (long) ' ', deadline40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer38);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater2 = null;
        gzipSource1.inflater = inflater2;
        int int4 = gzipSource1.section;
        gzipSource1.section = (byte) -1;
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource1.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource1.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource23.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        java.util.zip.Inflater inflater35 = gzipSource30.inflater;
        gzipSource30.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source40 = gzipSource30.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource41.inflaterSource;
        gzipSource30.source = gzipSource41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        java.util.zip.Inflater inflater60 = gzipSource59.inflater;
        gzipSource50.inflater = inflater60;
        gzipSource49.inflater = inflater60;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer63 = gzipSource49.buffer;
        gzipSource30.updateCrc(okBuffer63, (long) '#', (long) (-1));
        gzipSource23.updateCrc(okBuffer63, (long) 0, 0L);
        gzipSource0.buffer = okBuffer63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_72 = null;
        gzipSource71.crc = cRC32_72;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource74 = gzipSource71.inflaterSource;
        java.util.zip.CRC32 cRC32_75 = gzipSource71.crc;
        java.util.zip.Inflater inflater76 = gzipSource71.inflater;
        java.util.zip.CRC32 cRC32_77 = null;
        gzipSource71.crc = cRC32_77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer79 = null;
        gzipSource71.buffer = okBuffer79;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer81 = null;
        gzipSource71.buffer = okBuffer81;
        gzipSource0.source = gzipSource71;
        com.squareup.okhttp.internal.bytes.Deadline deadline84 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater76);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource0.buffer = okBuffer8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer17 = gzipSource10.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline19 = null;
        long long20 = gzipSource0.read(okBuffer17, (long) (short) 0, deadline19);
        com.squareup.okhttp.internal.bytes.Deadline deadline22 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require(1, deadline22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        gzipSource0.source = gzipSource6;
        int int10 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline13 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (byte) 10, deadline13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source11);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = null;
        gzipSource10.inflaterSource = inflaterSource22;
        int int24 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource10.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource0.source;
        int int23 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource24.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_30 = null;
        gzipSource29.crc = cRC32_30;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource29.inflaterSource;
        java.util.zip.CRC32 cRC32_33 = gzipSource29.crc;
        java.util.zip.Inflater inflater34 = gzipSource29.inflater;
        gzipSource29.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source39 = gzipSource29.source;
        gzipSource24.source = source39;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource24.inflaterSource;
        int int42 = gzipSource24.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater44 = null;
        gzipSource43.inflater = inflater44;
        int int46 = gzipSource43.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource43.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer48 = null;
        gzipSource43.buffer = okBuffer48;
        int int50 = gzipSource43.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource43.inflaterSource;
        gzipSource24.source = gzipSource43;
        java.util.zip.Inflater inflater53 = gzipSource43.inflater;
        int int54 = gzipSource43.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource43);
        com.squareup.okhttp.internal.bytes.Deadline deadline57 = null;
        gzipSource55.require((int) (byte) 0, deadline57);
        java.util.zip.CRC32 cRC32_59 = gzipSource55.crc;
        gzipSource0.source = gzipSource55;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater53);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_59);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource3.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource3.buffer = okBuffer8;
        gzipSource3.section = (byte) -1;
        java.util.zip.Inflater inflater12 = gzipSource3.inflater;
        java.util.zip.CRC32 cRC32_13 = gzipSource3.crc;
        gzipSource0.crc = cRC32_13;
        java.util.zip.CRC32 cRC32_15 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Source source16 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer17 = gzipSource0.buffer;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline19 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater3 = null;
        gzipSource2.inflater = inflater3;
        int int5 = gzipSource2.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource2.inflaterSource;
        gzipSource2.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        gzipSource2.require((int) (short) -1, deadline10);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = null;
        gzipSource12.inflaterSource = inflaterSource19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource12.inflaterSource;
        gzipSource2.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = null;
        gzipSource12.inflaterSource = inflaterSource24;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = gzipSource12.buffer;
        gzipSource0.buffer = okBuffer26;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", 0, (int) (byte) 2);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000002 != expected 0x000000");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer26);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source4 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource6.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater10 = null;
        gzipSource9.inflater = inflater10;
        int int12 = gzipSource9.section;
        gzipSource9.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource9);
        java.util.zip.Inflater inflater16 = gzipSource15.inflater;
        gzipSource6.inflater = inflater16;
        gzipSource5.inflater = inflater16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource5.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer20 = gzipSource5.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline22 = null;
        long long23 = gzipSource0.read(okBuffer20, (long) 0, deadline22);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = null;
        gzipSource0.inflaterSource = inflaterSource6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer13 = null;
        gzipSource8.buffer = okBuffer13;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource8.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.Source source19 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer20 = null;
        gzipSource8.buffer = okBuffer20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater27 = null;
        gzipSource26.inflater = inflater27;
        int int29 = gzipSource26.section;
        gzipSource26.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource26);
        java.util.zip.Inflater inflater33 = gzipSource32.inflater;
        gzipSource23.inflater = inflater33;
        gzipSource22.inflater = inflater33;
        gzipSource8.inflater = inflater33;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_39 = null;
        gzipSource38.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource41);
        java.util.zip.Inflater inflater48 = gzipSource47.inflater;
        gzipSource38.inflater = inflater48;
        gzipSource37.inflater = inflater48;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource37.inflaterSource;
        java.util.zip.Inflater inflater52 = gzipSource37.inflater;
        gzipSource8.inflater = inflater52;
        gzipSource0.inflater = inflater52;
        java.util.zip.Inflater inflater55 = gzipSource0.inflater;
        java.util.zip.Inflater inflater56 = gzipSource0.inflater;
        java.util.zip.Inflater inflater57 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater57);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        java.lang.Class<?> wildcardClass9 = okBuffer8.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        java.util.zip.CRC32 cRC32_12 = gzipSource8.crc;
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource8.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        java.util.zip.Inflater inflater20 = gzipSource15.inflater;
        gzipSource15.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source25 = gzipSource15.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater27 = null;
        gzipSource26.inflater = inflater27;
        int int29 = gzipSource26.section;
        gzipSource26.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource26.inflaterSource;
        gzipSource15.source = gzipSource26;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource35.inflater = inflater45;
        gzipSource34.inflater = inflater45;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer48 = gzipSource34.buffer;
        gzipSource15.updateCrc(okBuffer48, (long) '#', (long) (-1));
        gzipSource8.updateCrc(okBuffer48, (long) 0, 0L);
        gzipSource0.buffer = okBuffer48;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater58 = null;
        gzipSource57.inflater = inflater58;
        int int60 = gzipSource57.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource61 = gzipSource57.inflaterSource;
        gzipSource57.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline65 = null;
        gzipSource57.require((int) (short) -1, deadline65);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater68 = null;
        gzipSource67.inflater = inflater68;
        int int70 = gzipSource67.section;
        gzipSource67.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource67);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource74 = null;
        gzipSource67.inflaterSource = inflaterSource74;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource76 = gzipSource67.inflaterSource;
        gzipSource57.source = gzipSource67;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource78 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource67);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource79 = null;
        gzipSource67.inflaterSource = inflaterSource79;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer81 = gzipSource67.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer82 = gzipSource67.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline84 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long85 = gzipSource0.read(okBuffer82, 100L, deadline84);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource56);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource61);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer82);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource0.buffer = okBuffer8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        java.util.zip.CRC32 cRC32_14 = gzipSource10.crc;
        java.util.zip.Inflater inflater15 = gzipSource10.inflater;
        gzipSource10.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source20 = gzipSource10.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource21.inflaterSource;
        gzipSource10.source = gzipSource21;
        com.squareup.okhttp.internal.bytes.Source source29 = gzipSource10.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource30.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_39 = null;
        gzipSource38.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource41);
        java.util.zip.Inflater inflater48 = gzipSource47.inflater;
        gzipSource38.inflater = inflater48;
        gzipSource30.inflater = inflater48;
        gzipSource10.inflater = inflater48;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater53 = null;
        gzipSource52.inflater = inflater53;
        int int55 = gzipSource52.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = gzipSource52.inflaterSource;
        gzipSource52.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline60 = null;
        gzipSource52.require((int) (short) -1, deadline60);
        com.squareup.okhttp.internal.bytes.Source source62 = gzipSource52.source;
        int int63 = gzipSource52.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer64 = null;
        gzipSource52.buffer = okBuffer64;
        gzipSource10.source = okBuffer64;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer67 = gzipSource10.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline69 = null;
        long long70 = gzipSource0.read(okBuffer67, 10L, deadline69);
        com.squareup.okhttp.internal.bytes.Deadline deadline71 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater48);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        gzipSource8.section = (byte) 0;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource11.inflaterSource;
        java.util.zip.Inflater inflater16 = gzipSource11.inflater;
        java.util.zip.CRC32 cRC32_17 = gzipSource11.crc;
        gzipSource8.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.Deadline deadline19 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource8.close(deadline19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_17);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        java.util.zip.CRC32 cRC32_30 = gzipSource19.crc;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        java.util.zip.CRC32 cRC32_39 = null;
        gzipSource33.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_42 = null;
        gzipSource41.crc = cRC32_42;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        java.util.zip.Inflater inflater51 = gzipSource50.inflater;
        gzipSource41.inflater = inflater51;
        gzipSource33.inflater = inflater51;
        gzipSource32.inflater = inflater51;
        java.util.zip.CRC32 cRC32_55 = gzipSource32.crc;
        gzipSource19.crc = cRC32_55;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_55);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        gzipSource0.source = gzipSource6;
        int int10 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        gzipSource0.section = (short) 10;
        java.lang.Class<?> wildcardClass14 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer23 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline24 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer23);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.Source source4 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline6 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) 'a', deadline6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source4);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater3 = null;
        gzipSource2.inflater = inflater3;
        int int5 = gzipSource2.section;
        gzipSource2.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource2);
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource2.source;
        gzipSource0.source = gzipSource2;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source11);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = '#';
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        gzipSource0.section = (byte) 1;
        java.util.zip.CRC32 cRC32_14 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        gzipSource15.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        java.util.zip.Inflater inflater22 = gzipSource21.inflater;
        gzipSource21.section = (byte) -1;
        java.util.zip.Inflater inflater25 = gzipSource21.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater27 = null;
        gzipSource26.inflater = inflater27;
        int int29 = gzipSource26.section;
        gzipSource26.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource26);
        java.util.zip.Inflater inflater33 = gzipSource32.inflater;
        gzipSource32.section = (byte) -1;
        java.util.zip.Inflater inflater36 = gzipSource32.inflater;
        gzipSource21.inflater = inflater36;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource21.inflaterSource;
        gzipSource0.inflaterSource = inflaterSource38;
        com.squareup.okhttp.internal.bytes.Deadline deadline40 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource38);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = null;
        gzipSource0.inflaterSource = inflaterSource3;
        com.squareup.okhttp.internal.bytes.Deadline deadline5 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource0.inflaterSource;
        int int19 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline21 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource20.consumeHeader(deadline21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource33.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_39 = null;
        gzipSource38.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource38.inflaterSource;
        java.util.zip.CRC32 cRC32_42 = gzipSource38.crc;
        java.util.zip.Inflater inflater43 = gzipSource38.inflater;
        gzipSource38.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source48 = gzipSource38.source;
        gzipSource33.source = source48;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource50 = gzipSource33.inflaterSource;
        int int51 = gzipSource33.section;
        gzipSource0.source = gzipSource33;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = gzipSource53.buffer;
        gzipSource0.buffer = okBuffer60;
        gzipSource0.section = (short) 0;
        int int64 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source65 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source65);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.Source source26 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource27.inflaterSource;
        java.util.zip.Inflater inflater31 = gzipSource27.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource27.buffer;
        gzipSource7.buffer = okBuffer32;
        gzipSource0.source = okBuffer32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource35.inflater = inflater45;
        gzipSource0.inflater = inflater45;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_49 = null;
        gzipSource48.crc = cRC32_49;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource48.inflaterSource;
        int int52 = gzipSource48.section;
        com.squareup.okhttp.internal.bytes.Source source53 = gzipSource48.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        gzipSource48.source = gzipSource54;
        java.util.zip.CRC32 cRC32_58 = gzipSource48.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater60 = null;
        gzipSource59.inflater = inflater60;
        int int62 = gzipSource59.section;
        gzipSource59.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource59);
        com.squareup.okhttp.internal.bytes.Deadline deadline67 = null;
        gzipSource65.require((-1), deadline67);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater70 = null;
        gzipSource69.inflater = inflater70;
        int int72 = gzipSource69.section;
        gzipSource69.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource69);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource76 = null;
        gzipSource69.inflaterSource = inflaterSource76;
        gzipSource65.source = inflaterSource76;
        java.util.zip.CRC32 cRC32_79 = gzipSource65.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource65.buffer;
        gzipSource48.updateCrc(okBuffer80, (long) (short) 100, (long) (short) -1);
        gzipSource0.updateCrc(okBuffer80, 0L, 0L);
        com.squareup.okhttp.internal.bytes.Source source87 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource88 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource89 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_90 = null;
        gzipSource89.crc = cRC32_90;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource92 = gzipSource89.inflaterSource;
        int int93 = gzipSource89.section;
        com.squareup.okhttp.internal.bytes.Source source94 = gzipSource89.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource95 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater96 = null;
        gzipSource95.inflater = inflater96;
        gzipSource89.source = gzipSource95;
        gzipSource0.source = gzipSource89;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource92);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int93 + "' != '" + 100 + "'", int93 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source94);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.Inflater inflater15 = gzipSource14.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        gzipSource0.source = gzipSource16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        gzipSource19.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        com.squareup.okhttp.internal.bytes.Deadline deadline27 = null;
        gzipSource25.require((-1), deadline27);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        gzipSource29.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource29);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = null;
        gzipSource29.inflaterSource = inflaterSource36;
        gzipSource25.source = inflaterSource36;
        java.util.zip.CRC32 cRC32_39 = gzipSource25.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        gzipSource40.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        java.util.zip.Inflater inflater47 = gzipSource46.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource48);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater52 = null;
        gzipSource51.inflater = inflater52;
        int int54 = gzipSource51.section;
        gzipSource51.section = (byte) -1;
        java.util.zip.CRC32 cRC32_57 = null;
        gzipSource51.crc = cRC32_57;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_60 = null;
        gzipSource59.crc = cRC32_60;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater63 = null;
        gzipSource62.inflater = inflater63;
        int int65 = gzipSource62.section;
        gzipSource62.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource62);
        java.util.zip.Inflater inflater69 = gzipSource68.inflater;
        gzipSource59.inflater = inflater69;
        gzipSource51.inflater = inflater69;
        gzipSource50.inflater = inflater69;
        gzipSource49.inflater = inflater69;
        int int74 = gzipSource49.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater76 = null;
        gzipSource75.inflater = inflater76;
        int int78 = gzipSource75.section;
        gzipSource75.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource81 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource75);
        java.util.zip.Inflater inflater82 = gzipSource81.inflater;
        gzipSource81.section = (byte) -1;
        java.util.zip.Inflater inflater85 = gzipSource81.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource86 = gzipSource81.inflaterSource;
        gzipSource49.inflaterSource = inflaterSource86;
        gzipSource25.inflaterSource = inflaterSource86;
        gzipSource16.inflaterSource = inflaterSource86;
        com.squareup.okhttp.internal.bytes.Deadline deadline90 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource16.close(deadline90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater69);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource86);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer14 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = null;
        gzipSource0.inflaterSource = inflaterSource15;
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        gzipSource0.require(0, deadline18);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_22 = null;
        gzipSource21.crc = cRC32_22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource21.inflater = inflater31;
        gzipSource20.inflater = inflater31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource20.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer35 = gzipSource20.buffer;
        gzipSource0.updateCrc(okBuffer35, (long) (byte) 100, (long) (short) -1);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer35);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer23 = gzipSource0.buffer;
        gzipSource0.section = 0;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer23);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater10 = null;
        gzipSource9.inflater = inflater10;
        int int12 = gzipSource9.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource9.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource14.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource14.inflaterSource;
        java.util.zip.CRC32 cRC32_18 = gzipSource14.crc;
        java.util.zip.Inflater inflater19 = gzipSource14.inflater;
        gzipSource14.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source24 = gzipSource14.source;
        gzipSource9.source = source24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource9.inflaterSource;
        int int27 = gzipSource9.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater29 = null;
        gzipSource28.inflater = inflater29;
        int int31 = gzipSource28.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource28.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer33 = null;
        gzipSource28.buffer = okBuffer33;
        int int35 = gzipSource28.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = gzipSource28.inflaterSource;
        gzipSource9.source = gzipSource28;
        java.util.zip.Inflater inflater38 = gzipSource28.inflater;
        java.util.zip.CRC32 cRC32_39 = gzipSource28.crc;
        gzipSource0.crc = cRC32_39;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_39);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.Inflater inflater20 = gzipSource6.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater20);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        java.util.zip.Inflater inflater14 = gzipSource9.inflater;
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource9.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource17.inflaterSource;
        gzipSource17.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource17.inflater = inflater31;
        gzipSource9.inflater = inflater31;
        gzipSource0.source = gzipSource9;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource35.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_41 = null;
        gzipSource40.crc = cRC32_41;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource40.inflaterSource;
        java.util.zip.CRC32 cRC32_44 = gzipSource40.crc;
        java.util.zip.Inflater inflater45 = gzipSource40.inflater;
        gzipSource40.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source50 = gzipSource40.source;
        gzipSource35.source = source50;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource35.inflaterSource;
        int int53 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource54.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer59 = null;
        gzipSource54.buffer = okBuffer59;
        int int61 = gzipSource54.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource62 = gzipSource54.inflaterSource;
        gzipSource35.source = gzipSource54;
        java.util.zip.Inflater inflater64 = gzipSource54.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater66 = null;
        gzipSource65.inflater = inflater66;
        int int68 = gzipSource65.section;
        gzipSource65.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource65);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource72 = null;
        gzipSource65.inflaterSource = inflaterSource72;
        java.util.zip.CRC32 cRC32_74 = gzipSource65.crc;
        gzipSource54.crc = cRC32_74;
        gzipSource0.crc = cRC32_74;
        com.squareup.okhttp.internal.bytes.Source source77 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_78 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource79 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource52);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater64);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource79);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource5 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource5);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = null;
        gzipSource0.inflaterSource = inflaterSource6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer13 = null;
        gzipSource8.buffer = okBuffer13;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource8.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.Source source19 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer20 = null;
        gzipSource8.buffer = okBuffer20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater27 = null;
        gzipSource26.inflater = inflater27;
        int int29 = gzipSource26.section;
        gzipSource26.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource26);
        java.util.zip.Inflater inflater33 = gzipSource32.inflater;
        gzipSource23.inflater = inflater33;
        gzipSource22.inflater = inflater33;
        gzipSource8.inflater = inflater33;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_39 = null;
        gzipSource38.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource41);
        java.util.zip.Inflater inflater48 = gzipSource47.inflater;
        gzipSource38.inflater = inflater48;
        gzipSource37.inflater = inflater48;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource37.inflaterSource;
        java.util.zip.Inflater inflater52 = gzipSource37.inflater;
        gzipSource8.inflater = inflater52;
        gzipSource0.inflater = inflater52;
        java.util.zip.Inflater inflater55 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Source source56 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source56);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        java.util.zip.CRC32 cRC32_19 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        java.util.zip.Inflater inflater27 = gzipSource26.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource26);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource28);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        gzipSource31.section = (byte) -1;
        java.util.zip.CRC32 cRC32_37 = null;
        gzipSource31.crc = cRC32_37;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource39.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        java.util.zip.Inflater inflater49 = gzipSource48.inflater;
        gzipSource39.inflater = inflater49;
        gzipSource31.inflater = inflater49;
        gzipSource30.inflater = inflater49;
        gzipSource29.inflater = inflater49;
        int int54 = gzipSource29.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_56 = null;
        gzipSource55.crc = cRC32_56;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource55.inflaterSource;
        int int59 = gzipSource55.section;
        com.squareup.okhttp.internal.bytes.Source source60 = gzipSource55.source;
        gzipSource55.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer63 = gzipSource55.buffer;
        gzipSource55.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer66 = gzipSource55.buffer;
        gzipSource29.buffer = okBuffer66;
        com.squareup.okhttp.internal.bytes.Deadline deadline69 = null;
        long long70 = gzipSource0.read(okBuffer66, (long) 0, deadline69);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        gzipSource14.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        com.squareup.okhttp.internal.bytes.Deadline deadline22 = null;
        gzipSource20.require((-1), deadline22);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = null;
        gzipSource24.inflaterSource = inflaterSource31;
        gzipSource20.source = inflaterSource31;
        java.util.zip.CRC32 cRC32_34 = gzipSource20.crc;
        gzipSource0.crc = cRC32_34;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_37 = null;
        gzipSource36.crc = cRC32_37;
        java.util.zip.CRC32 cRC32_39 = null;
        gzipSource36.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.Source source41 = gzipSource36.source;
        com.squareup.okhttp.internal.bytes.Source source42 = gzipSource36.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer43 = gzipSource36.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer43, (long) 0, (long) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer43);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource0.inflaterSource;
        int int19 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = null;
        gzipSource20.inflaterSource = inflaterSource24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource20.inflaterSource;
        int int27 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.Source source28 = gzipSource20.source;
        com.squareup.okhttp.internal.bytes.Source source29 = gzipSource20.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        gzipSource20.source = gzipSource30;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource35.inflaterSource;
        gzipSource35.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline43 = null;
        gzipSource35.require((int) (short) -1, deadline43);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater46 = null;
        gzipSource45.inflater = inflater46;
        int int48 = gzipSource45.section;
        gzipSource45.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource45);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = null;
        gzipSource45.inflaterSource = inflaterSource52;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource54 = gzipSource45.inflaterSource;
        gzipSource35.source = gzipSource45;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource45);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource57 = null;
        gzipSource45.inflaterSource = inflaterSource57;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer59 = gzipSource45.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = gzipSource45.buffer;
        gzipSource20.buffer = okBuffer60;
        com.squareup.okhttp.internal.bytes.Deadline deadline63 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long64 = gzipSource0.read(okBuffer60, (long) (byte) 2, deadline63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer60);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        gzipSource0.require((int) (byte) -1, deadline7);
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        gzipSource23.section = (byte) -1;
        java.util.zip.CRC32 cRC32_29 = null;
        gzipSource23.crc = cRC32_29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource31.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        java.util.zip.Inflater inflater41 = gzipSource40.inflater;
        gzipSource31.inflater = inflater41;
        gzipSource23.inflater = inflater41;
        gzipSource22.inflater = inflater41;
        gzipSource21.inflater = inflater41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        gzipSource0.source = gzipSource46;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource46.checkEqual("hi!", (int) 'a', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0xffffffff != expected 0x000061");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater41);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        gzipSource3.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource3);
        java.util.zip.Inflater inflater10 = gzipSource9.inflater;
        gzipSource0.inflater = inflater10;
        java.util.zip.CRC32 cRC32_12 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Source source13 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        java.util.zip.Inflater inflater25 = gzipSource24.inflater;
        gzipSource15.inflater = inflater25;
        gzipSource14.inflater = inflater25;
        gzipSource0.inflater = inflater25;
        java.util.zip.CRC32 cRC32_29 = gzipSource0.crc;
        gzipSource0.section = ' ';
        com.squareup.okhttp.internal.bytes.Deadline deadline32 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_29);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource2.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource5 = gzipSource2.inflaterSource;
        java.util.zip.CRC32 cRC32_6 = gzipSource2.crc;
        java.util.zip.Inflater inflater7 = gzipSource2.inflater;
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource2.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer10 = gzipSource2.buffer;
        gzipSource0.updateCrc(okBuffer10, (long) '4', (long) (-1));
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        int int15 = gzipSource0.section;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        java.util.zip.CRC32 cRC32_25 = null;
        gzipSource18.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_29 = null;
        gzipSource28.crc = cRC32_29;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource28.inflaterSource;
        int int32 = gzipSource28.section;
        com.squareup.okhttp.internal.bytes.Source source33 = gzipSource28.source;
        gzipSource28.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer36 = gzipSource28.buffer;
        gzipSource28.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer39 = gzipSource28.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline41 = null;
        long long42 = gzipSource27.read(okBuffer39, (long) (short) 0, deadline41);
        gzipSource0.buffer = okBuffer39;
        com.squareup.okhttp.internal.bytes.Deadline deadline44 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = null;
        gzipSource0.buffer = okBuffer12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        java.util.zip.Inflater inflater25 = gzipSource24.inflater;
        gzipSource15.inflater = inflater25;
        gzipSource14.inflater = inflater25;
        gzipSource0.inflater = inflater25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.Inflater inflater40 = gzipSource39.inflater;
        gzipSource30.inflater = inflater40;
        gzipSource29.inflater = inflater40;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource29.inflaterSource;
        java.util.zip.Inflater inflater44 = gzipSource29.inflater;
        gzipSource0.inflater = inflater44;
        java.util.zip.Inflater inflater46 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline48 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (byte) 1, deadline48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater46);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) '4', deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource10.inflaterSource;
        gzipSource10.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        gzipSource10.require((int) (short) -1, deadline18);
        com.squareup.okhttp.internal.bytes.Source source20 = gzipSource10.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource21.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource35.inflaterSource;
        gzipSource35.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        java.util.zip.Inflater inflater49 = gzipSource48.inflater;
        gzipSource35.inflater = inflater49;
        gzipSource30.inflater = inflater49;
        gzipSource21.inflater = inflater49;
        gzipSource10.inflater = inflater49;
        gzipSource0.inflater = inflater49;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        gzipSource55.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource55);
        java.util.zip.Inflater inflater62 = gzipSource61.inflater;
        gzipSource61.section = (byte) -1;
        java.util.zip.Inflater inflater65 = gzipSource61.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater67 = null;
        gzipSource66.inflater = inflater67;
        int int69 = gzipSource66.section;
        gzipSource66.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource66);
        java.util.zip.Inflater inflater73 = gzipSource72.inflater;
        gzipSource72.section = (byte) -1;
        java.util.zip.Inflater inflater76 = gzipSource72.inflater;
        gzipSource61.inflater = inflater76;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource78 = gzipSource61.inflaterSource;
        gzipSource0.inflaterSource = inflaterSource78;
        gzipSource0.section = (short) 100;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater65);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource78);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        gzipSource0.require((int) (byte) -1, deadline7);
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = gzipSource0.buffer;
        java.lang.Class<?> wildcardClass12 = okBuffer11.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = null;
        gzipSource0.inflaterSource = inflaterSource32;
        java.util.zip.CRC32 cRC32_34 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline35 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 2;
        java.util.zip.Inflater inflater11 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        gzipSource14.section = (byte) -1;
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource14.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer22 = null;
        gzipSource14.buffer = okBuffer22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_25 = null;
        gzipSource24.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource24.inflaterSource;
        java.util.zip.CRC32 cRC32_28 = gzipSource24.crc;
        java.util.zip.Inflater inflater29 = gzipSource24.inflater;
        gzipSource24.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source34 = gzipSource24.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        gzipSource35.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource35.inflaterSource;
        gzipSource24.source = gzipSource35;
        com.squareup.okhttp.internal.bytes.Source source43 = gzipSource24.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        java.util.zip.CRC32 cRC32_50 = null;
        gzipSource44.crc = cRC32_50;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_53 = null;
        gzipSource52.crc = cRC32_53;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        gzipSource55.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource55);
        java.util.zip.Inflater inflater62 = gzipSource61.inflater;
        gzipSource52.inflater = inflater62;
        gzipSource44.inflater = inflater62;
        gzipSource24.inflater = inflater62;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater67 = null;
        gzipSource66.inflater = inflater67;
        int int69 = gzipSource66.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource70 = gzipSource66.inflaterSource;
        gzipSource66.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline74 = null;
        gzipSource66.require((int) (short) -1, deadline74);
        com.squareup.okhttp.internal.bytes.Source source76 = gzipSource66.source;
        int int77 = gzipSource66.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer78 = null;
        gzipSource66.buffer = okBuffer78;
        gzipSource24.source = okBuffer78;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer81 = gzipSource24.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline83 = null;
        long long84 = gzipSource14.read(okBuffer81, 10L, deadline83);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer81, (long) 'a', (long) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source43);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater62);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + (-1L) + "'", long84 == (-1L));
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource5 = gzipSource0.inflaterSource;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) inflaterSource5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: source == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource5);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        gzipSource0.require((int) (byte) -1, deadline7);
        int int9 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource11.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource19.inflater = inflater29;
        gzipSource11.inflater = inflater29;
        gzipSource10.inflater = inflater29;
        gzipSource9.inflater = inflater29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource9);
        com.squareup.okhttp.internal.bytes.Source source35 = gzipSource34.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline37 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long38 = gzipSource34.seek((byte) 1, deadline37);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source35);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        java.util.zip.Inflater inflater14 = gzipSource9.inflater;
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource9.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource17.inflaterSource;
        gzipSource17.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource17.inflater = inflater31;
        gzipSource9.inflater = inflater31;
        gzipSource0.source = gzipSource9;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_37 = null;
        gzipSource36.crc = cRC32_37;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater40 = null;
        gzipSource39.inflater = inflater40;
        int int42 = gzipSource39.section;
        gzipSource39.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource39);
        java.util.zip.Inflater inflater46 = gzipSource45.inflater;
        gzipSource36.inflater = inflater46;
        gzipSource35.inflater = inflater46;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = gzipSource35.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer50 = gzipSource35.buffer;
        gzipSource0.source = gzipSource35;
        gzipSource0.section = 3;
        com.squareup.okhttp.internal.bytes.Source source54 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source54);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        gzipSource0.section = 0;
        com.squareup.okhttp.internal.bytes.Deadline deadline34 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_35 = null;
        gzipSource34.crc = cRC32_35;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater38 = null;
        gzipSource37.inflater = inflater38;
        int int40 = gzipSource37.section;
        gzipSource37.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource37);
        java.util.zip.Inflater inflater44 = gzipSource43.inflater;
        gzipSource34.inflater = inflater44;
        gzipSource33.inflater = inflater44;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer47 = gzipSource33.buffer;
        gzipSource0.buffer = okBuffer47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer47);
        java.util.zip.CRC32 cRC32_50 = gzipSource49.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_50);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        java.util.zip.Inflater inflater10 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource17);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource22.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.Inflater inflater40 = gzipSource39.inflater;
        gzipSource30.inflater = inflater40;
        gzipSource22.inflater = inflater40;
        gzipSource21.inflater = inflater40;
        gzipSource20.inflater = inflater40;
        gzipSource0.inflater = inflater40;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater40);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource5 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        java.util.zip.Inflater inflater17 = gzipSource16.inflater;
        gzipSource7.inflater = inflater17;
        java.util.zip.CRC32 cRC32_19 = gzipSource7.crc;
        com.squareup.okhttp.internal.bytes.Source source20 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_23 = null;
        gzipSource22.crc = cRC32_23;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        gzipSource25.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource25);
        java.util.zip.Inflater inflater32 = gzipSource31.inflater;
        gzipSource22.inflater = inflater32;
        gzipSource21.inflater = inflater32;
        gzipSource7.inflater = inflater32;
        gzipSource0.inflater = inflater32;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline38 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (byte) 2, deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        java.util.zip.CRC32 cRC32_14 = null;
        gzipSource9.crc = cRC32_14;
        gzipSource9.section = (-1);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        com.squareup.okhttp.internal.bytes.Deadline deadline26 = null;
        gzipSource24.require((-1), deadline26);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater29 = null;
        gzipSource28.inflater = inflater29;
        int int31 = gzipSource28.section;
        gzipSource28.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource28);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = null;
        gzipSource28.inflaterSource = inflaterSource35;
        gzipSource24.source = inflaterSource35;
        java.util.zip.CRC32 cRC32_38 = gzipSource24.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer39 = gzipSource24.buffer;
        int int40 = gzipSource24.section;
        java.util.zip.CRC32 cRC32_41 = gzipSource24.crc;
        com.squareup.okhttp.internal.bytes.Source source42 = gzipSource24.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater44 = null;
        gzipSource43.inflater = inflater44;
        int int46 = gzipSource43.section;
        gzipSource43.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource43);
        com.squareup.okhttp.internal.bytes.Deadline deadline51 = null;
        gzipSource49.require((-1), deadline51);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource60 = null;
        gzipSource53.inflaterSource = inflaterSource60;
        gzipSource49.source = inflaterSource60;
        java.util.zip.CRC32 cRC32_63 = gzipSource49.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer64 = gzipSource49.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource65 = gzipSource49.inflaterSource;
        gzipSource24.inflaterSource = inflaterSource65;
        gzipSource9.inflaterSource = inflaterSource65;
        gzipSource0.inflaterSource = inflaterSource65;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource65);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource2.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource5 = gzipSource2.inflaterSource;
        java.util.zip.CRC32 cRC32_6 = gzipSource2.crc;
        java.util.zip.Inflater inflater7 = gzipSource2.inflater;
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource2.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer10 = gzipSource2.buffer;
        gzipSource0.updateCrc(okBuffer10, (long) '4', (long) (-1));
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        java.util.zip.CRC32 cRC32_18 = null;
        gzipSource15.crc = cRC32_18;
        com.squareup.okhttp.internal.bytes.Source source20 = gzipSource15.source;
        java.util.zip.CRC32 cRC32_21 = gzipSource15.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_23 = null;
        gzipSource22.crc = cRC32_23;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource22.inflaterSource;
        java.util.zip.CRC32 cRC32_26 = gzipSource22.crc;
        java.util.zip.Inflater inflater27 = gzipSource22.inflater;
        gzipSource22.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source32 = gzipSource22.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource33.inflaterSource;
        gzipSource22.source = gzipSource33;
        com.squareup.okhttp.internal.bytes.Source source41 = gzipSource22.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.Inflater inflater46 = gzipSource42.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer47 = gzipSource42.buffer;
        gzipSource22.buffer = okBuffer47;
        gzipSource15.source = okBuffer47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        java.util.zip.Inflater inflater60 = gzipSource59.inflater;
        gzipSource50.inflater = inflater60;
        gzipSource15.inflater = inflater60;
        gzipSource0.inflater = inflater60;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", 1, 100);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000064 != expected 0x000001");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater60);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        int int8 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        gzipSource0.checkEqual("hi!", (-1), (int) (byte) -1);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource17);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource20 = gzipSource19.inflaterSource;
        gzipSource0.inflaterSource = inflaterSource20;
        com.squareup.okhttp.internal.bytes.Deadline deadline23 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) '4', deadline23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource20);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource11.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource11.inflaterSource;
        java.util.zip.CRC32 cRC32_15 = gzipSource11.crc;
        java.util.zip.Inflater inflater16 = gzipSource11.inflater;
        gzipSource11.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source21 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource22.inflaterSource;
        gzipSource11.source = gzipSource22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource31.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        java.util.zip.Inflater inflater41 = gzipSource40.inflater;
        gzipSource31.inflater = inflater41;
        gzipSource30.inflater = inflater41;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer44 = gzipSource30.buffer;
        gzipSource11.updateCrc(okBuffer44, (long) '#', (long) (-1));
        gzipSource0.buffer = okBuffer44;
        java.util.zip.Inflater inflater49 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline50 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater49);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource0.source;
        int int23 = gzipSource0.section;
        java.util.zip.CRC32 cRC32_24 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline25 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_24);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_22 = null;
        gzipSource21.crc = cRC32_22;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource21.inflaterSource;
        int int25 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.Source source26 = gzipSource21.source;
        gzipSource21.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer29 = gzipSource21.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer30 = gzipSource21.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer31 = gzipSource21.buffer;
        gzipSource10.buffer = okBuffer31;
        java.util.zip.Inflater inflater33 = gzipSource10.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater33);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        gzipSource0.source = gzipSource6;
        int int10 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = null;
        gzipSource11.inflaterSource = inflaterSource15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        gzipSource17.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource17);
        java.util.zip.Inflater inflater24 = gzipSource23.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource23);
        gzipSource25.section = (byte) 0;
        gzipSource25.section = (-1);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource25.inflaterSource;
        gzipSource11.inflaterSource = inflaterSource30;
        gzipSource0.inflaterSource = inflaterSource30;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource30);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        gzipSource0.section = 'a';
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource20 = gzipSource16.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_22 = null;
        gzipSource21.crc = cRC32_22;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource21.inflaterSource;
        java.util.zip.CRC32 cRC32_25 = gzipSource21.crc;
        java.util.zip.Inflater inflater26 = gzipSource21.inflater;
        gzipSource21.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source31 = gzipSource21.source;
        gzipSource16.source = source31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource16.inflaterSource;
        int int34 = gzipSource16.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource35.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = null;
        gzipSource35.buffer = okBuffer40;
        int int42 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource35.inflaterSource;
        gzipSource16.source = gzipSource35;
        java.util.zip.Inflater inflater45 = gzipSource35.inflater;
        java.util.zip.CRC32 cRC32_46 = gzipSource35.crc;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource35.inflaterSource;
        gzipSource0.source = inflaterSource47;
        java.util.zip.Inflater inflater49 = gzipSource0.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater49);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer15 = gzipSource0.buffer;
        java.lang.Class<?> wildcardClass16 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource11.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource16.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource16.inflaterSource;
        java.util.zip.CRC32 cRC32_20 = gzipSource16.crc;
        java.util.zip.Inflater inflater21 = gzipSource16.inflater;
        gzipSource16.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source26 = gzipSource16.source;
        gzipSource11.source = source26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource11.inflaterSource;
        int int29 = gzipSource11.section;
        gzipSource11.section = 3;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        int int35 = gzipSource32.section;
        gzipSource32.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        com.squareup.okhttp.internal.bytes.Deadline deadline40 = null;
        gzipSource38.require((-1), deadline40);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = null;
        gzipSource42.inflaterSource = inflaterSource49;
        gzipSource38.source = inflaterSource49;
        java.util.zip.CRC32 cRC32_52 = gzipSource38.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer53 = gzipSource38.buffer;
        gzipSource11.updateCrc(okBuffer53, (long) (short) 100, (long) (short) -1);
        com.squareup.okhttp.internal.bytes.Deadline deadline58 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long59 = gzipSource10.read(okBuffer53, (long) (byte) -1, deadline58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: byteCount < 0: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer53);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_10 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.Source source21 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline22 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline22);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source21);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((int) (short) 0, deadline8);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource6.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource6.inflaterSource;
        java.util.zip.Inflater inflater12 = gzipSource6.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater12);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = ' ';
        com.squareup.okhttp.internal.bytes.Deadline deadline9 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer9 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer9);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        gzipSource0.source = gzipSource6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource6.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        java.util.zip.CRC32 cRC32_9 = gzipSource8.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        int int14 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource10.source;
        gzipSource10.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer18 = gzipSource10.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer19 = gzipSource10.buffer;
        gzipSource8.buffer = okBuffer19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource21.inflaterSource;
        java.util.zip.Inflater inflater26 = gzipSource21.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource21.inflaterSource;
        java.util.zip.Inflater inflater28 = gzipSource21.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_30 = null;
        gzipSource29.crc = cRC32_30;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource29.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource29.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        com.squareup.okhttp.internal.bytes.Deadline deadline42 = null;
        gzipSource40.require((-1), deadline42);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = null;
        gzipSource44.inflaterSource = inflaterSource51;
        gzipSource40.source = inflaterSource51;
        java.util.zip.CRC32 cRC32_54 = gzipSource40.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer55 = gzipSource40.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = gzipSource40.inflaterSource;
        gzipSource29.inflaterSource = inflaterSource56;
        gzipSource21.inflaterSource = inflaterSource56;
        gzipSource8.inflaterSource = inflaterSource56;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource56);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer6 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        long long9 = gzipSource0.read(okBuffer6, (long) 100, deadline8);
        int int10 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = null;
        gzipSource11.inflaterSource = inflaterSource18;
        java.util.zip.CRC32 cRC32_20 = gzipSource11.crc;
        gzipSource11.section = 100;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = gzipSource11.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline26 = null;
        long long27 = gzipSource0.read(okBuffer24, (long) (byte) 10, deadline26);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater29 = null;
        gzipSource28.inflater = inflater29;
        int int31 = gzipSource28.section;
        gzipSource28.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource28);
        java.util.zip.Inflater inflater35 = gzipSource34.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        java.util.zip.CRC32 cRC32_37 = gzipSource36.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_39 = null;
        gzipSource38.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource38.inflaterSource;
        int int42 = gzipSource38.section;
        com.squareup.okhttp.internal.bytes.Source source43 = gzipSource38.source;
        gzipSource38.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer46 = gzipSource38.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer47 = gzipSource38.buffer;
        gzipSource36.buffer = okBuffer47;
        com.squareup.okhttp.internal.bytes.Deadline deadline50 = null;
        long long51 = gzipSource0.read(okBuffer47, (long) (short) 1, deadline50);
        int int52 = gzipSource0.section;
        int int53 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline54 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        gzipSource10.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = gzipSource10.crc;
        int int18 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline20 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource10.require(97, deadline20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource0.buffer = okBuffer8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource0.inflaterSource;
        java.lang.Class<?> wildcardClass11 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater4 = gzipSource0.inflater;
        gzipSource0.section = (byte) 0;
        java.util.zip.Inflater inflater7 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource8.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_18 = null;
        gzipSource17.crc = cRC32_18;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource20 = gzipSource17.inflaterSource;
        java.util.zip.CRC32 cRC32_21 = gzipSource17.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource22.inflaterSource;
        gzipSource22.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        gzipSource29.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource29);
        java.util.zip.Inflater inflater36 = gzipSource35.inflater;
        gzipSource22.inflater = inflater36;
        gzipSource17.inflater = inflater36;
        gzipSource8.inflater = inflater36;
        java.util.zip.CRC32 cRC32_40 = gzipSource8.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource41);
        java.util.zip.Inflater inflater48 = gzipSource47.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource47);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource49);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater53 = null;
        gzipSource52.inflater = inflater53;
        int int55 = gzipSource52.section;
        gzipSource52.section = (byte) -1;
        java.util.zip.CRC32 cRC32_58 = null;
        gzipSource52.crc = cRC32_58;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_61 = null;
        gzipSource60.crc = cRC32_61;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater64 = null;
        gzipSource63.inflater = inflater64;
        int int66 = gzipSource63.section;
        gzipSource63.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource63);
        java.util.zip.Inflater inflater70 = gzipSource69.inflater;
        gzipSource60.inflater = inflater70;
        gzipSource52.inflater = inflater70;
        gzipSource51.inflater = inflater70;
        gzipSource50.inflater = inflater70;
        gzipSource8.inflater = inflater70;
        java.util.zip.Inflater inflater76 = gzipSource8.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource77 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater78 = null;
        gzipSource77.inflater = inflater78;
        int int80 = gzipSource77.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource81 = gzipSource77.inflaterSource;
        gzipSource77.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer84 = gzipSource77.buffer;
        gzipSource8.buffer = okBuffer84;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer86 = gzipSource8.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer86, 1L, (long) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater48);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater76);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer86);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = '#';
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource6.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource(source9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source9);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        int int9 = gzipSource6.section;
        gzipSource6.section = (byte) -1;
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource6.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource14.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        gzipSource17.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource17);
        java.util.zip.Inflater inflater24 = gzipSource23.inflater;
        gzipSource14.inflater = inflater24;
        gzipSource6.inflater = inflater24;
        gzipSource0.source = gzipSource6;
        com.squareup.okhttp.internal.bytes.Source source28 = gzipSource6.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer29 = gzipSource6.buffer;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer29);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = null;
        gzipSource7.inflaterSource = inflaterSource11;
        com.squareup.okhttp.internal.bytes.Source source13 = gzipSource7.source;
        java.util.zip.CRC32 cRC32_14 = gzipSource7.crc;
        gzipSource0.crc = cRC32_14;
        com.squareup.okhttp.internal.bytes.Deadline deadline16 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_14);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = null;
        gzipSource0.inflaterSource = inflaterSource32;
        java.util.zip.CRC32 cRC32_34 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        gzipSource35.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline42 = null;
        gzipSource35.require((int) (byte) -1, deadline42);
        gzipSource35.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source46 = gzipSource35.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        gzipSource47.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource47);
        java.util.zip.Inflater inflater54 = gzipSource53.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource55);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        int int61 = gzipSource58.section;
        gzipSource58.section = (byte) -1;
        java.util.zip.CRC32 cRC32_64 = null;
        gzipSource58.crc = cRC32_64;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_67 = null;
        gzipSource66.crc = cRC32_67;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater70 = null;
        gzipSource69.inflater = inflater70;
        int int72 = gzipSource69.section;
        gzipSource69.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource69);
        java.util.zip.Inflater inflater76 = gzipSource75.inflater;
        gzipSource66.inflater = inflater76;
        gzipSource58.inflater = inflater76;
        gzipSource57.inflater = inflater76;
        gzipSource56.inflater = inflater76;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource81 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource56);
        gzipSource35.source = gzipSource81;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource83 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource35);
        gzipSource0.source = gzipSource83;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource85 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater86 = null;
        gzipSource85.inflater = inflater86;
        int int88 = gzipSource85.section;
        gzipSource85.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource91 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource85);
        java.util.zip.Inflater inflater92 = gzipSource91.inflater;
        gzipSource91.section = (byte) -1;
        java.util.zip.Inflater inflater95 = gzipSource91.inflater;
        com.squareup.okhttp.internal.bytes.Source source96 = gzipSource91.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer97 = gzipSource91.buffer;
        java.util.zip.CRC32 cRC32_98 = gzipSource91.crc;
        gzipSource0.crc = cRC32_98;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater54);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater76);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_98);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        java.util.zip.Inflater inflater14 = gzipSource9.inflater;
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource9.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource17.inflaterSource;
        gzipSource17.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource17.inflater = inflater31;
        gzipSource9.inflater = inflater31;
        gzipSource0.source = gzipSource9;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource35.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_41 = null;
        gzipSource40.crc = cRC32_41;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource40.inflaterSource;
        java.util.zip.CRC32 cRC32_44 = gzipSource40.crc;
        java.util.zip.Inflater inflater45 = gzipSource40.inflater;
        gzipSource40.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source50 = gzipSource40.source;
        gzipSource35.source = source50;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource35.inflaterSource;
        int int53 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource54.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer59 = null;
        gzipSource54.buffer = okBuffer59;
        int int61 = gzipSource54.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource62 = gzipSource54.inflaterSource;
        gzipSource35.source = gzipSource54;
        java.util.zip.Inflater inflater64 = gzipSource54.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater66 = null;
        gzipSource65.inflater = inflater66;
        int int68 = gzipSource65.section;
        gzipSource65.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource65);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource72 = null;
        gzipSource65.inflaterSource = inflaterSource72;
        java.util.zip.CRC32 cRC32_74 = gzipSource65.crc;
        gzipSource54.crc = cRC32_74;
        gzipSource0.crc = cRC32_74;
        com.squareup.okhttp.internal.bytes.Source source77 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_78 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource79 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater80 = null;
        gzipSource79.inflater = inflater80;
        int int82 = gzipSource79.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource83 = gzipSource79.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource84 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_85 = null;
        gzipSource84.crc = cRC32_85;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource87 = gzipSource84.inflaterSource;
        java.util.zip.CRC32 cRC32_88 = gzipSource84.crc;
        java.util.zip.Inflater inflater89 = gzipSource84.inflater;
        gzipSource84.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source94 = gzipSource84.source;
        gzipSource79.source = source94;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource96 = gzipSource79.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource97 = gzipSource79.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer98 = gzipSource79.buffer;
        gzipSource0.buffer = okBuffer98;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource52);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater64);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_78);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer98);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        gzipSource0.section = 0;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        int int9 = gzipSource6.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource6.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = null;
        gzipSource6.buffer = okBuffer11;
        int int13 = gzipSource6.section;
        com.squareup.okhttp.internal.bytes.Source source14 = null;
        gzipSource6.source = source14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        java.util.zip.CRC32 cRC32_17 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource18.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer23 = null;
        gzipSource18.buffer = okBuffer23;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = null;
        gzipSource18.inflaterSource = inflaterSource27;
        com.squareup.okhttp.internal.bytes.Source source29 = gzipSource18.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer30 = null;
        gzipSource18.buffer = okBuffer30;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_34 = null;
        gzipSource33.crc = cRC32_34;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater37 = null;
        gzipSource36.inflater = inflater37;
        int int39 = gzipSource36.section;
        gzipSource36.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource36);
        java.util.zip.Inflater inflater43 = gzipSource42.inflater;
        gzipSource33.inflater = inflater43;
        gzipSource32.inflater = inflater43;
        gzipSource18.inflater = inflater43;
        gzipSource6.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater49 = null;
        gzipSource48.inflater = inflater49;
        int int51 = gzipSource48.section;
        gzipSource48.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource48);
        java.util.zip.Inflater inflater55 = gzipSource54.inflater;
        gzipSource18.inflater = inflater55;
        gzipSource5.inflater = inflater55;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater43);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater55);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource15.inflaterSource;
        gzipSource15.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline23 = null;
        gzipSource15.require((int) (short) -1, deadline23);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        gzipSource25.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource25);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = null;
        gzipSource25.inflaterSource = inflaterSource32;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource25.inflaterSource;
        gzipSource15.source = gzipSource25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource25);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = null;
        gzipSource25.inflaterSource = inflaterSource37;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer39 = gzipSource25.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource25.buffer;
        gzipSource0.buffer = okBuffer40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer40);
        com.squareup.okhttp.internal.bytes.Deadline deadline43 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource42.consumeTrailer(deadline43);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        int int5 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        int int7 = gzipSource0.section;
        int int8 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer9 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer9);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer7 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        java.util.zip.CRC32 cRC32_12 = gzipSource8.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource13.inflaterSource;
        gzipSource13.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        java.util.zip.Inflater inflater27 = gzipSource26.inflater;
        gzipSource13.inflater = inflater27;
        gzipSource8.inflater = inflater27;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source31 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        java.util.zip.CRC32 cRC32_36 = gzipSource35.crc;
        gzipSource8.crc = cRC32_36;
        gzipSource0.crc = cRC32_36;
        java.util.zip.CRC32 cRC32_39 = gzipSource0.crc;
        java.lang.Class<?> wildcardClass40 = cRC32_39.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer7 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.Inflater inflater15 = gzipSource14.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource14.source;
        gzipSource0.source = gzipSource14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource19.inflaterSource;
        java.util.zip.CRC32 cRC32_23 = gzipSource19.crc;
        java.util.zip.Inflater inflater24 = gzipSource19.inflater;
        gzipSource19.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source29 = gzipSource19.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = gzipSource30.inflaterSource;
        gzipSource19.source = gzipSource30;
        com.squareup.okhttp.internal.bytes.Source source38 = gzipSource19.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater40 = null;
        gzipSource39.inflater = inflater40;
        int int42 = gzipSource39.section;
        gzipSource39.section = (byte) -1;
        java.util.zip.CRC32 cRC32_45 = null;
        gzipSource39.crc = cRC32_45;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_48 = null;
        gzipSource47.crc = cRC32_48;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater51 = null;
        gzipSource50.inflater = inflater51;
        int int53 = gzipSource50.section;
        gzipSource50.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource50);
        java.util.zip.Inflater inflater57 = gzipSource56.inflater;
        gzipSource47.inflater = inflater57;
        gzipSource39.inflater = inflater57;
        gzipSource19.inflater = inflater57;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater62 = null;
        gzipSource61.inflater = inflater62;
        int int64 = gzipSource61.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource65 = gzipSource61.inflaterSource;
        gzipSource61.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline69 = null;
        gzipSource61.require((int) (short) -1, deadline69);
        com.squareup.okhttp.internal.bytes.Source source71 = gzipSource61.source;
        int int72 = gzipSource61.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer73 = null;
        gzipSource61.buffer = okBuffer73;
        gzipSource19.source = okBuffer73;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer76 = gzipSource19.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource14.updateCrc(okBuffer76, (long) (short) 0, 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater57);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer76);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        int int5 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        int int9 = gzipSource6.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource6.inflaterSource;
        gzipSource6.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Source source13 = gzipSource6.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        gzipSource14.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        java.util.zip.Inflater inflater21 = gzipSource20.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource22.inflaterSource;
        gzipSource6.inflaterSource = inflaterSource23;
        gzipSource0.source = gzipSource6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = gzipSource6.buffer;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer26);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource3.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource3.buffer = okBuffer8;
        gzipSource3.section = (byte) -1;
        java.util.zip.Inflater inflater12 = gzipSource3.inflater;
        java.util.zip.CRC32 cRC32_13 = gzipSource3.crc;
        gzipSource0.crc = cRC32_13;
        java.lang.Class<?> wildcardClass15 = cRC32_13.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_14 = null;
        gzipSource13.crc = cRC32_14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        gzipSource16.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        java.util.zip.Inflater inflater23 = gzipSource22.inflater;
        gzipSource13.inflater = inflater23;
        gzipSource12.inflater = inflater23;
        gzipSource0.inflater = inflater23;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource27.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = null;
        gzipSource27.buffer = okBuffer32;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = null;
        gzipSource27.inflaterSource = inflaterSource36;
        com.squareup.okhttp.internal.bytes.Source source38 = gzipSource27.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer39 = null;
        gzipSource27.buffer = okBuffer39;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater46 = null;
        gzipSource45.inflater = inflater46;
        int int48 = gzipSource45.section;
        gzipSource45.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource45);
        java.util.zip.Inflater inflater52 = gzipSource51.inflater;
        gzipSource42.inflater = inflater52;
        gzipSource41.inflater = inflater52;
        gzipSource27.inflater = inflater52;
        gzipSource0.inflater = inflater52;
        gzipSource0.section = (-1);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer59 = gzipSource0.buffer;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer59);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.Inflater inflater14 = gzipSource13.inflater;
        gzipSource0.inflater = inflater14;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource18.inflater = inflater28;
        gzipSource17.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", (int) (short) 0, (int) (byte) 3);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000003 != expected 0x000000");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = null;
        gzipSource0.inflaterSource = inflaterSource11;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = source5.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer17 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource18.inflaterSource;
        int int22 = gzipSource18.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer23 = gzipSource18.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer23, (long) (short) -1, (long) 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer23);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_6);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource33.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_39 = null;
        gzipSource38.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource38.inflaterSource;
        java.util.zip.CRC32 cRC32_42 = gzipSource38.crc;
        java.util.zip.Inflater inflater43 = gzipSource38.inflater;
        gzipSource38.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source48 = gzipSource38.source;
        gzipSource33.source = source48;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource50 = gzipSource33.inflaterSource;
        int int51 = gzipSource33.section;
        gzipSource0.source = gzipSource33;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = gzipSource53.buffer;
        gzipSource0.buffer = okBuffer60;
        gzipSource0.section = (short) 0;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater65 = null;
        gzipSource64.inflater = inflater65;
        int int67 = gzipSource64.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource68 = gzipSource64.inflaterSource;
        gzipSource64.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer71 = gzipSource64.buffer;
        gzipSource0.buffer = okBuffer71;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater74 = null;
        gzipSource73.inflater = inflater74;
        int int76 = gzipSource73.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource77 = gzipSource73.inflaterSource;
        gzipSource73.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource73.buffer;
        gzipSource0.source = okBuffer80;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer60);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer71);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource3.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource3.buffer = okBuffer8;
        gzipSource3.section = (byte) -1;
        java.util.zip.Inflater inflater12 = gzipSource3.inflater;
        java.util.zip.CRC32 cRC32_13 = gzipSource3.crc;
        gzipSource0.crc = cRC32_13;
        java.util.zip.CRC32 cRC32_15 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Source source16 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer17 = gzipSource0.buffer;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline19 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer9 = gzipSource0.buffer;
        java.lang.Class<?> wildcardClass10 = okBuffer9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        gzipSource0.require((int) (short) -1, deadline10);
        com.squareup.okhttp.internal.bytes.Source source12 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source12);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource9);
        java.util.zip.CRC32 cRC32_11 = gzipSource9.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_11);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_24 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_24);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer30 = null;
        gzipSource19.buffer = okBuffer30;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        java.util.zip.CRC32 cRC32_22 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        gzipSource23.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource23);
        java.util.zip.CRC32 cRC32_30 = null;
        gzipSource23.crc = cRC32_30;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_33 = null;
        gzipSource32.crc = cRC32_33;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource32.inflaterSource;
        java.util.zip.CRC32 cRC32_36 = gzipSource32.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater38 = null;
        gzipSource37.inflater = inflater38;
        int int40 = gzipSource37.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource37.inflaterSource;
        gzipSource37.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        java.util.zip.Inflater inflater51 = gzipSource50.inflater;
        gzipSource37.inflater = inflater51;
        gzipSource32.inflater = inflater51;
        gzipSource23.inflater = inflater51;
        gzipSource6.source = gzipSource23;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer56 = gzipSource23.buffer;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer56);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        java.util.zip.CRC32 cRC32_9 = gzipSource0.crc;
        gzipSource0.section = 100;
        com.squareup.okhttp.internal.bytes.Source source12 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = null;
        gzipSource0.inflaterSource = inflaterSource11;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource13.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource18.inflaterSource;
        java.util.zip.CRC32 cRC32_22 = gzipSource18.crc;
        java.util.zip.Inflater inflater23 = gzipSource18.inflater;
        gzipSource18.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source28 = gzipSource18.source;
        gzipSource13.source = source28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource13.inflaterSource;
        int int31 = gzipSource13.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        int int35 = gzipSource32.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = gzipSource32.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer37 = null;
        gzipSource32.buffer = okBuffer37;
        int int39 = gzipSource32.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource40 = gzipSource32.inflaterSource;
        gzipSource13.source = gzipSource32;
        java.util.zip.Inflater inflater42 = gzipSource32.inflater;
        int int43 = gzipSource32.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_46 = null;
        gzipSource45.crc = cRC32_46;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource48 = gzipSource45.inflaterSource;
        int int49 = gzipSource45.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer50 = gzipSource45.buffer;
        gzipSource44.buffer = okBuffer50;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer50, (long) (short) 1, (long) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource48);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer50);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.Inflater inflater40 = gzipSource39.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource39);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource41);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        java.util.zip.CRC32 cRC32_50 = null;
        gzipSource44.crc = cRC32_50;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_53 = null;
        gzipSource52.crc = cRC32_53;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        gzipSource55.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource55);
        java.util.zip.Inflater inflater62 = gzipSource61.inflater;
        gzipSource52.inflater = inflater62;
        gzipSource44.inflater = inflater62;
        gzipSource43.inflater = inflater62;
        gzipSource42.inflater = inflater62;
        gzipSource0.inflater = inflater62;
        java.util.zip.Inflater inflater68 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater70 = null;
        gzipSource69.inflater = inflater70;
        int int72 = gzipSource69.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource73 = gzipSource69.inflaterSource;
        gzipSource69.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer76 = gzipSource69.buffer;
        gzipSource0.buffer = okBuffer76;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource78 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater79 = null;
        gzipSource78.inflater = inflater79;
        int int81 = gzipSource78.section;
        gzipSource78.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource84 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource78);
        java.util.zip.Inflater inflater85 = gzipSource84.inflater;
        gzipSource84.section = (byte) -1;
        java.util.zip.Inflater inflater88 = gzipSource84.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource89 = gzipSource84.inflaterSource;
        gzipSource0.source = gzipSource84;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource84.checkEqual("", (int) ' ', (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x00000a != expected 0x000020");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater68);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer76);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource89);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        gzipSource0.section = 3;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        com.squareup.okhttp.internal.bytes.Deadline deadline29 = null;
        gzipSource27.require((-1), deadline29);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        gzipSource31.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource31);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = null;
        gzipSource31.inflaterSource = inflaterSource38;
        gzipSource27.source = inflaterSource38;
        java.util.zip.CRC32 cRC32_41 = gzipSource27.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer42 = gzipSource27.buffer;
        gzipSource0.updateCrc(okBuffer42, (long) (short) 100, (long) (short) -1);
        java.lang.Class<?> wildcardClass46 = okBuffer42.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = null;
        gzipSource30.inflaterSource = inflaterSource37;
        java.util.zip.CRC32 cRC32_39 = gzipSource30.crc;
        gzipSource19.crc = cRC32_39;
        java.util.zip.Inflater inflater41 = gzipSource19.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        java.util.zip.Inflater inflater49 = gzipSource48.inflater;
        gzipSource48.section = (byte) -1;
        java.util.zip.Inflater inflater52 = gzipSource48.inflater;
        gzipSource19.inflater = inflater52;
        java.util.zip.CRC32 cRC32_54 = gzipSource19.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_54);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        java.util.zip.Inflater inflater14 = gzipSource9.inflater;
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource9.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource17.inflaterSource;
        gzipSource17.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource17.inflater = inflater31;
        gzipSource9.inflater = inflater31;
        gzipSource0.source = gzipSource9;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource35.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_41 = null;
        gzipSource40.crc = cRC32_41;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource40.inflaterSource;
        java.util.zip.CRC32 cRC32_44 = gzipSource40.crc;
        java.util.zip.Inflater inflater45 = gzipSource40.inflater;
        gzipSource40.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source50 = gzipSource40.source;
        gzipSource35.source = source50;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource35.inflaterSource;
        int int53 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource54.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer59 = null;
        gzipSource54.buffer = okBuffer59;
        int int61 = gzipSource54.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource62 = gzipSource54.inflaterSource;
        gzipSource35.source = gzipSource54;
        java.util.zip.Inflater inflater64 = gzipSource54.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater66 = null;
        gzipSource65.inflater = inflater66;
        int int68 = gzipSource65.section;
        gzipSource65.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource65);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource72 = null;
        gzipSource65.inflaterSource = inflaterSource72;
        java.util.zip.CRC32 cRC32_74 = gzipSource65.crc;
        gzipSource54.crc = cRC32_74;
        gzipSource0.crc = cRC32_74;
        com.squareup.okhttp.internal.bytes.Source source77 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource78 = new com.squareup.okhttp.internal.bytes.GzipSource(source77);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource52);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater64);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source77);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = source7.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource2.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource5 = gzipSource2.inflaterSource;
        java.util.zip.CRC32 cRC32_6 = gzipSource2.crc;
        java.util.zip.Inflater inflater7 = gzipSource2.inflater;
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource2.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer10 = gzipSource2.buffer;
        gzipSource0.updateCrc(okBuffer10, (long) '4', (long) (-1));
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer10);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        gzipSource0.section = 0;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline41 = null;
        gzipSource34.require((int) (byte) -1, deadline41);
        gzipSource34.section = (byte) -1;
        gzipSource34.section = (byte) 0;
        java.util.zip.CRC32 cRC32_47 = gzipSource34.crc;
        gzipSource0.source = gzipSource34;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_50 = null;
        gzipSource49.crc = cRC32_50;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource49.inflaterSource;
        java.util.zip.CRC32 cRC32_53 = gzipSource49.crc;
        java.util.zip.CRC32 cRC32_54 = null;
        gzipSource49.crc = cRC32_54;
        int int56 = gzipSource49.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater58 = null;
        gzipSource57.inflater = inflater58;
        int int60 = gzipSource57.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource61 = gzipSource57.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer62 = null;
        gzipSource57.buffer = okBuffer62;
        gzipSource57.section = (byte) -1;
        gzipSource57.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource57);
        gzipSource57.section = (byte) 1;
        java.util.zip.CRC32 cRC32_71 = gzipSource57.crc;
        gzipSource49.source = gzipSource57;
        gzipSource34.source = gzipSource49;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_53);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_71);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source12 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer13 = gzipSource0.buffer;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer13);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater3 = null;
        gzipSource2.inflater = inflater3;
        int int5 = gzipSource2.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource2.inflaterSource;
        gzipSource2.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        gzipSource2.require((int) (short) -1, deadline10);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = null;
        gzipSource12.inflaterSource = inflaterSource19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource12.inflaterSource;
        gzipSource2.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = null;
        gzipSource12.inflaterSource = inflaterSource24;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = gzipSource12.buffer;
        gzipSource0.buffer = okBuffer26;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer28 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline30 = null;
        gzipSource0.require((int) (short) 0, deadline30);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource0.buffer;
        java.util.zip.Inflater inflater33 = gzipSource0.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater33);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        gzipSource0.section = (short) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long12 = gzipSource0.seek((byte) 2, deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer6 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        long long9 = gzipSource0.read(okBuffer6, (long) 100, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        java.util.zip.CRC32 cRC32_14 = gzipSource10.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource15.inflaterSource;
        gzipSource15.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource15.inflater = inflater29;
        gzipSource10.inflater = inflater29;
        gzipSource0.inflater = inflater29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource33.inflaterSource;
        java.util.zip.Inflater inflater38 = gzipSource33.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource33.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource33.buffer;
        gzipSource0.source = gzipSource33;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer42 = gzipSource33.buffer;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer42);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer6 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        long long9 = gzipSource0.read(okBuffer6, (long) 100, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        java.util.zip.CRC32 cRC32_14 = gzipSource10.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource15.inflaterSource;
        gzipSource15.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource15.inflater = inflater29;
        gzipSource10.inflater = inflater29;
        gzipSource0.inflater = inflater29;
        com.squareup.okhttp.internal.bytes.Deadline deadline33 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_35 = null;
        gzipSource34.crc = cRC32_35;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater38 = null;
        gzipSource37.inflater = inflater38;
        int int40 = gzipSource37.section;
        gzipSource37.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource37);
        java.util.zip.Inflater inflater44 = gzipSource43.inflater;
        gzipSource34.inflater = inflater44;
        gzipSource33.inflater = inflater44;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer47 = gzipSource33.buffer;
        gzipSource0.buffer = okBuffer47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer47);
        int int50 = gzipSource49.section;
        gzipSource49.section = (byte) 3;
        com.squareup.okhttp.internal.bytes.Deadline deadline53 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource49.consumeTrailer(deadline53);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        int int8 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline9 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long10 = gzipSource6.seek((byte) 1, deadline9);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_7);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = gzipSource6.crc;
        java.util.zip.CRC32 cRC32_8 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline9 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.close(deadline9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_8);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline14 = null;
        // The following exception was thrown during execution in test generation
{ // flaky:         try {
// flaky:             gzipSource13.consumeHeader(deadline14);
// flaky:             org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
// flaky:         } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer22 = gzipSource6.buffer;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer22);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.Source source26 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource27.inflaterSource;
        java.util.zip.Inflater inflater31 = gzipSource27.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource27.buffer;
        gzipSource7.buffer = okBuffer32;
        gzipSource0.source = okBuffer32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource35.inflaterSource;
        int int39 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.Source source40 = gzipSource35.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        gzipSource35.source = gzipSource41;
        int int45 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.Source source46 = gzipSource35.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater51 = null;
        gzipSource50.inflater = inflater51;
        int int53 = gzipSource50.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource54 = gzipSource50.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer55 = null;
        gzipSource50.buffer = okBuffer55;
        gzipSource50.section = (byte) -1;
        java.util.zip.Inflater inflater59 = gzipSource50.inflater;
        java.util.zip.CRC32 cRC32_60 = gzipSource50.crc;
        gzipSource47.crc = cRC32_60;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int63 = gzipSource62.section;
        java.util.zip.CRC32 cRC32_64 = gzipSource62.crc;
        gzipSource47.crc = cRC32_64;
        gzipSource35.crc = cRC32_64;
        gzipSource0.crc = cRC32_64;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_60);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_64);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer9 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer10 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        gzipSource0.require((int) (byte) 0, deadline12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer10);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer6 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        long long9 = gzipSource0.read(okBuffer6, (long) 100, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        java.util.zip.Inflater inflater17 = gzipSource16.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource18.inflaterSource;
        gzipSource0.inflaterSource = inflaterSource19;
        java.util.zip.Inflater inflater21 = gzipSource0.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater21);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        gzipSource0.require((int) (byte) -1, deadline7);
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 0;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        gzipSource13.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource13);
        com.squareup.okhttp.internal.bytes.Source source20 = gzipSource13.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        com.squareup.okhttp.internal.bytes.Source source28 = gzipSource21.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource29 = gzipSource21.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer30 = gzipSource21.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline32 = null;
        long long33 = gzipSource13.read(okBuffer30, 1L, deadline32);
        com.squareup.okhttp.internal.bytes.Deadline deadline35 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long36 = gzipSource0.read(okBuffer30, (long) '4', deadline35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        int int9 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource10.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource18.inflater = inflater28;
        gzipSource10.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.Deadline deadline32 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        gzipSource6.section = (byte) -1;
        java.util.zip.Inflater inflater10 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        gzipSource17.section = (byte) -1;
        java.util.zip.Inflater inflater21 = gzipSource17.inflater;
        gzipSource6.inflater = inflater21;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.Deadline deadline25 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long26 = gzipSource6.seek((byte) 1, deadline25);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater21);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        int int7 = gzipSource0.section;
        gzipSource0.section = (-1);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = null;
        gzipSource0.inflaterSource = inflaterSource3;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        java.util.zip.Inflater inflater17 = gzipSource16.inflater;
        gzipSource7.inflater = inflater17;
        gzipSource6.inflater = inflater17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource20 = gzipSource6.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline23 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long24 = gzipSource0.read(okBuffer21, 10L, deadline23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        gzipSource0.source = gzipSource6;
        int int10 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource15.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer20 = null;
        gzipSource15.buffer = okBuffer20;
        gzipSource15.section = (byte) -1;
        java.util.zip.Inflater inflater24 = gzipSource15.inflater;
        java.util.zip.CRC32 cRC32_25 = gzipSource15.crc;
        gzipSource12.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int28 = gzipSource27.section;
        java.util.zip.CRC32 cRC32_29 = gzipSource27.crc;
        gzipSource12.crc = cRC32_29;
        gzipSource0.crc = cRC32_29;
        com.squareup.okhttp.internal.bytes.Deadline deadline33 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long34 = gzipSource0.seek((byte) 1, deadline33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_29);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater3 = null;
        gzipSource2.inflater = inflater3;
        int int5 = gzipSource2.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource2.inflaterSource;
        gzipSource2.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        gzipSource2.require((int) (short) -1, deadline10);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = null;
        gzipSource12.inflaterSource = inflaterSource19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource12.inflaterSource;
        gzipSource2.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = null;
        gzipSource12.inflaterSource = inflaterSource24;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = gzipSource12.buffer;
        gzipSource0.buffer = okBuffer26;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer28 = gzipSource0.buffer;
        java.util.zip.Inflater inflater29 = gzipSource0.inflater;
        java.util.zip.Inflater inflater30 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline31 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater30);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        int int7 = gzipSource0.section;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", 0, 3);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000003 != expected 0x000000");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline13 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require(10, deadline13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_14 = null;
        gzipSource13.crc = cRC32_14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        gzipSource16.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        java.util.zip.Inflater inflater23 = gzipSource22.inflater;
        gzipSource13.inflater = inflater23;
        gzipSource12.inflater = inflater23;
        gzipSource0.inflater = inflater23;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource27.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = null;
        gzipSource27.buffer = okBuffer32;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = null;
        gzipSource27.inflaterSource = inflaterSource36;
        com.squareup.okhttp.internal.bytes.Source source38 = gzipSource27.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer39 = null;
        gzipSource27.buffer = okBuffer39;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater46 = null;
        gzipSource45.inflater = inflater46;
        int int48 = gzipSource45.section;
        gzipSource45.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource45);
        java.util.zip.Inflater inflater52 = gzipSource51.inflater;
        gzipSource42.inflater = inflater52;
        gzipSource41.inflater = inflater52;
        gzipSource27.inflater = inflater52;
        gzipSource0.inflater = inflater52;
        int int57 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline59 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater52);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.CRC32 cRC32_28 = gzipSource27.crc;
        gzipSource0.crc = cRC32_28;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", 100, 0);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000000 != expected 0x000064");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_28);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        int int9 = gzipSource6.section;
        gzipSource6.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        java.util.zip.Inflater inflater13 = gzipSource12.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource12.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        gzipSource0.inflaterSource = inflaterSource16;
        java.util.zip.CRC32 cRC32_18 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_25 = null;
        gzipSource24.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource24.inflaterSource;
        java.util.zip.CRC32 cRC32_28 = gzipSource24.crc;
        java.util.zip.Inflater inflater29 = gzipSource24.inflater;
        gzipSource24.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source34 = gzipSource24.source;
        gzipSource19.source = source34;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = gzipSource19.inflaterSource;
        int int37 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = gzipSource38.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer43 = null;
        gzipSource38.buffer = okBuffer43;
        int int45 = gzipSource38.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource46 = gzipSource38.inflaterSource;
        gzipSource19.source = gzipSource38;
        java.util.zip.Inflater inflater48 = gzipSource38.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater50 = null;
        gzipSource49.inflater = inflater50;
        int int52 = gzipSource49.section;
        gzipSource49.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource49);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = null;
        gzipSource49.inflaterSource = inflaterSource56;
        java.util.zip.CRC32 cRC32_58 = gzipSource49.crc;
        gzipSource38.crc = cRC32_58;
        gzipSource0.crc = cRC32_58;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater48);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_58);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource0.crc = cRC32_5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource11.inflaterSource;
        gzipSource0.source = gzipSource11;
        com.squareup.okhttp.internal.bytes.Source source19 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_21 = null;
        gzipSource20.crc = cRC32_21;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource20.inflaterSource;
        java.util.zip.Inflater inflater24 = gzipSource20.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer25 = gzipSource20.buffer;
        gzipSource0.buffer = okBuffer25;
        com.squareup.okhttp.internal.bytes.Deadline deadline28 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long29 = gzipSource0.seek((byte) 0, deadline28);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer25);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource0.crc = cRC32_5;
        gzipSource0.section = (-1);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater10 = null;
        gzipSource9.inflater = inflater10;
        int int12 = gzipSource9.section;
        gzipSource9.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource9);
        com.squareup.okhttp.internal.bytes.Deadline deadline17 = null;
        gzipSource15.require((-1), deadline17);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        gzipSource19.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = null;
        gzipSource19.inflaterSource = inflaterSource26;
        gzipSource15.source = inflaterSource26;
        java.util.zip.CRC32 cRC32_29 = gzipSource15.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer30 = gzipSource15.buffer;
        int int31 = gzipSource15.section;
        java.util.zip.CRC32 cRC32_32 = gzipSource15.crc;
        com.squareup.okhttp.internal.bytes.Source source33 = gzipSource15.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        com.squareup.okhttp.internal.bytes.Deadline deadline42 = null;
        gzipSource40.require((-1), deadline42);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = null;
        gzipSource44.inflaterSource = inflaterSource51;
        gzipSource40.source = inflaterSource51;
        java.util.zip.CRC32 cRC32_54 = gzipSource40.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer55 = gzipSource40.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = gzipSource40.inflaterSource;
        gzipSource15.inflaterSource = inflaterSource56;
        gzipSource0.inflaterSource = inflaterSource56;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater60 = null;
        gzipSource59.inflater = inflater60;
        int int62 = gzipSource59.section;
        gzipSource59.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource59);
        com.squareup.okhttp.internal.bytes.Deadline deadline67 = null;
        gzipSource65.require((-1), deadline67);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater70 = null;
        gzipSource69.inflater = inflater70;
        int int72 = gzipSource69.section;
        gzipSource69.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource69);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource76 = null;
        gzipSource69.inflaterSource = inflaterSource76;
        gzipSource65.source = inflaterSource76;
        java.util.zip.CRC32 cRC32_79 = gzipSource65.crc;
        gzipSource65.checkEqual("", (int) (short) 10, (int) (short) 10);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer84 = gzipSource65.buffer;
        gzipSource0.buffer = okBuffer84;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource56);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer84);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        java.util.zip.CRC32 cRC32_30 = gzipSource19.crc;
        com.squareup.okhttp.internal.bytes.Source source31 = gzipSource19.source;
        int int32 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_34 = null;
        gzipSource33.crc = cRC32_34;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = gzipSource33.inflaterSource;
        java.util.zip.CRC32 cRC32_37 = gzipSource33.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer38 = null;
        gzipSource33.buffer = okBuffer38;
        gzipSource33.section = ' ';
        gzipSource19.source = gzipSource33;
        com.squareup.okhttp.internal.bytes.Source source43 = gzipSource33.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline45 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long46 = gzipSource33.seek((byte) 10, deadline45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source43);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater4 = gzipSource0.inflater;
        int int5 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer6 = gzipSource0.buffer;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer6);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_4 = null;
        gzipSource3.crc = cRC32_4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource3.inflaterSource;
        java.util.zip.CRC32 cRC32_7 = gzipSource3.crc;
        java.util.zip.Inflater inflater8 = gzipSource3.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource10.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource18.inflater = inflater28;
        gzipSource10.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_33 = null;
        gzipSource32.crc = cRC32_33;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource32.inflaterSource;
        java.util.zip.CRC32 cRC32_36 = gzipSource32.crc;
        java.util.zip.CRC32 cRC32_37 = null;
        gzipSource32.crc = cRC32_37;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource39.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = gzipSource39.inflaterSource;
        java.util.zip.CRC32 cRC32_43 = gzipSource39.crc;
        java.util.zip.Inflater inflater44 = gzipSource39.inflater;
        gzipSource39.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source49 = gzipSource39.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater51 = null;
        gzipSource50.inflater = inflater51;
        int int53 = gzipSource50.section;
        gzipSource50.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = gzipSource50.inflaterSource;
        gzipSource39.source = gzipSource50;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_60 = null;
        gzipSource59.crc = cRC32_60;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater63 = null;
        gzipSource62.inflater = inflater63;
        int int65 = gzipSource62.section;
        gzipSource62.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource62);
        java.util.zip.Inflater inflater69 = gzipSource68.inflater;
        gzipSource59.inflater = inflater69;
        gzipSource58.inflater = inflater69;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer72 = gzipSource58.buffer;
        gzipSource39.updateCrc(okBuffer72, (long) '#', (long) (-1));
        gzipSource32.updateCrc(okBuffer72, (long) 0, 0L);
        gzipSource9.buffer = okBuffer72;
        gzipSource3.buffer = okBuffer72;
        gzipSource0.source = gzipSource3;
        int int82 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source49);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource56);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer72);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater2 = null;
        gzipSource1.inflater = inflater2;
        int int4 = gzipSource1.section;
        gzipSource1.section = (byte) -1;
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource1.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource1.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource23.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        java.util.zip.Inflater inflater35 = gzipSource30.inflater;
        gzipSource30.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source40 = gzipSource30.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource41.inflaterSource;
        gzipSource30.source = gzipSource41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        java.util.zip.Inflater inflater60 = gzipSource59.inflater;
        gzipSource50.inflater = inflater60;
        gzipSource49.inflater = inflater60;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer63 = gzipSource49.buffer;
        gzipSource30.updateCrc(okBuffer63, (long) '#', (long) (-1));
        gzipSource23.updateCrc(okBuffer63, (long) 0, 0L);
        gzipSource0.buffer = okBuffer63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_72 = null;
        gzipSource71.crc = cRC32_72;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource74 = gzipSource71.inflaterSource;
        java.util.zip.CRC32 cRC32_75 = gzipSource71.crc;
        java.util.zip.Inflater inflater76 = gzipSource71.inflater;
        java.util.zip.CRC32 cRC32_77 = null;
        gzipSource71.crc = cRC32_77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer79 = null;
        gzipSource71.buffer = okBuffer79;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer81 = null;
        gzipSource71.buffer = okBuffer81;
        gzipSource0.source = gzipSource71;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource84 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer85 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline86 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer85);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource9);
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource9.consumeTrailer(deadline11);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = null;
        gzipSource0.buffer = okBuffer12;
        int int14 = gzipSource0.section;
        gzipSource0.section = 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline17 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        java.util.zip.Inflater inflater8 = gzipSource6.inflater;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater8);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource2.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource5 = gzipSource2.inflaterSource;
        java.util.zip.CRC32 cRC32_6 = gzipSource2.crc;
        java.util.zip.Inflater inflater7 = gzipSource2.inflater;
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource2.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer10 = gzipSource2.buffer;
        gzipSource0.updateCrc(okBuffer10, (long) '4', (long) (-1));
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", (int) '#', (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000001 != expected 0x000023");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer10);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource0.crc = cRC32_5;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        gzipSource27.inflater = inflater37;
        gzipSource26.inflater = inflater37;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource26.buffer;
        gzipSource7.updateCrc(okBuffer40, (long) '#', (long) (-1));
        gzipSource0.updateCrc(okBuffer40, (long) 0, 0L);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer40);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_49 = null;
        gzipSource48.crc = cRC32_49;
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource48.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource53 = gzipSource48.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource48);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_56 = null;
        gzipSource55.crc = cRC32_56;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        int int61 = gzipSource58.section;
        gzipSource58.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource58);
        java.util.zip.Inflater inflater65 = gzipSource64.inflater;
        gzipSource55.inflater = inflater65;
        java.util.zip.CRC32 cRC32_67 = gzipSource55.crc;
        com.squareup.okhttp.internal.bytes.Source source68 = gzipSource55.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_71 = null;
        gzipSource70.crc = cRC32_71;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater74 = null;
        gzipSource73.inflater = inflater74;
        int int76 = gzipSource73.section;
        gzipSource73.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource79 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource73);
        java.util.zip.Inflater inflater80 = gzipSource79.inflater;
        gzipSource70.inflater = inflater80;
        gzipSource69.inflater = inflater80;
        gzipSource55.inflater = inflater80;
        gzipSource48.inflater = inflater80;
        gzipSource47.inflater = inflater80;
        com.squareup.okhttp.internal.bytes.Source source86 = gzipSource47.source;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource53);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source68);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source86);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        java.util.zip.Inflater inflater10 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource11.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource16.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource16.inflaterSource;
        java.util.zip.CRC32 cRC32_20 = gzipSource16.crc;
        java.util.zip.Inflater inflater21 = gzipSource16.inflater;
        gzipSource16.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source26 = gzipSource16.source;
        gzipSource11.source = source26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource11.inflaterSource;
        int int29 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource30.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer35 = null;
        gzipSource30.buffer = okBuffer35;
        int int37 = gzipSource30.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource30.inflaterSource;
        gzipSource11.source = gzipSource30;
        java.util.zip.Inflater inflater40 = gzipSource30.inflater;
        java.util.zip.CRC32 cRC32_41 = gzipSource30.crc;
        com.squareup.okhttp.internal.bytes.Source source42 = gzipSource30.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_44 = null;
        gzipSource43.crc = cRC32_44;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource46 = gzipSource43.inflaterSource;
        java.util.zip.CRC32 cRC32_47 = gzipSource43.crc;
        java.util.zip.Inflater inflater48 = gzipSource43.inflater;
        gzipSource43.checkEqual("", 100, 100);
        java.util.zip.Inflater inflater53 = gzipSource43.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource43);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource55 = gzipSource54.inflaterSource;
        gzipSource30.inflaterSource = inflaterSource55;
        gzipSource0.inflaterSource = inflaterSource55;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource55);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_11 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.CRC32 cRC32_16 = gzipSource15.crc;
        gzipSource0.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource18.inflaterSource;
        java.util.zip.CRC32 cRC32_22 = gzipSource18.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        gzipSource23.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource23);
        java.util.zip.Inflater inflater30 = gzipSource29.inflater;
        gzipSource29.section = (byte) -1;
        java.util.zip.Inflater inflater33 = gzipSource29.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        java.util.zip.Inflater inflater41 = gzipSource40.inflater;
        gzipSource40.section = (byte) -1;
        java.util.zip.Inflater inflater44 = gzipSource40.inflater;
        gzipSource29.inflater = inflater44;
        gzipSource18.inflater = inflater44;
        gzipSource0.inflater = inflater44;
        com.squareup.okhttp.internal.bytes.Deadline deadline49 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long50 = gzipSource0.seek((byte) 10, deadline49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater44);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        java.util.zip.CRC32 cRC32_10 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource11.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource11.inflaterSource;
        java.util.zip.CRC32 cRC32_15 = gzipSource11.crc;
        java.util.zip.Inflater inflater16 = gzipSource11.inflater;
        gzipSource11.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source21 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource22.inflaterSource;
        gzipSource11.source = gzipSource22;
        com.squareup.okhttp.internal.bytes.Source source30 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource31.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource31.inflaterSource;
        java.util.zip.Inflater inflater35 = gzipSource31.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer36 = gzipSource31.buffer;
        gzipSource11.buffer = okBuffer36;
        gzipSource6.source = okBuffer36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater40 = null;
        gzipSource39.inflater = inflater40;
        int int42 = gzipSource39.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource39.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer44 = null;
        gzipSource39.buffer = okBuffer44;
        gzipSource39.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource48 = null;
        gzipSource39.inflaterSource = inflaterSource48;
        com.squareup.okhttp.internal.bytes.Source source50 = gzipSource39.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer51 = null;
        gzipSource39.buffer = okBuffer51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_55 = null;
        gzipSource54.crc = cRC32_55;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater58 = null;
        gzipSource57.inflater = inflater58;
        int int60 = gzipSource57.section;
        gzipSource57.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource57);
        java.util.zip.Inflater inflater64 = gzipSource63.inflater;
        gzipSource54.inflater = inflater64;
        gzipSource53.inflater = inflater64;
        gzipSource39.inflater = inflater64;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_70 = null;
        gzipSource69.crc = cRC32_70;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater73 = null;
        gzipSource72.inflater = inflater73;
        int int75 = gzipSource72.section;
        gzipSource72.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource78 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource72);
        java.util.zip.Inflater inflater79 = gzipSource78.inflater;
        gzipSource69.inflater = inflater79;
        gzipSource68.inflater = inflater79;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource82 = gzipSource68.inflaterSource;
        java.util.zip.Inflater inflater83 = gzipSource68.inflater;
        gzipSource39.inflater = inflater83;
        java.util.zip.Inflater inflater85 = gzipSource39.inflater;
        gzipSource6.inflater = inflater85;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource87 = gzipSource6.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater64);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource87);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.CRC32 cRC32_10 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        com.squareup.okhttp.internal.bytes.Deadline deadline19 = null;
        gzipSource17.require((-1), deadline19);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = null;
        gzipSource21.inflaterSource = inflaterSource28;
        gzipSource17.source = inflaterSource28;
        java.util.zip.CRC32 cRC32_31 = gzipSource17.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource17.buffer;
        int int33 = gzipSource17.section;
        java.util.zip.CRC32 cRC32_34 = gzipSource17.crc;
        com.squareup.okhttp.internal.bytes.Source source35 = gzipSource17.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater37 = null;
        gzipSource36.inflater = inflater37;
        int int39 = gzipSource36.section;
        gzipSource36.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource36);
        com.squareup.okhttp.internal.bytes.Deadline deadline44 = null;
        gzipSource42.require((-1), deadline44);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource53 = null;
        gzipSource46.inflaterSource = inflaterSource53;
        gzipSource42.source = inflaterSource53;
        java.util.zip.CRC32 cRC32_56 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer57 = gzipSource42.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource42.inflaterSource;
        gzipSource17.inflaterSource = inflaterSource58;
        gzipSource9.inflaterSource = inflaterSource58;
        java.util.zip.CRC32 cRC32_61 = gzipSource9.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_61);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long8 = gzipSource0.seek((byte) 100, deadline7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_22 = null;
        gzipSource21.crc = cRC32_22;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource21.inflaterSource;
        int int25 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.Source source26 = gzipSource21.source;
        gzipSource21.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer29 = gzipSource21.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer30 = gzipSource21.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer31 = gzipSource21.buffer;
        gzipSource10.buffer = okBuffer31;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer31);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        java.util.zip.CRC32 cRC32_9 = gzipSource8.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        int int14 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource10.source;
        gzipSource10.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer18 = gzipSource10.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource19.inflaterSource;
        java.util.zip.CRC32 cRC32_23 = gzipSource19.crc;
        java.util.zip.Inflater inflater24 = gzipSource19.inflater;
        gzipSource19.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source29 = gzipSource19.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = gzipSource30.inflaterSource;
        gzipSource19.source = gzipSource30;
        gzipSource10.source = gzipSource30;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = null;
        gzipSource30.inflaterSource = inflaterSource39;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer41 = gzipSource30.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline43 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long44 = gzipSource8.read(okBuffer41, (long) 10, deadline43);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer41);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source4 = gzipSource0.source;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource(source4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: source == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source4);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.CRC32 cRC32_28 = gzipSource27.crc;
        gzipSource0.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = gzipSource30.inflaterSource;
        gzipSource30.section = '4';
        gzipSource0.source = gzipSource30;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_42 = null;
        gzipSource41.crc = cRC32_42;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        java.util.zip.Inflater inflater51 = gzipSource50.inflater;
        gzipSource41.inflater = inflater51;
        gzipSource40.inflater = inflater51;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource54 = gzipSource40.inflaterSource;
        java.util.zip.Inflater inflater55 = gzipSource40.inflater;
        gzipSource30.inflater = inflater55;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater55);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource33.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource47.inflaterSource;
        gzipSource47.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        gzipSource54.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource54);
        java.util.zip.Inflater inflater61 = gzipSource60.inflater;
        gzipSource47.inflater = inflater61;
        gzipSource42.inflater = inflater61;
        gzipSource33.inflater = inflater61;
        java.util.zip.CRC32 cRC32_65 = gzipSource33.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_68 = null;
        gzipSource67.crc = cRC32_68;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater71 = null;
        gzipSource70.inflater = inflater71;
        int int73 = gzipSource70.section;
        gzipSource70.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource70);
        java.util.zip.Inflater inflater77 = gzipSource76.inflater;
        gzipSource67.inflater = inflater77;
        gzipSource66.inflater = inflater77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource66.buffer;
        gzipSource33.buffer = okBuffer80;
        gzipSource0.updateCrc(okBuffer80, (long) '#', (long) (short) 0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource85 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline86 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_65);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource85);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        gzipSource0.source = gzipSource6;
        int int10 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource15.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer20 = null;
        gzipSource15.buffer = okBuffer20;
        gzipSource15.section = (byte) -1;
        java.util.zip.Inflater inflater24 = gzipSource15.inflater;
        java.util.zip.CRC32 cRC32_25 = gzipSource15.crc;
        gzipSource12.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int28 = gzipSource27.section;
        java.util.zip.CRC32 cRC32_29 = gzipSource27.crc;
        gzipSource12.crc = cRC32_29;
        gzipSource0.crc = cRC32_29;
        com.squareup.okhttp.internal.bytes.Deadline deadline33 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long34 = gzipSource0.seek((byte) 0, deadline33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_29);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource29 = null;
        gzipSource0.inflaterSource = inflaterSource29;
        com.squareup.okhttp.internal.bytes.Deadline deadline32 = null;
        gzipSource0.require(0, deadline32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource5 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int8 = gzipSource7.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater10 = null;
        gzipSource9.inflater = inflater10;
        int int12 = gzipSource9.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource9.inflaterSource;
        gzipSource9.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline17 = null;
        gzipSource9.require((int) (short) -1, deadline17);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        gzipSource19.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = null;
        gzipSource19.inflaterSource = inflaterSource26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource19.inflaterSource;
        gzipSource9.source = gzipSource19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = null;
        gzipSource19.inflaterSource = inflaterSource31;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer33 = gzipSource19.buffer;
        gzipSource7.buffer = okBuffer33;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer35 = gzipSource7.buffer;
        gzipSource0.updateCrc(okBuffer35, (long) (short) -1, (long) (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer35);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        gzipSource0.section = 'a';
        int int16 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource17.inflaterSource;
        gzipSource17.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline25 = null;
        gzipSource17.require((int) (short) -1, deadline25);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = null;
        gzipSource27.inflaterSource = inflaterSource34;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = gzipSource27.inflaterSource;
        gzipSource17.source = gzipSource27;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = gzipSource38.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer43 = null;
        gzipSource38.buffer = okBuffer43;
        int int45 = gzipSource38.section;
        com.squareup.okhttp.internal.bytes.Source source46 = null;
        gzipSource38.source = source46;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.CRC32 cRC32_49 = gzipSource38.crc;
        gzipSource27.crc = cRC32_49;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer51 = gzipSource27.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline53 = null;
        long long54 = gzipSource0.read(okBuffer51, (long) (short) 0, deadline53);
        com.squareup.okhttp.internal.bytes.Source source55 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 97 + "'", int16 == 97);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source55);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        gzipSource0.section = 3;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource29);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        int int35 = gzipSource32.section;
        gzipSource32.section = (byte) -1;
        java.util.zip.CRC32 cRC32_38 = null;
        gzipSource32.crc = cRC32_38;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_41 = null;
        gzipSource40.crc = cRC32_41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater44 = null;
        gzipSource43.inflater = inflater44;
        int int46 = gzipSource43.section;
        gzipSource43.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource43);
        java.util.zip.Inflater inflater50 = gzipSource49.inflater;
        gzipSource40.inflater = inflater50;
        gzipSource32.inflater = inflater50;
        gzipSource31.inflater = inflater50;
        gzipSource30.inflater = inflater50;
        gzipSource0.inflater = inflater50;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int57 = gzipSource56.section;
        java.util.zip.CRC32 cRC32_58 = gzipSource56.crc;
        gzipSource0.crc = cRC32_58;
        int int60 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater62 = null;
        gzipSource61.inflater = inflater62;
        int int64 = gzipSource61.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource65 = gzipSource61.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer66 = null;
        gzipSource61.buffer = okBuffer66;
        int int68 = gzipSource61.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource69 = gzipSource61.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_71 = null;
        gzipSource70.crc = cRC32_71;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource73 = gzipSource70.inflaterSource;
        java.util.zip.CRC32 cRC32_74 = gzipSource70.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater76 = null;
        gzipSource75.inflater = inflater76;
        int int78 = gzipSource75.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource79 = gzipSource75.inflaterSource;
        gzipSource75.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource82 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater83 = null;
        gzipSource82.inflater = inflater83;
        int int85 = gzipSource82.section;
        gzipSource82.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource88 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource82);
        java.util.zip.Inflater inflater89 = gzipSource88.inflater;
        gzipSource75.inflater = inflater89;
        gzipSource70.inflater = inflater89;
        com.squareup.okhttp.internal.bytes.Source source92 = gzipSource70.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer93 = gzipSource70.buffer;
        gzipSource61.buffer = okBuffer93;
        gzipSource61.section = (short) 10;
        gzipSource0.source = gzipSource61;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 3 + "'", int60 == 3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource65);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_74);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource79);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer93);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.CRC32 cRC32_18 = null;
        gzipSource11.crc = cRC32_18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_21 = null;
        gzipSource20.crc = cRC32_21;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource20.inflaterSource;
        java.util.zip.CRC32 cRC32_24 = gzipSource20.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource29 = gzipSource25.inflaterSource;
        gzipSource25.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        int int35 = gzipSource32.section;
        gzipSource32.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        java.util.zip.Inflater inflater39 = gzipSource38.inflater;
        gzipSource25.inflater = inflater39;
        gzipSource20.inflater = inflater39;
        gzipSource11.inflater = inflater39;
        gzipSource0.inflater = inflater39;
        com.squareup.okhttp.internal.bytes.Deadline deadline44 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater39);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater3 = null;
        gzipSource2.inflater = inflater3;
        int int5 = gzipSource2.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource2.inflaterSource;
        gzipSource2.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        gzipSource2.require((int) (short) -1, deadline10);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = null;
        gzipSource12.inflaterSource = inflaterSource19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource12.inflaterSource;
        gzipSource2.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = null;
        gzipSource12.inflaterSource = inflaterSource24;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = gzipSource12.buffer;
        gzipSource0.buffer = okBuffer26;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer28 = gzipSource0.buffer;
        java.util.zip.Inflater inflater29 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource36);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        java.util.zip.CRC32 cRC32_47 = null;
        gzipSource41.crc = cRC32_47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_50 = null;
        gzipSource49.crc = cRC32_50;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater53 = null;
        gzipSource52.inflater = inflater53;
        int int55 = gzipSource52.section;
        gzipSource52.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource52);
        java.util.zip.Inflater inflater59 = gzipSource58.inflater;
        gzipSource49.inflater = inflater59;
        gzipSource41.inflater = inflater59;
        gzipSource40.inflater = inflater59;
        gzipSource39.inflater = inflater59;
        int int64 = gzipSource39.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_66 = null;
        gzipSource65.crc = cRC32_66;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource68 = gzipSource65.inflaterSource;
        int int69 = gzipSource65.section;
        com.squareup.okhttp.internal.bytes.Source source70 = gzipSource65.source;
        gzipSource65.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer73 = gzipSource65.buffer;
        gzipSource65.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer76 = gzipSource65.buffer;
        gzipSource39.buffer = okBuffer76;
        gzipSource0.buffer = okBuffer76;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater59);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource68);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer76);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        gzipSource8.section = (byte) 0;
        gzipSource8.section = (-1);
        gzipSource8.section = (short) 0;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = null;
        gzipSource0.buffer = okBuffer12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        java.util.zip.Inflater inflater25 = gzipSource24.inflater;
        gzipSource15.inflater = inflater25;
        gzipSource14.inflater = inflater25;
        gzipSource0.inflater = inflater25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.Inflater inflater40 = gzipSource39.inflater;
        gzipSource30.inflater = inflater40;
        gzipSource29.inflater = inflater40;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource29.inflaterSource;
        java.util.zip.Inflater inflater44 = gzipSource29.inflater;
        gzipSource0.inflater = inflater44;
        int int46 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer47 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Source source48 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source48);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        java.util.zip.Inflater inflater14 = gzipSource9.inflater;
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource9.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource17.inflaterSource;
        gzipSource17.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource17.inflater = inflater31;
        gzipSource9.inflater = inflater31;
        gzipSource0.source = gzipSource9;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource35.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_41 = null;
        gzipSource40.crc = cRC32_41;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource40.inflaterSource;
        java.util.zip.CRC32 cRC32_44 = gzipSource40.crc;
        java.util.zip.Inflater inflater45 = gzipSource40.inflater;
        gzipSource40.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source50 = gzipSource40.source;
        gzipSource35.source = source50;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource35.inflaterSource;
        int int53 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource54.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer59 = null;
        gzipSource54.buffer = okBuffer59;
        int int61 = gzipSource54.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource62 = gzipSource54.inflaterSource;
        gzipSource35.source = gzipSource54;
        java.util.zip.Inflater inflater64 = gzipSource54.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater66 = null;
        gzipSource65.inflater = inflater66;
        int int68 = gzipSource65.section;
        gzipSource65.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource65);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource72 = null;
        gzipSource65.inflaterSource = inflaterSource72;
        java.util.zip.CRC32 cRC32_74 = gzipSource65.crc;
        gzipSource54.crc = cRC32_74;
        gzipSource0.crc = cRC32_74;
        com.squareup.okhttp.internal.bytes.Source source77 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_78 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline79 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource52);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater64);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_78);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.Inflater inflater15 = gzipSource14.inflater;
        gzipSource0.inflater = inflater15;
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long19 = gzipSource0.seek((byte) 100, deadline18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater15);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        int int22 = gzipSource6.section;
        java.util.zip.CRC32 cRC32_23 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.Source source24 = gzipSource6.source;
        int int25 = gzipSource6.section;
        java.util.zip.CRC32 cRC32_26 = gzipSource6.crc;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_26);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource0.crc = cRC32_5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer13 = null;
        gzipSource8.buffer = okBuffer13;
        gzipSource8.section = (byte) -1;
        gzipSource8.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        gzipSource8.section = (byte) 1;
        java.util.zip.CRC32 cRC32_22 = gzipSource8.crc;
        gzipSource0.source = gzipSource8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = gzipSource24.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = null;
        gzipSource24.inflaterSource = inflaterSource26;
        com.squareup.okhttp.internal.bytes.Source source28 = gzipSource24.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer29 = gzipSource24.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline31 = null;
        long long32 = 0L; // flaky: gzipSource8.read(okBuffer29, (long) (short) 10, deadline31);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource8.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        gzipSource5.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource5);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = null;
        gzipSource5.inflaterSource = inflaterSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        gzipSource14.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer20 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline22 = null;
        long long23 = gzipSource14.read(okBuffer20, (long) 100, deadline22);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_25 = null;
        gzipSource24.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource24.inflaterSource;
        java.util.zip.CRC32 cRC32_28 = gzipSource24.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource29.inflaterSource;
        gzipSource29.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater37 = null;
        gzipSource36.inflater = inflater37;
        int int39 = gzipSource36.section;
        gzipSource36.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource36);
        java.util.zip.Inflater inflater43 = gzipSource42.inflater;
        gzipSource29.inflater = inflater43;
        gzipSource24.inflater = inflater43;
        gzipSource14.inflater = inflater43;
        gzipSource5.inflater = inflater43;
        gzipSource0.inflater = inflater43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource49);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        com.squareup.okhttp.internal.bytes.Deadline deadline30 = null;
        gzipSource28.require((-1), deadline30);
        java.util.zip.CRC32 cRC32_32 = gzipSource28.crc;
        gzipSource6.crc = cRC32_32;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_32);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        int int9 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer10 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource11.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource16.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource16.inflaterSource;
        java.util.zip.CRC32 cRC32_20 = gzipSource16.crc;
        java.util.zip.Inflater inflater21 = gzipSource16.inflater;
        gzipSource16.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source26 = gzipSource16.source;
        gzipSource11.source = source26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource11.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource29 = gzipSource11.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer30 = gzipSource11.buffer;
        gzipSource0.buffer = okBuffer30;
        int int32 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 2;
        java.util.zip.Inflater inflater11 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int15 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource16.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource16.inflaterSource;
        java.util.zip.CRC32 cRC32_20 = gzipSource16.crc;
        java.util.zip.Inflater inflater21 = gzipSource16.inflater;
        java.util.zip.CRC32 cRC32_22 = null;
        gzipSource16.crc = cRC32_22;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = gzipSource16.buffer;
        gzipSource14.updateCrc(okBuffer24, (long) '4', (long) (-1));
        java.util.zip.CRC32 cRC32_28 = gzipSource14.crc;
        gzipSource0.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.CRC32 cRC32_37 = null;
        gzipSource30.crc = cRC32_37;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource39.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = gzipSource39.inflaterSource;
        java.util.zip.CRC32 cRC32_43 = gzipSource39.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource48 = gzipSource44.inflaterSource;
        gzipSource44.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater52 = null;
        gzipSource51.inflater = inflater52;
        int int54 = gzipSource51.section;
        gzipSource51.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource51);
        java.util.zip.Inflater inflater58 = gzipSource57.inflater;
        gzipSource44.inflater = inflater58;
        gzipSource39.inflater = inflater58;
        gzipSource30.inflater = inflater58;
        java.util.zip.CRC32 cRC32_62 = gzipSource30.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_65 = null;
        gzipSource64.crc = cRC32_65;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater68 = null;
        gzipSource67.inflater = inflater68;
        int int70 = gzipSource67.section;
        gzipSource67.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource67);
        java.util.zip.Inflater inflater74 = gzipSource73.inflater;
        gzipSource64.inflater = inflater74;
        gzipSource63.inflater = inflater74;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer77 = gzipSource63.buffer;
        gzipSource30.buffer = okBuffer77;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource79 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer77);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer77, (long) (short) 10, 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(okBuffer12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_43);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource48);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_62);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer77);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_5 = gzipSource0.crc;
        int int6 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource11.inflaterSource;
        gzipSource0.source = gzipSource11;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_21 = null;
        gzipSource20.crc = cRC32_21;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        gzipSource23.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource23);
        java.util.zip.Inflater inflater30 = gzipSource29.inflater;
        gzipSource20.inflater = inflater30;
        gzipSource19.inflater = inflater30;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer33 = gzipSource19.buffer;
        gzipSource0.updateCrc(okBuffer33, (long) '#', (long) (-1));
        java.util.zip.CRC32 cRC32_37 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_37);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        gzipSource0.section = (byte) 1;
        java.util.zip.CRC32 cRC32_14 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        java.util.zip.Inflater inflater20 = gzipSource15.inflater;
        java.util.zip.CRC32 cRC32_21 = null;
        gzipSource15.crc = cRC32_21;
        java.util.zip.Inflater inflater23 = gzipSource15.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource24.inflaterSource;
        gzipSource24.section = (byte) 100;
        int int31 = gzipSource24.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_33 = null;
        gzipSource32.crc = cRC32_33;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource32.inflaterSource;
        java.util.zip.CRC32 cRC32_36 = gzipSource32.crc;
        java.util.zip.CRC32 cRC32_37 = null;
        gzipSource32.crc = cRC32_37;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource39.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = gzipSource39.inflaterSource;
        java.util.zip.CRC32 cRC32_43 = gzipSource39.crc;
        java.util.zip.Inflater inflater44 = gzipSource39.inflater;
        gzipSource39.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source49 = gzipSource39.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater51 = null;
        gzipSource50.inflater = inflater51;
        int int53 = gzipSource50.section;
        gzipSource50.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = gzipSource50.inflaterSource;
        gzipSource39.source = gzipSource50;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_60 = null;
        gzipSource59.crc = cRC32_60;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater63 = null;
        gzipSource62.inflater = inflater63;
        int int65 = gzipSource62.section;
        gzipSource62.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource62);
        java.util.zip.Inflater inflater69 = gzipSource68.inflater;
        gzipSource59.inflater = inflater69;
        gzipSource58.inflater = inflater69;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer72 = gzipSource58.buffer;
        gzipSource39.updateCrc(okBuffer72, (long) '#', (long) (-1));
        gzipSource32.updateCrc(okBuffer72, (long) 0, 0L);
        gzipSource24.buffer = okBuffer72;
        gzipSource15.buffer = okBuffer72;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource81 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer72);
        gzipSource0.buffer = okBuffer72;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source49);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource56);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer72);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        long long11 = gzipSource0.read(okBuffer8, (long) (byte) 10, deadline10);
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: source == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer7 = gzipSource6.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource6.buffer;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        java.util.zip.CRC32 cRC32_21 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource6.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource22);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource0.inflaterSource;
        int int19 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource20.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_26 = null;
        gzipSource25.crc = cRC32_26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource25.inflaterSource;
        java.util.zip.CRC32 cRC32_29 = gzipSource25.crc;
        java.util.zip.Inflater inflater30 = gzipSource25.inflater;
        gzipSource25.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source35 = gzipSource25.source;
        gzipSource20.source = source35;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource20.inflaterSource;
        int int38 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater40 = null;
        gzipSource39.inflater = inflater40;
        int int42 = gzipSource39.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource39.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer44 = null;
        gzipSource39.buffer = okBuffer44;
        int int46 = gzipSource39.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource39.inflaterSource;
        gzipSource20.source = gzipSource39;
        java.util.zip.Inflater inflater49 = gzipSource39.inflater;
        int int50 = gzipSource39.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource39);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_53 = null;
        gzipSource52.crc = cRC32_53;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource55 = gzipSource52.inflaterSource;
        int int56 = gzipSource52.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer57 = gzipSource52.buffer;
        gzipSource51.buffer = okBuffer57;
        gzipSource0.buffer = okBuffer57;
        java.lang.Class<?> wildcardClass60 = okBuffer57.getClass();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource55);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.section = 100;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource10.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource18.inflater = inflater28;
        gzipSource10.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline33 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater3 = null;
        gzipSource2.inflater = inflater3;
        int int5 = gzipSource2.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource2.inflaterSource;
        gzipSource2.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        gzipSource2.require((int) (short) -1, deadline10);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = null;
        gzipSource12.inflaterSource = inflaterSource19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource12.inflaterSource;
        gzipSource2.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = null;
        gzipSource12.inflaterSource = inflaterSource24;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = gzipSource12.buffer;
        gzipSource0.buffer = okBuffer26;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer28 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        gzipSource29.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource29);
        java.util.zip.Inflater inflater36 = gzipSource35.inflater;
        gzipSource35.section = (byte) -1;
        java.util.zip.Inflater inflater39 = gzipSource35.inflater;
        com.squareup.okhttp.internal.bytes.Source source40 = gzipSource35.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer41 = gzipSource35.buffer;
        java.util.zip.CRC32 cRC32_42 = gzipSource35.crc;
        gzipSource0.crc = cRC32_42;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_42);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater7 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater10 = null;
        gzipSource9.inflater = inflater10;
        int int12 = gzipSource9.section;
        gzipSource9.section = (byte) -1;
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource9.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_18 = null;
        gzipSource17.crc = cRC32_18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        java.util.zip.Inflater inflater27 = gzipSource26.inflater;
        gzipSource17.inflater = inflater27;
        gzipSource9.inflater = inflater27;
        gzipSource8.inflater = inflater27;
        gzipSource0.inflater = inflater27;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_33 = null;
        gzipSource32.crc = cRC32_33;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource32.inflaterSource;
        java.util.zip.CRC32 cRC32_36 = gzipSource32.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater38 = null;
        gzipSource37.inflater = inflater38;
        int int40 = gzipSource37.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource37.inflaterSource;
        gzipSource37.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        java.util.zip.Inflater inflater51 = gzipSource50.inflater;
        gzipSource37.inflater = inflater51;
        gzipSource32.inflater = inflater51;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource54 = gzipSource32.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source55 = gzipSource32.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater57 = null;
        gzipSource56.inflater = inflater57;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource56);
        java.util.zip.CRC32 cRC32_60 = gzipSource59.crc;
        gzipSource32.crc = cRC32_60;
        gzipSource0.crc = cRC32_60;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_60);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.Deadline deadline23 = null;
        gzipSource6.require((-1), deadline23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource3.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource3.buffer = okBuffer8;
        gzipSource3.section = (byte) -1;
        java.util.zip.Inflater inflater12 = gzipSource3.inflater;
        java.util.zip.CRC32 cRC32_13 = gzipSource3.crc;
        gzipSource0.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int16 = gzipSource15.section;
        java.util.zip.CRC32 cRC32_17 = gzipSource15.crc;
        gzipSource0.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource20.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_26 = null;
        gzipSource25.crc = cRC32_26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource25.inflaterSource;
        java.util.zip.CRC32 cRC32_29 = gzipSource25.crc;
        java.util.zip.Inflater inflater30 = gzipSource25.inflater;
        gzipSource25.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source35 = gzipSource25.source;
        gzipSource20.source = source35;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource20.inflaterSource;
        int int38 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater40 = null;
        gzipSource39.inflater = inflater40;
        int int42 = gzipSource39.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource39.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer44 = null;
        gzipSource39.buffer = okBuffer44;
        int int46 = gzipSource39.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource39.inflaterSource;
        gzipSource20.source = gzipSource39;
        java.util.zip.Inflater inflater49 = gzipSource39.inflater;
        int int50 = gzipSource39.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource39);
        com.squareup.okhttp.internal.bytes.Deadline deadline53 = null;
        gzipSource51.require((int) (byte) 0, deadline53);
        java.util.zip.CRC32 cRC32_55 = gzipSource51.crc;
        gzipSource0.crc = cRC32_55;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_55);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        gzipSource6.section = (byte) -1;
        gzipSource6.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_14 = null;
        gzipSource13.crc = cRC32_14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        gzipSource16.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        java.util.zip.Inflater inflater23 = gzipSource22.inflater;
        gzipSource13.inflater = inflater23;
        gzipSource12.inflater = inflater23;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource12.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer27 = gzipSource12.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline29 = null;
        long long30 = 0L; // flaky: gzipSource6.read(okBuffer27, (long) ' ', deadline29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        int int30 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource31.inflaterSource;
        gzipSource31.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource31.inflater = inflater45;
        gzipSource19.inflater = inflater45;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater49 = null;
        gzipSource48.inflater = inflater49;
        int int51 = gzipSource48.section;
        gzipSource48.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource48);
        com.squareup.okhttp.internal.bytes.Deadline deadline56 = null;
        gzipSource54.require((-1), deadline56);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        int int61 = gzipSource58.section;
        gzipSource58.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource58);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource65 = null;
        gzipSource58.inflaterSource = inflaterSource65;
        gzipSource54.source = inflaterSource65;
        java.util.zip.CRC32 cRC32_68 = gzipSource54.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer69 = gzipSource54.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource70 = gzipSource54.inflaterSource;
        gzipSource19.inflaterSource = inflaterSource70;
        gzipSource19.section = 10;
        int int74 = gzipSource19.section;
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource0.source;
        int int23 = gzipSource0.section;
        java.util.zip.CRC32 cRC32_24 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        gzipSource25.section = (byte) -1;
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource25.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer33 = null;
        gzipSource25.buffer = okBuffer33;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource35.inflaterSource;
        java.util.zip.CRC32 cRC32_39 = gzipSource35.crc;
        java.util.zip.Inflater inflater40 = gzipSource35.inflater;
        gzipSource35.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source45 = gzipSource35.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource46.inflaterSource;
        gzipSource35.source = gzipSource46;
        com.squareup.okhttp.internal.bytes.Source source54 = gzipSource35.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        gzipSource55.section = (byte) -1;
        java.util.zip.CRC32 cRC32_61 = null;
        gzipSource55.crc = cRC32_61;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_64 = null;
        gzipSource63.crc = cRC32_64;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater67 = null;
        gzipSource66.inflater = inflater67;
        int int69 = gzipSource66.section;
        gzipSource66.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource66);
        java.util.zip.Inflater inflater73 = gzipSource72.inflater;
        gzipSource63.inflater = inflater73;
        gzipSource55.inflater = inflater73;
        gzipSource35.inflater = inflater73;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource77 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater78 = null;
        gzipSource77.inflater = inflater78;
        int int80 = gzipSource77.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource81 = gzipSource77.inflaterSource;
        gzipSource77.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline85 = null;
        gzipSource77.require((int) (short) -1, deadline85);
        com.squareup.okhttp.internal.bytes.Source source87 = gzipSource77.source;
        int int88 = gzipSource77.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer89 = null;
        gzipSource77.buffer = okBuffer89;
        gzipSource35.source = okBuffer89;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer92 = gzipSource35.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline94 = null;
        long long95 = gzipSource25.read(okBuffer92, 10L, deadline94);
        gzipSource0.buffer = okBuffer92;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource97 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source45);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source54);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater73);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + (-1L) + "'", long95 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource97);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater2 = null;
        gzipSource1.inflater = inflater2;
        int int4 = gzipSource1.section;
        gzipSource1.section = (byte) -1;
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource1.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource1.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource23.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        java.util.zip.Inflater inflater35 = gzipSource30.inflater;
        gzipSource30.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source40 = gzipSource30.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource41.inflaterSource;
        gzipSource30.source = gzipSource41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        java.util.zip.Inflater inflater60 = gzipSource59.inflater;
        gzipSource50.inflater = inflater60;
        gzipSource49.inflater = inflater60;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer63 = gzipSource49.buffer;
        gzipSource30.updateCrc(okBuffer63, (long) '#', (long) (-1));
        gzipSource23.updateCrc(okBuffer63, (long) 0, 0L);
        gzipSource0.buffer = okBuffer63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_72 = null;
        gzipSource71.crc = cRC32_72;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource74 = gzipSource71.inflaterSource;
        java.util.zip.CRC32 cRC32_75 = gzipSource71.crc;
        java.util.zip.Inflater inflater76 = gzipSource71.inflater;
        java.util.zip.CRC32 cRC32_77 = null;
        gzipSource71.crc = cRC32_77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer79 = null;
        gzipSource71.buffer = okBuffer79;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer81 = null;
        gzipSource71.buffer = okBuffer81;
        gzipSource0.source = gzipSource71;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource84 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource84.checkEqual("hi!", (int) (short) -1, 3);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000003 != expected 0xffffffff");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater76);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer15 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        gzipSource16.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        java.util.zip.Inflater inflater23 = gzipSource22.inflater;
        gzipSource22.section = (byte) -1;
        java.util.zip.Inflater inflater26 = gzipSource22.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource30.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer35 = null;
        gzipSource30.buffer = okBuffer35;
        gzipSource30.section = (byte) -1;
        java.util.zip.Inflater inflater39 = gzipSource30.inflater;
        java.util.zip.CRC32 cRC32_40 = gzipSource30.crc;
        gzipSource27.crc = cRC32_40;
        java.util.zip.CRC32 cRC32_42 = gzipSource27.crc;
        com.squareup.okhttp.internal.bytes.Source source43 = gzipSource27.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource46 = null;
        gzipSource44.inflaterSource = inflaterSource46;
        com.squareup.okhttp.internal.bytes.Source source48 = gzipSource44.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer49 = gzipSource44.buffer;
        gzipSource27.buffer = okBuffer49;
        com.squareup.okhttp.internal.bytes.Deadline deadline52 = null;
        long long53 = gzipSource22.read(okBuffer49, 0L, deadline52);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer49, (long) (byte) -1, (long) 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
    }
}
