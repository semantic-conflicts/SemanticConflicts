/*
 * This file was automatically generated by EvoSuite
 * Mon May 25 22:21:12 GMT 2020
 */

package com.squareup.okhttp.internal.bytes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.squareup.okhttp.internal.bytes.ByteString;
import com.squareup.okhttp.internal.bytes.Deadline;
import com.squareup.okhttp.internal.bytes.GzipSource;
import com.squareup.okhttp.internal.bytes.InflaterSource;
import com.squareup.okhttp.internal.bytes.OkBuffer;
import com.squareup.okhttp.internal.bytes.Segment;
import com.squareup.okhttp.internal.bytes.Source;
import java.io.EOFException;
import java.io.IOException;
import java.util.List;
import java.util.concurrent.TimeUnit;
import java.util.zip.CRC32;
import java.util.zip.Inflater;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GzipSource_ESTest extends GzipSource_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      String string0 = "";
      int int0 = 10;
      int int1 = (-1673);
      int int2 = 2135070447;
      Deadline deadline0 = null;
      Deadline deadline1 = Deadline.NONE;
      deadline1.throwIfReached();
      Deadline deadline2 = new Deadline();
      byte byte0 = (byte) (-37);
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      Deadline deadline3 = deadline2.start(byte0, timeUnit0);
      Deadline deadline4 = Deadline.NONE;
      try { 
        deadline2.throwIfReached();
      } catch(IOException e) {
         //
         // Deadline reached
         //
         verifyException("com.squareup.okhttp.internal.bytes.Deadline", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      byte byte0 = (byte) (-46);
      gzipSource0.FCOMMENT = byte0;
      long long0 = (-2309L);
      Deadline deadline0 = new Deadline();
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      Deadline deadline1 = deadline0.start(gzipSource0.section, timeUnit0);
      // Undeclared exception!
      try { 
        gzipSource0.read(gzipSource0.buffer, long0, deadline1);
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -2309
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 2475;
      OkBuffer okBuffer1 = okBuffer0.writeByte(int0);
      Deadline deadline0 = new Deadline();
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      byte byte0 = (byte) (-110);
      int int1 = 1408;
      OkBuffer okBuffer2 = null;
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      GzipSource gzipSource1 = new GzipSource(gzipSource0);
      String string0 = "";
      int int0 = 198;
      gzipSource1.checkEqual(string0, int0, int0);
      byte byte0 = (byte)3;
      Deadline deadline0 = Deadline.NONE;
      long long0 = 1250L;
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      // Undeclared exception!
      try { 
        deadline0.start(long0, timeUnit0);
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.Deadline$1", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = null;
      // Undeclared exception!
      try { 
        gzipSource0.seek(gzipSource0.SECTION_TRAILER, deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      int int0 = 925;
      Deadline deadline0 = new Deadline();
      long long0 = 155L;
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      Deadline deadline1 = deadline0.start(long0, timeUnit0);
      GzipSource.SECTION_HEADER = gzipSource0.SECTION_TRAILER;
      long long1 = gzipSource0.read(gzipSource0.buffer, int0, deadline0);
      deadline0.throwIfReached();
      OkBuffer okBuffer0 = new OkBuffer();
      long long2 = gzipSource0.read(okBuffer0, int0, deadline0);
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      String string0 = "6\\A'PWQ";
      okBuffer0.writeUtf8(string0);
      int int0 = 2;
      gzipSource0.section = int0;
      int int1 = 0;
      GzipSource.SECTION_BODY = gzipSource0.SECTION_HEADER;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int1);
      GzipSource gzipSource1 = new GzipSource(okBuffer1);
      Deadline deadline0 = null;
      long long0 = (-4525L);
      try { 
        gzipSource0.consumeHeader(deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x00365c != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      String string0 = "6\\\\A'P~WQ";
      okBuffer0.writeUtf8(string0);
      int int0 = 2;
      gzipSource0.section = int0;
      int int1 = 0;
      GzipSource.SECTION_BODY = gzipSource0.SECTION_HEADER;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int1);
      GzipSource gzipSource1 = new GzipSource(okBuffer1);
      Deadline deadline0 = null;
      int int2 = 2;
      ByteString byteString0 = okBuffer1.readByteString(int2);
      try { 
        gzipSource1.consumeHeader(deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x005c41 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      Deadline deadline0 = new Deadline();
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      Deadline deadline1 = deadline0.start(gzipSource0.FEXTRA, timeUnit0);
      byte byte0 = (byte) (-122);
      try { 
        gzipSource0.seek(byte0, deadline1);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      String string0 = "6\\\\A'P~WQ";
      int int0 = 716;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      okBuffer0.writeUtf8(string0);
      int int1 = 2;
      gzipSource0.section = int1;
      int int2 = 3;
      OkBuffer okBuffer2 = okBuffer0.writeShort(int2);
      GzipSource gzipSource1 = new GzipSource(okBuffer2);
      Deadline deadline0 = null;
      long long0 = gzipSource1.seek(gzipSource0.SECTION_DONE, deadline0);
      long long1 = (-4525L);
      try { 
        gzipSource1.consumeTrailer(deadline0);
      } catch(IOException e) {
         //
         // CRC: actual 0x000000 != expected 0x5c36cc02
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      Deadline deadline0 = new Deadline();
      gzipSource0.close(deadline0);
      try { 
        gzipSource0.consumeTrailer(deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      GzipSource gzipSource1 = new GzipSource(gzipSource0);
      long long0 = 0L;
      byte byte0 = (byte) (-37);
      Deadline deadline0 = Deadline.NONE;
      long long1 = gzipSource1.read(gzipSource0.buffer, long0, deadline0);
      System.setCurrentTimeMillis(gzipSource0.FEXTRA);
      // Undeclared exception!
      try { 
        gzipSource1.consumeTrailer(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = Deadline.NONE;
      // Undeclared exception!
      try { 
        gzipSource0.close(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      GzipSource gzipSource1 = new GzipSource(gzipSource0);
      String string0 = "";
      gzipSource1.checkEqual(string0, gzipSource0.SECTION_HEADER, gzipSource0.SECTION_HEADER);
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      byte byte0 = (byte)0;
      GzipSource.SECTION_HEADER = byte0;
      CRC32 cRC32_0 = gzipSource0.crc;
      gzipSource0.crc = cRC32_0;
      int int0 = (-1127);
      int int1 = 0;
      gzipSource0.section = int1;
      Deadline deadline0 = new Deadline();
      // Undeclared exception!
      try { 
        gzipSource0.close(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      Source source0 = null;
      GzipSource gzipSource0 = null;
      try {
        gzipSource0 = new GzipSource(source0);
      } catch(IllegalArgumentException e) {
         //
         // source == null
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = null;
      long long0 = 0L;
      // Undeclared exception!
      try { 
        gzipSource0.updateCrc(okBuffer0, long0, long0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 2048;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      int int1 = 0;
      OkBuffer okBuffer2 = okBuffer1.writeByte(int1);
      GzipSource gzipSource0 = new GzipSource(okBuffer2);
      gzipSource0.updateCrc(okBuffer1, int1, int1);
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer.writeShort(gzipSource0.FCOMMENT);
      long long0 = 1048576L;
      // Undeclared exception!
      gzipSource0.updateCrc(okBuffer0, long0, long0);
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 2347;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      Segment segment0 = okBuffer1.writableSegment(gzipSource0.FHCRC);
      String string0 = "com.squareup.okhttp.internal.bytes.GzipSource";
      okBuffer0.writeUtf8(string0);
      GzipSource.FNAME = gzipSource0.FCOMMENT;
      long long0 = (-2848L);
      GzipSource.SECTION_BODY = gzipSource0.FHCRC;
      gzipSource0.updateCrc(okBuffer1, int0, long0);
      int int1 = okBuffer0.readIntLe();
      int int2 = 0;
      OkBuffer okBuffer2 = okBuffer0.writeByte(int2);
      Deadline deadline0 = new Deadline();
      gzipSource0.close(deadline0);
      gzipSource0.close(deadline0);
      try { 
        deadline0.throwIfReached();
      } catch(IOException e) {
         //
         // Deadline reached
         //
         verifyException("com.squareup.okhttp.internal.bytes.Deadline", e);
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = new Deadline();
      // Undeclared exception!
      try { 
        gzipSource0.consumeHeader(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      String string0 = null;
      int int0 = (-2415);
      int int1 = (-1154);
      try { 
        gzipSource0.checkEqual(string0, int0, int1);
      } catch(IOException e) {
         //
         // null: actual 0xfffffb7e != expected 0xfffff691
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = Deadline.NONE;
      // Undeclared exception!
      try { 
        gzipSource0.consumeTrailer(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      int int0 = 8075;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      GzipSource gzipSource1 = new GzipSource(okBuffer1);
      Deadline deadline0 = new Deadline();
      long long0 = (-3415L);
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      Deadline deadline1 = deadline0.start(long0, timeUnit0);
      try { 
        gzipSource1.consumeHeader(deadline1);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      String string0 = "ZZ{";
      int int0 = 50;
      int int1 = 598;
      try { 
        gzipSource0.checkEqual(string0, int0, int1);
      } catch(IOException e) {
         //
         // ZZ{: actual 0x000256 != expected 0x000032
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      byte byte0 = (byte)53;
      Deadline deadline0 = new Deadline();
      // Undeclared exception!
      try { 
        gzipSource0.seek(byte0, deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      Inflater inflater0 = new Inflater();
      InflaterSource inflaterSource0 = new InflaterSource(okBuffer0, inflater0);
      GzipSource gzipSource1 = new GzipSource(inflaterSource0);
      int int0 = 13;
      Deadline deadline0 = null;
      try { 
        gzipSource1.require(int0, deadline0);
      } catch(EOFException e) {
         //
         // source exhausted prematurely
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 61;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      int int1 = 489;
      OkBuffer okBuffer2 = okBuffer1.writeShort(int1);
      OkBuffer okBuffer3 = okBuffer1.writeByte(int1);
      GzipSource gzipSource0 = new GzipSource(okBuffer3);
      Deadline deadline0 = new Deadline();
      long long0 = 0L;
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      Deadline deadline1 = deadline0.start(long0, timeUnit0);
      long long1 = 0L;
      byte byte0 = (byte)102;
      try { 
        gzipSource0.seek(byte0, deadline1);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      int int0 = 16;
      Deadline deadline0 = Deadline.NONE;
      // Undeclared exception!
      try { 
        gzipSource0.require(int0, deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = new OkBuffer();
      long long0 = 304L;
      Deadline deadline0 = Deadline.NONE;
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer0, long0, deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer.writeInt(gzipSource0.FEXTRA);
      long long0 = 8L;
      Deadline deadline0 = new Deadline();
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      Deadline deadline1 = deadline0.start(gzipSource0.FCOMMENT, timeUnit0);
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer0, long0, deadline1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      Inflater inflater0 = new Inflater();
      InflaterSource inflaterSource0 = new InflaterSource(okBuffer0, inflater0, okBuffer0);
      GzipSource gzipSource0 = new GzipSource(inflaterSource0);
      String string0 = ";5X";
      int int0 = 1261;
      int int1 = (-1837);
      try { 
        gzipSource0.checkEqual(string0, int0, int1);
      } catch(IOException e) {
         //
         // ;5X: actual 0xfffff8d3 != expected 0x0004ed
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test32()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer.writeShort(gzipSource0.FCOMMENT);
      String string0 = "u's.e$BBH@ASEy\"";
      int int0 = 50;
      gzipSource0.checkEqual(string0, int0, int0);
      long long0 = 93L;
      // Undeclared exception!
      try { 
        gzipSource0.updateCrc(okBuffer0, long0, long0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.zip.CRC32", e);
      }
  }

  @Test(timeout = 11000)
  public void test33()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 2475;
      OkBuffer okBuffer1 = okBuffer0.writeByte(int0);
      OkBuffer okBuffer2 = okBuffer1.writeInt(gzipSource0.FNAME);
      long long0 = 3577L;
      // Undeclared exception!
      try { 
        gzipSource0.updateCrc(okBuffer2, int0, long0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.zip.CRC32", e);
      }
  }

  @Test(timeout = 11000)
  public void test34()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      GzipSource.FCOMMENT = gzipSource0.SECTION_BODY;
      gzipSource0.section = (int) GzipSource.FCOMMENT;
      String string0 = " ";
      int int0 = 1789;
      gzipSource0.checkEqual(string0, int0, int0);
      GzipSource.SECTION_BODY = gzipSource0.FEXTRA;
      Deadline deadline0 = Deadline.NONE;
      deadline0.throwIfReached();
      GzipSource gzipSource1 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource1.buffer;
      int int1 = 8075;
      OkBuffer okBuffer1 = okBuffer0.writeByte(int1);
      long long0 = (-1L);
      Deadline deadline1 = new Deadline();
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer1, long0, deadline1);
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -1
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test35()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      int int1 = 0;
      Deadline deadline0 = Deadline.NONE;
      gzipSource0.require(int1, deadline0);
  }

  @Test(timeout = 11000)
  public void test36()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      GzipSource.SECTION_DONE = gzipSource0.SECTION_HEADER;
      int int0 = (-779);
      Deadline deadline0 = new Deadline();
      gzipSource0.require(int0, deadline0);
      int int1 = 0;
      OkBuffer okBuffer0 = gzipSource0.buffer.writeByte(int1);
      int int2 = 3907;
      String string0 = "";
      okBuffer0.writeUtf8(string0);
      OkBuffer okBuffer1 = okBuffer0.writeByte(int2);
      long long0 = gzipSource0.read(okBuffer0, GzipSource.SECTION_DONE, deadline0);
      List<Integer> list0 = okBuffer1.segmentSizes();
      // Undeclared exception!
      try { 
        gzipSource0.close(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test37()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      int int0 = 2650;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      OkBuffer okBuffer2 = okBuffer1.writeInt(gzipSource0.SECTION_TRAILER);
      GzipSource gzipSource1 = new GzipSource(okBuffer2);
      long long0 = 2L;
      Deadline deadline0 = new Deadline();
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      Deadline deadline1 = deadline0.start(gzipSource1.FEXTRA, timeUnit0);
      try { 
        gzipSource1.read(okBuffer0, long0, deadline1);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test38()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = null;
      String string0 = "byteCount < 0: ";
      byte byte0 = (byte)3;
      GzipSource.FCOMMENT = byte0;
      int int0 = 1160;
      int int1 = (-427);
      Deadline deadline0 = Deadline.NONE;
      deadline0.throwIfReached();
      CRC32 cRC32_0 = gzipSource0.crc;
      gzipSource0.crc = cRC32_0;
      // Undeclared exception!
      try { 
        gzipSource0.consumeHeader(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test39()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      String string0 = "6\\\\A'P~WQ";
      okBuffer0.writeUtf8(string0);
      int int0 = 2;
      gzipSource0.section = int0;
      int int1 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int1);
      GzipSource gzipSource1 = new GzipSource(okBuffer1);
      Deadline deadline0 = null;
      long long0 = (-4525L);
      try { 
        gzipSource1.consumeTrailer(deadline0);
      } catch(IOException e) {
         //
         // CRC: actual 0x000000 != expected 0x415c5c36
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test40()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 54;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      Inflater inflater0 = new Inflater();
      InflaterSource inflaterSource0 = new InflaterSource(okBuffer1, inflater0, okBuffer1);
      GzipSource gzipSource0 = new GzipSource(inflaterSource0);
      Deadline deadline0 = Deadline.NONE;
      Deadline deadline1 = new Deadline();
      try { 
        gzipSource0.consumeHeader(deadline1);
      } catch(IOException e) {
         //
         // java.util.zip.DataFormatException: incorrect header check
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test41()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      long long0 = 0L;
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      TimeUnit timeUnit1 = TimeUnit.NANOSECONDS;
      OkBuffer okBuffer0 = gzipSource0.buffer;
      long long1 = (-2723L);
      byte byte0 = (byte)6;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = gzipSource0.SECTION_HEADER;
      byteArray0[1] = gzipSource0.SECTION_DONE;
      byteArray0[2] = gzipSource0.SECTION_DONE;
      byteArray0[3] = gzipSource0.SECTION_BODY;
      byteArray0[4] = gzipSource0.FHCRC;
      byteArray0[5] = gzipSource0.SECTION_HEADER;
      ByteString byteString0 = ByteString.of(byteArray0);
      okBuffer0.write(byteString0);
      gzipSource0.section = (int) byteArray0[4];
      byte byte1 = okBuffer0.readByte();
      long long2 = 4131L;
      // Undeclared exception!
      try { 
        gzipSource0.updateCrc(okBuffer0, long0, long2);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.zip.CRC32", e);
      }
  }

  @Test(timeout = 11000)
  public void test42()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      int int0 = 925;
      Deadline deadline0 = new Deadline();
      GzipSource.SECTION_HEADER = gzipSource0.SECTION_TRAILER;
      long long0 = gzipSource0.read(gzipSource0.buffer, int0, deadline0);
      try { 
        deadline0.throwIfReached();
      } catch(IOException e) {
         //
         // Deadline reached
         //
         verifyException("com.squareup.okhttp.internal.bytes.Deadline", e);
      }
  }

  @Test(timeout = 11000)
  public void test43()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = (-709);
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      okBuffer1.byteCount = (long) int0;
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      InflaterSource inflaterSource0 = gzipSource0.inflaterSource;
      gzipSource0.inflaterSource = inflaterSource0;
      long long0 = (-490L);
      System.setCurrentTimeMillis(long0);
      byte byte0 = (byte) (-19);
      Deadline deadline0 = Deadline.NONE;
      int int1 = 658;
      Segment segment0 = okBuffer0.writableSegment(int1);
      // Undeclared exception!
      try { 
        gzipSource0.seek(byte0, deadline0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.Util", e);
      }
  }

  @Test(timeout = 11000)
  public void test44()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = null;
      int int0 = (-2105);
      OkBuffer okBuffer0 = gzipSource0.buffer.writeShort(int0);
      int int1 = 24;
      gzipSource0.section = int1;
      long long0 = gzipSource0.read(okBuffer0, gzipSource0.FEXTRA, deadline0);
      String string0 = "|zer[szH";
      int int2 = 601;
      gzipSource0.checkEqual(string0, int2, int2);
  }

  @Test(timeout = 11000)
  public void test45()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      GzipSource.FEXTRA = gzipSource0.SECTION_TRAILER;
      int int0 = 925;
      Deadline deadline0 = new Deadline();
      GzipSource.FHCRC = gzipSource0.SECTION_DONE;
      GzipSource.SECTION_HEADER = gzipSource0.SECTION_TRAILER;
      long long0 = gzipSource0.read(gzipSource0.buffer, int0, deadline0);
      try { 
        deadline0.throwIfReached();
      } catch(IOException e) {
         //
         // Deadline reached
         //
         verifyException("com.squareup.okhttp.internal.bytes.Deadline", e);
      }
  }

  @Test(timeout = 11000)
  public void test46()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      String string0 = "6\\\\A'P~WQ";
      okBuffer0.writeUtf8(string0);
      List<Integer> list0 = okBuffer0.segmentSizes();
      int int0 = 2;
      gzipSource0.section = int0;
      int int1 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int1);
      GzipSource gzipSource1 = new GzipSource(okBuffer1);
      String string1 = okBuffer1.toString();
      Deadline deadline0 = null;
      long long0 = (-4525L);
      try { 
        gzipSource1.consumeHeader(deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x00365c != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test47()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      String string0 = "6\\\\A'P~WQ";
      okBuffer0.writeUtf8(string0);
      int int0 = 2;
      gzipSource0.section = int0;
      int int1 = 0;
      GzipSource.SECTION_BODY = gzipSource0.SECTION_HEADER;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int1);
      GzipSource gzipSource1 = new GzipSource(okBuffer1);
      Deadline deadline0 = null;
      long long0 = (-4525L);
      try { 
        gzipSource0.consumeHeader(deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x00365c != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test48()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      long long0 = (-2185L);
      okBuffer0.byteCount = long0;
      Deadline deadline0 = new Deadline();
      int int0 = 2048;
      // Undeclared exception!
      try { 
        gzipSource0.require(int0, deadline0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.Util", e);
      }
  }

  @Test(timeout = 11000)
  public void test49()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      String string0 = "6\\\\A'P~WQ";
      okBuffer0.writeUtf8(string0);
      gzipSource0.section = (int) gzipSource0.SECTION_BODY;
      int int0 = 0;
      GzipSource.SECTION_BODY = gzipSource0.SECTION_HEADER;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      GzipSource gzipSource1 = new GzipSource(okBuffer1);
      Deadline deadline0 = new Deadline();
      try { 
        gzipSource1.read(gzipSource0.buffer, gzipSource0.SECTION_DONE, deadline0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x00365c != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test50()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      String string0 = "6\\A'PWQ";
      okBuffer0.writeUtf8(string0);
      int int0 = 2;
      gzipSource0.section = int0;
      int int1 = 0;
      GzipSource.SECTION_BODY = gzipSource0.SECTION_HEADER;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int1);
      short short0 = okBuffer1.readShort();
      GzipSource gzipSource1 = new GzipSource(okBuffer1);
      Deadline deadline0 = null;
      long long0 = (-4525L);
      long long1 = 174L;
      try { 
        gzipSource0.read(okBuffer1, long1, deadline0);
      } catch(IOException e) {
         //
         // CRC: actual 0x000000 != expected 0x7f502741
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }
}
