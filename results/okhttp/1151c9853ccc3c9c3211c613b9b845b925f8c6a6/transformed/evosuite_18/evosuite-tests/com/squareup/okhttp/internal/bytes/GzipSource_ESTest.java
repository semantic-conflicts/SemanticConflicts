/*
 * This file was automatically generated by EvoSuite
 * Mon May 25 22:22:56 GMT 2020
 */

package com.squareup.okhttp.internal.bytes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.squareup.okhttp.internal.bytes.ByteString;
import com.squareup.okhttp.internal.bytes.Deadline;
import com.squareup.okhttp.internal.bytes.GzipSource;
import com.squareup.okhttp.internal.bytes.InflaterSource;
import com.squareup.okhttp.internal.bytes.OkBuffer;
import com.squareup.okhttp.internal.bytes.Segment;
import com.squareup.okhttp.internal.bytes.Source;
import java.io.EOFException;
import java.io.IOException;
import java.util.List;
import java.util.concurrent.TimeUnit;
import java.util.zip.CRC32;
import java.util.zip.Inflater;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GzipSource_ESTest extends GzipSource_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      gzipSource0.section = (int) gzipSource0.SECTION_DONE;
      String string0 = "com.squareup.okhtup.internal.bytes.GzipSource";
      Deadline deadline0 = new Deadline();
      long long0 = (-1866L);
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      long long1 = gzipSource0.read(okBuffer0, gzipSource0.SECTION_BODY, deadline0);
      OkBuffer okBuffer1 = okBuffer0.writeByte(gzipSource0.FHCRC);
      try { 
        gzipSource0.consumeHeader(deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer.writeInt(gzipSource0.FCOMMENT);
      OkBuffer okBuffer1 = okBuffer0.writeShort(gzipSource0.FNAME);
      OkBuffer okBuffer2 = okBuffer1.writeInt(gzipSource0.SECTION_HEADER);
      GzipSource gzipSource1 = new GzipSource(okBuffer2);
      long long0 = 0L;
      gzipSource1.updateCrc(okBuffer2, long0, long0);
      short short0 = okBuffer2.readShort();
      Deadline deadline0 = new Deadline();
      long long1 = 2L;
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      int int0 = 50;
      OkBuffer okBuffer3 = okBuffer1.writeInt(int0);
      Deadline deadline1 = deadline0.start(long1, timeUnit0);
      try { 
        gzipSource1.consumeHeader(deadline1);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x000004 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      byte byte0 = (byte)0;
      Deadline deadline0 = Deadline.NONE;
      deadline0.throwIfReached();
      int int0 = (-1769);
      OkBuffer okBuffer0 = new OkBuffer();
      OkBuffer okBuffer1 = okBuffer0.writeShort(byte0);
      OkBuffer okBuffer2 = okBuffer1.writeShort(byte0);
      OkBuffer okBuffer3 = okBuffer0.writeInt(byte0);
      GzipSource gzipSource0 = new GzipSource(okBuffer3);
      long long0 = gzipSource0.seek(byte0, deadline0);
      gzipSource0.consumeTrailer(deadline0);
      long long1 = gzipSource0.read(okBuffer1, byte0, deadline0);
      long long2 = 8L;
      long long3 = (-76L);
      Segment segment0 = okBuffer3.writableSegment(gzipSource0.SECTION_TRAILER);
      System.setCurrentTimeMillis(long3);
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = Deadline.NONE;
      // Undeclared exception!
      try { 
        gzipSource0.read(gzipSource0.buffer, gzipSource0.SECTION_TRAILER, deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      long long0 = 61L;
      System.setCurrentTimeMillis(long0);
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource gzipSource0 = new GzipSource();
      int int0 = gzipSource0.section;
      Deadline deadline0 = null;
      System.setCurrentTimeMillis(gzipSource0.SECTION_TRAILER);
      int int1 = 65280;
      int int2 = (-1794);
      long long1 = (-2218L);
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer0, long1, deadline0);
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -2218
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      GzipSource gzipSource1 = new GzipSource(okBuffer0);
      byte byte0 = (byte)1;
      Deadline deadline0 = Deadline.NONE;
      deadline0.throwIfReached();
      try { 
        gzipSource1.seek(gzipSource0.SECTION_TRAILER, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer.writeShort(gzipSource0.SECTION_BODY);
      OkBuffer okBuffer1 = okBuffer0.writeShort(gzipSource0.FNAME);
      OkBuffer okBuffer2 = okBuffer1.writeInt(gzipSource0.SECTION_HEADER);
      GzipSource gzipSource1 = new GzipSource(okBuffer2);
      long long0 = 0L;
      Deadline deadline0 = null;
      gzipSource1.close(deadline0);
      gzipSource1.updateCrc(okBuffer2, long0, long0);
      short short0 = okBuffer2.readShort();
      Deadline deadline1 = new Deadline();
      long long1 = 2L;
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      int int0 = 50;
      OkBuffer okBuffer3 = okBuffer1.writeInt(int0);
      Deadline deadline2 = deadline1.start(long1, timeUnit0);
      try { 
        gzipSource1.consumeHeader(deadline2);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x000003 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      String string0 = "byteCount < 2: ";
      gzipSource0.checkEqual(string0, gzipSource0.SECTION_BODY, gzipSource0.SECTION_BODY);
      GzipSource.SECTION_HEADER = gzipSource0.FHCRC;
      byte byte0 = (byte)0;
      GzipSource.SECTION_TRAILER = gzipSource0.FNAME;
      byte byte1 = (byte)0;
      GzipSource.SECTION_BODY = byte1;
      String string1 = "MKi";
      int int0 = 696;
      GzipSource.SECTION_DONE = GzipSource.SECTION_BODY;
      gzipSource0.checkEqual(string1, int0, int0);
      EvoSuiteFile evoSuiteFile0 = null;
      int int1 = 97;
      long long0 = 3L;
      Deadline deadline0 = new Deadline();
      OkBuffer okBuffer0 = gzipSource0.buffer.writeInt(gzipSource0.FEXTRA);
      long long1 = 2L;
      int int2 = 1231;
      OkBuffer okBuffer1 = gzipSource0.buffer.writeShort(int2);
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      OkBuffer okBuffer2 = gzipSource0.buffer.writeByte(gzipSource0.SECTION_HEADER);
      long long2 = gzipSource0.seek(byte1, deadline0);
      int int3 = gzipSource0.buffer.readInt();
      Deadline deadline1 = deadline0.start(long1, timeUnit0);
      long long3 = gzipSource0.read(gzipSource0.buffer, byte0, deadline1);
      long long4 = 1080L;
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer2, long4, deadline1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      Deadline deadline0 = Deadline.NONE;
      try { 
        gzipSource0.consumeTrailer(deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      String string0 = "! U?^8I>1";
      int int0 = (-1);
      gzipSource0.checkEqual(string0, int0, int0);
      Deadline deadline0 = Deadline.NONE;
      // Undeclared exception!
      try { 
        gzipSource0.consumeTrailer(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      int int0 = (-2073);
      OkBuffer okBuffer0 = gzipSource0.buffer.writeByte(int0);
      Deadline deadline0 = null;
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer0, int0, deadline0);
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -2073
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      GzipSource gzipSource1 = new GzipSource(gzipSource0);
      byte byte0 = (byte)101;
      GzipSource.SECTION_BODY = byte0;
      Deadline deadline0 = new Deadline();
      // Undeclared exception!
      try { 
        gzipSource1.consumeTrailer(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      int int0 = 894;
      gzipSource0.section = int0;
      String string0 = "com.squareup.okhttp.internal.bytes.GzipSource";
      Deadline deadline0 = new Deadline();
      long long0 = (-1866L);
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      long long1 = gzipSource0.read(okBuffer0, gzipSource0.SECTION_BODY, deadline0);
      OkBuffer okBuffer1 = okBuffer0.writeByte(gzipSource0.FHCRC);
      Deadline deadline1 = deadline0.start(long0, timeUnit0);
      try { 
        gzipSource0.consumeHeader(deadline1);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      String string0 = "byteCount < 2: ";
      int int0 = (-2124);
      gzipSource0.checkEqual(string0, int0, int0);
      GzipSource.SECTION_HEADER = gzipSource0.FHCRC;
      byte byte0 = (byte)0;
      GzipSource.SECTION_TRAILER = gzipSource0.FNAME;
      GzipSource.SECTION_TRAILER = byte0;
      byte byte1 = (byte)0;
      GzipSource.SECTION_BODY = byte1;
      String string1 = "MKi";
      int int1 = 696;
      gzipSource0.checkEqual(string1, int1, int1);
      int int2 = 0;
      OkBuffer okBuffer0 = gzipSource0.buffer.writeByte(int2);
      int int3 = 97;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int3);
      long long0 = 3L;
      Deadline deadline0 = new Deadline();
      OkBuffer okBuffer2 = okBuffer1.writeInt(gzipSource0.FEXTRA);
      long long1 = 2L;
      int int4 = 1231;
      OkBuffer okBuffer3 = okBuffer0.writeShort(int4);
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      OkBuffer okBuffer4 = okBuffer0.writeByte(gzipSource0.SECTION_HEADER);
      long long2 = gzipSource0.seek(byte1, deadline0);
      int int5 = okBuffer1.readInt();
      Deadline deadline1 = deadline0.start(long1, timeUnit0);
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer1, long0, deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = (-2928);
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      String string0 = "ID1ID2";
      int int1 = 4;
      try { 
        gzipSource0.checkEqual(string0, int1, int0);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0xfffff490 != expected 0x000004
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = null;
      // Undeclared exception!
      try { 
        gzipSource0.consumeHeader(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      String string0 = "H[P";
      int int0 = (-2551);
      int int1 = 0;
      try { 
        gzipSource0.checkEqual(string0, int0, int1);
      } catch(IOException e) {
         //
         // H[P: actual 0x000000 != expected 0xfffff609
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      Deadline deadline0 = Deadline.NONE;
      // Undeclared exception!
      try { 
        gzipSource0.close(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      int int0 = (-5038);
      Deadline deadline0 = new Deadline();
      gzipSource0.require(int0, deadline0);
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      int int0 = 1;
      OkBuffer okBuffer0 = gzipSource0.buffer.writeByte(int0);
      long long0 = 8L;
      long long1 = 2048L;
      // Undeclared exception!
      try { 
        gzipSource0.updateCrc(okBuffer0, long0, long1);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.zip.CRC32", e);
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      String string0 = "";
      int int0 = (-1699);
      byte byte0 = (byte)0;
      GzipSource.SECTION_HEADER = byte0;
      gzipSource0.checkEqual(string0, int0, int0);
      GzipSource.SECTION_TRAILER = gzipSource0.FHCRC;
      Deadline deadline0 = null;
      gzipSource0.require(int0, deadline0);
      // Undeclared exception!
      try { 
        gzipSource0.close(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      boolean boolean0 = true;
      Inflater inflater0 = new Inflater(boolean0);
      Segment segment0 = okBuffer0.head;
      okBuffer0.head = segment0;
      InflaterSource inflaterSource0 = new InflaterSource(okBuffer0, inflater0, okBuffer0);
      InflaterSource inflaterSource1 = new InflaterSource(inflaterSource0, inflater0);
      GzipSource gzipSource0 = new GzipSource(inflaterSource1);
      Deadline deadline0 = new Deadline();
      inflaterSource1.close(deadline0);
      int int0 = 0;
      Deadline deadline1 = Deadline.NONE;
      gzipSource0.require(int0, deadline1);
      long long0 = gzipSource0.read(okBuffer0, int0, deadline1);
      long long1 = 674L;
      long long2 = 10L;
      // Undeclared exception!
      try { 
        gzipSource0.updateCrc(okBuffer0, long1, long2);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = null;
      long long0 = 1L;
      Deadline deadline0 = new Deadline();
      long long1 = 8L;
      long long2 = (-1906L);
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer0, long2, deadline0);
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -1906
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      Source source0 = null;
      GzipSource gzipSource0 = null;
      try {
        gzipSource0 = new GzipSource(source0);
      } catch(IllegalArgumentException e) {
         //
         // source == null
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      byte byte0 = (byte) (-117);
      Deadline deadline0 = new Deadline();
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      Deadline deadline1 = deadline0.start(gzipSource0.SECTION_BODY, timeUnit0);
      // Undeclared exception!
      try { 
        gzipSource0.seek(byte0, deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      byte byte0 = (byte)73;
      byte byte1 = (byte) (-8);
      byte byte2 = (byte)0;
      GzipSource.FEXTRA = byte2;
      GzipSource.SECTION_DONE = byte1;
      Deadline deadline0 = new Deadline();
      // Undeclared exception!
      try { 
        gzipSource0.seek(byte0, deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      int int0 = 2547;
      Deadline deadline0 = Deadline.NONE;
      // Undeclared exception!
      try { 
        gzipSource0.require(int0, deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      GzipSource gzipSource0 = new GzipSource(okBuffer1);
      long long0 = (-867L);
      long long1 = 0L;
      gzipSource0.updateCrc(okBuffer1, long0, long1);
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      OkBuffer okBuffer1 = okBuffer0.writeShort(gzipSource0.FNAME);
      OkBuffer okBuffer2 = okBuffer1.writeInt(gzipSource0.SECTION_HEADER);
      GzipSource gzipSource1 = new GzipSource(okBuffer2);
      long long0 = 0L;
      gzipSource1.updateCrc(okBuffer2, long0, long0);
      short short0 = okBuffer2.readShort();
      Deadline deadline0 = new Deadline();
      long long1 = 2L;
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      int int0 = 50;
      OkBuffer okBuffer3 = okBuffer1.writeInt(int0);
      Deadline deadline1 = deadline0.start(long1, timeUnit0);
      try { 
        gzipSource1.consumeHeader(deadline1);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      GzipSource gzipSource1 = new GzipSource(okBuffer0);
      byte byte0 = (byte)1;
      Deadline deadline0 = Deadline.NONE;
      try { 
        gzipSource1.seek(byte0, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 1374;
      OkBuffer okBuffer1 = okBuffer0.writeByte(int0);
      List<Integer> list0 = okBuffer1.segmentSizes();
      int int1 = 1215;
      OkBuffer okBuffer2 = okBuffer1.writeInt(int1);
      GzipSource gzipSource0 = new GzipSource(okBuffer2);
      Deadline deadline0 = Deadline.NONE;
      try { 
        gzipSource0.require(int0, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      GzipSource gzipSource1 = new GzipSource(okBuffer0);
      Deadline deadline0 = Deadline.NONE;
      String string0 = "closed";
      byte byte0 = (byte)85;
      GzipSource.FHCRC = byte0;
      okBuffer0.writeUtf8(string0);
      gzipSource1.section = (int) gzipSource0.SECTION_TRAILER;
      byte byte1 = (byte)60;
      GzipSource.FEXTRA = byte1;
      deadline0.throwIfReached();
      try { 
        gzipSource1.seek(gzipSource0.SECTION_TRAILER, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test32()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      int int0 = 0;
      OkBuffer okBuffer0 = gzipSource0.buffer.writeInt(int0);
      long long0 = 0L;
      long long1 = (-115L);
      gzipSource0.updateCrc(okBuffer0, long0, long1);
      long long2 = 1388L;
      Deadline deadline0 = null;
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer0, long2, deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test33()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      OkBuffer okBuffer1 = okBuffer0.writeShort(gzipSource0.FCOMMENT);
      GzipSource gzipSource1 = new GzipSource(okBuffer1);
      gzipSource1.updateCrc(okBuffer0, gzipSource0.SECTION_TRAILER, gzipSource0.SECTION_HEADER);
      int int0 = 100;
      String string0 = null;
      Deadline deadline0 = null;
      long long0 = gzipSource1.seek(gzipSource0.FCOMMENT, deadline0);
      int int1 = 0;
      try { 
        gzipSource0.checkEqual(string0, gzipSource1.SECTION_DONE, int1);
      } catch(IOException e) {
         //
         // null: actual 0x000000 != expected 0x000003
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test34()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 0;
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      boolean boolean0 = false;
      Inflater inflater0 = new Inflater(boolean0);
      InflaterSource inflaterSource0 = new InflaterSource(okBuffer1, inflater0);
      GzipSource gzipSource0 = new GzipSource(inflaterSource0);
      byte byte0 = (byte)2;
      Deadline deadline0 = new Deadline();
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      Deadline deadline1 = deadline0.start(byte0, timeUnit0);
      try { 
        gzipSource0.seek(byte0, deadline1);
      } catch(IOException e) {
         //
         // java.util.zip.DataFormatException: unknown compression method
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test35()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer;
      GzipSource.FHCRC = gzipSource0.SECTION_DONE;
      int int0 = 4;
      OkBuffer okBuffer1 = okBuffer0.writeByte(int0);
      OkBuffer okBuffer2 = okBuffer1.writeInt(gzipSource0.SECTION_TRAILER);
      GzipSource gzipSource1 = new GzipSource(okBuffer2);
      Deadline deadline0 = new Deadline();
      gzipSource1.close(deadline0);
      OkBuffer okBuffer3 = okBuffer1.writeByte(gzipSource0.SECTION_HEADER);
      // Undeclared exception!
      try { 
        okBuffer1.read(okBuffer3, gzipSource1.FCOMMENT, deadline0);
      } catch(IllegalArgumentException e) {
         //
         // source == this
         //
         verifyException("com.squareup.okhttp.internal.bytes.OkBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test36()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = (-2054);
      OkBuffer okBuffer1 = okBuffer0.writeInt(int0);
      Inflater inflater0 = new Inflater();
      InflaterSource inflaterSource0 = new InflaterSource(okBuffer1, inflater0);
      GzipSource gzipSource0 = new GzipSource(inflaterSource0);
      Deadline deadline0 = Deadline.NONE;
      try { 
        gzipSource0.consumeTrailer(deadline0);
      } catch(IOException e) {
         //
         // java.util.zip.DataFormatException: incorrect header check
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test37()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = new OkBuffer();
      long long0 = 205L;
      int int0 = (-2380);
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      long long1 = 5964L;
      // Undeclared exception!
      try { 
        gzipSource0.updateCrc(okBuffer0, long0, long1);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.zip.CRC32", e);
      }
  }

  @Test(timeout = 11000)
  public void test38()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      GzipSource.SECTION_HEADER = gzipSource0.SECTION_BODY;
      GzipSource gzipSource1 = new GzipSource(gzipSource0);
      gzipSource1.section = (int) gzipSource0.SECTION_HEADER;
      Deadline deadline0 = new Deadline();
      try { 
        gzipSource1.consumeTrailer(deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test39()  throws Throwable  {
      long long0 = 4L;
      System.setCurrentTimeMillis(long0);
      OkBuffer okBuffer0 = new OkBuffer();
      int int0 = 702;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int0);
      OkBuffer okBuffer2 = okBuffer1.writeInt(int0);
      int int1 = 1952257861;
      OkBuffer okBuffer3 = okBuffer2.writeByte(int1);
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      GzipSource gzipSource0 = new GzipSource(okBuffer3);
      long long1 = 10L;
      Deadline deadline0 = null;
      try { 
        gzipSource0.read(okBuffer1, long1, deadline0);
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test40()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      String string0 = "com.squareup.okhttp.internal.bytes.Deadline$1";
      okBuffer0.writeUtf8(string0);
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      int int0 = 894;
      gzipSource0.section = int0;
      String string1 = "com.squareup.okhttp.internal.bytes.GzipSource";
      Deadline deadline0 = new Deadline();
      long long0 = (-1866L);
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      long long1 = gzipSource0.read(okBuffer0, gzipSource0.SECTION_BODY, deadline0);
      Deadline deadline1 = deadline0.start(long0, timeUnit0);
      try { 
        gzipSource0.consumeHeader(deadline1);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x00636f != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test41()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer.writeInt(gzipSource0.FCOMMENT);
      OkBuffer okBuffer1 = okBuffer0.writeShort(gzipSource0.FNAME);
      OkBuffer okBuffer2 = okBuffer1.writeInt(gzipSource0.SECTION_HEADER);
      GzipSource gzipSource1 = new GzipSource(okBuffer2);
      Deadline deadline0 = Deadline.NONE;
      try { 
        gzipSource1.consumeTrailer(deadline0);
      } catch(IOException e) {
         //
         // CRC: actual 0x000000 != expected 0x4000000
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test42()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      String string0 = "com.squareup.okhttp.internal.bytes.Deadline$1";
      okBuffer0.writeUtf8(string0);
      GzipSource gzipSource0 = new GzipSource(okBuffer0);
      gzipSource0.section = (int) gzipSource0.FHCRC;
      String string1 = "com.squareup.okhttp.internal.bytes.GzipSource";
      Deadline deadline0 = new Deadline();
      long long0 = (-1866L);
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      CRC32 cRC32_0 = gzipSource0.crc;
      gzipSource0.crc = cRC32_0;
      try { 
        gzipSource0.read(okBuffer0, gzipSource0.SECTION_BODY, deadline0);
      } catch(IOException e) {
         //
         // java.util.zip.DataFormatException: invalid distance too far back
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test43()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer.writeShort(gzipSource0.FNAME);
      OkBuffer okBuffer1 = okBuffer0.writeInt(gzipSource0.SECTION_HEADER);
      GzipSource gzipSource1 = new GzipSource(okBuffer1);
      long long0 = 0L;
      gzipSource1.updateCrc(okBuffer1, long0, long0);
      short short0 = okBuffer1.readShort();
      Deadline deadline0 = new Deadline();
      long long1 = 2L;
      long long2 = 532L;
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      Deadline deadline1 = deadline0.start(long2, timeUnit0);
      TimeUnit timeUnit1 = TimeUnit.MINUTES;
      int int0 = 50;
      OkBuffer okBuffer2 = okBuffer0.writeInt(int0);
      // Undeclared exception!
      try { 
        gzipSource0.consumeTrailer(deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test44()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      String string0 = "byteCount < 2: ";
      int int0 = (-2124);
      gzipSource0.checkEqual(string0, int0, int0);
      GzipSource.SECTION_HEADER = gzipSource0.FHCRC;
      byte byte0 = (byte)0;
      GzipSource.SECTION_TRAILER = gzipSource0.FNAME;
      GzipSource.SECTION_TRAILER = byte0;
      byte byte1 = (byte)0;
      String string1 = "MKi";
      int int1 = 696;
      gzipSource0.checkEqual(string1, int1, int1);
      int int2 = 0;
      OkBuffer okBuffer0 = gzipSource0.buffer.writeByte(int2);
      int int3 = 97;
      OkBuffer okBuffer1 = okBuffer0.writeShort(int3);
      long long0 = 3L;
      Deadline deadline0 = new Deadline();
      OkBuffer okBuffer2 = okBuffer1.writeInt(gzipSource0.FEXTRA);
      int int4 = 1231;
      OkBuffer okBuffer3 = okBuffer0.writeShort(int4);
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      OkBuffer okBuffer4 = okBuffer0.writeByte(gzipSource0.SECTION_HEADER);
      long long1 = gzipSource0.seek(byte1, deadline0);
      int int5 = okBuffer1.readInt();
      // Undeclared exception!
      try { 
        gzipSource0.read(okBuffer1, long0, deadline0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test45()  throws Throwable  {
      byte byte0 = (byte)0;
      Deadline deadline0 = new Deadline();
      GzipSource.SECTION_HEADER = byte0;
      Deadline deadline1 = Deadline.NONE;
      deadline1.throwIfReached();
      String string0 = "";
      int int0 = 0;
      int int1 = (-1769);
      OkBuffer okBuffer0 = new OkBuffer();
      OkBuffer okBuffer1 = okBuffer0.writeShort(byte0);
      OkBuffer okBuffer2 = okBuffer1.writeShort(int0);
      int int2 = 1415;
      OkBuffer okBuffer3 = okBuffer0.writeInt(byte0);
      GzipSource gzipSource0 = new GzipSource(okBuffer3);
      int int3 = gzipSource0.section;
      gzipSource0.consumeTrailer(deadline1);
      long long0 = gzipSource0.read(okBuffer1, byte0, deadline1);
      long long1 = 8L;
      long long2 = (-76L);
      System.setCurrentTimeMillis(long2);
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      // Undeclared exception!
      try { 
        deadline1.start(gzipSource0.SECTION_HEADER, timeUnit0);
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.bytes.Deadline$1", e);
      }
  }

  @Test(timeout = 11000)
  public void test46()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer.writeInt(gzipSource0.FCOMMENT);
      OkBuffer okBuffer1 = okBuffer0.writeShort(gzipSource0.FNAME);
      OkBuffer okBuffer2 = okBuffer1.writeInt(gzipSource0.SECTION_HEADER);
      GzipSource gzipSource1 = new GzipSource(okBuffer2);
      long long0 = 0L;
      gzipSource1.updateCrc(okBuffer2, long0, long0);
      short short0 = okBuffer2.readShort();
      Deadline deadline0 = new Deadline();
      long long1 = 2L;
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      GzipSource.FHCRC = gzipSource0.SECTION_DONE;
      int int0 = 50;
      OkBuffer okBuffer3 = okBuffer1.writeInt(int0);
      Deadline deadline1 = deadline0.start(long1, timeUnit0);
      try { 
        gzipSource1.consumeHeader(deadline1);
      } catch(IOException e) {
         //
         // ID1ID2: actual 0x000004 != expected 0x001f8b
         //
         verifyException("com.squareup.okhttp.internal.bytes.GzipSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test47()  throws Throwable  {
      OkBuffer okBuffer0 = new OkBuffer();
      boolean boolean0 = false;
      Inflater inflater0 = new Inflater(boolean0);
      InflaterSource inflaterSource0 = new InflaterSource(okBuffer0, inflater0);
      InflaterSource inflaterSource1 = new InflaterSource(inflaterSource0, inflater0, okBuffer0);
      Deadline deadline0 = new Deadline();
      long long0 = 2804L;
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      Deadline deadline1 = deadline0.start(long0, timeUnit0);
      inflaterSource0.close(deadline0);
      GzipSource gzipSource0 = new GzipSource(inflaterSource1);
      Deadline deadline2 = new Deadline();
      List<Integer> list0 = okBuffer0.segmentSizes();
      inflaterSource1.close(deadline2);
      GzipSource gzipSource1 = new GzipSource(gzipSource0);
      OkBuffer okBuffer1 = okBuffer0.writeByte(gzipSource0.SECTION_BODY);
      Deadline deadline3 = Deadline.NONE;
      // Undeclared exception!
      try { 
        gzipSource1.consumeHeader(deadline3);
      } catch(IllegalStateException e) {
         //
         // closed
         //
         verifyException("com.squareup.okhttp.internal.bytes.InflaterSource", e);
      }
  }

  @Test(timeout = 11000)
  public void test48()  throws Throwable  {
      GzipSource gzipSource0 = new GzipSource();
      OkBuffer okBuffer0 = gzipSource0.buffer.writeInt(gzipSource0.FCOMMENT);
      OkBuffer okBuffer1 = okBuffer0.writeShort(gzipSource0.FNAME);
      OkBuffer okBuffer2 = okBuffer1.writeInt(gzipSource0.SECTION_HEADER);
      GzipSource gzipSource1 = new GzipSource(okBuffer2);
      long long0 = 0L;
      gzipSource1.updateCrc(okBuffer2, long0, long0);
      short short0 = okBuffer2.readShort();
      Deadline deadline0 = new Deadline();
      long long1 = 2L;
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      long long2 = (-1282L);
      okBuffer2.byteCount = long2;
      int int0 = 50;
      OkBuffer okBuffer3 = okBuffer1.writeInt(int0);
      Deadline deadline1 = deadline0.start(long1, timeUnit0);
      // Undeclared exception!
      try { 
        gzipSource1.consumeHeader(deadline1);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.squareup.okhttp.internal.Util", e);
      }
  }
}
