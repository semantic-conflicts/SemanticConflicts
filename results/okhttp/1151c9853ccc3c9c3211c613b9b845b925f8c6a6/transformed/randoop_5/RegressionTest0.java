import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_BODY = (byte) 0;
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        com.squareup.okhttp.internal.bytes.GzipSource.FCOMMENT = (byte) 0;
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        com.squareup.okhttp.internal.bytes.GzipSource.FEXTRA = (byte) 10;
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        com.squareup.okhttp.internal.bytes.GzipSource.FHCRC = (byte) -1;
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        byte byte0 = com.squareup.okhttp.internal.bytes.GzipSource.SECTION_DONE;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + byte0 + "' != '" + (byte) 3 + "'", byte0 == (byte) 3);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_BODY = (byte) -1;
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        byte byte0 = com.squareup.okhttp.internal.bytes.GzipSource.SECTION_TRAILER;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + byte0 + "' != '" + (byte) 2 + "'", byte0 == (byte) 2);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.Deadline deadline3 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.lang.Class<?> wildcardClass1 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_DONE = (byte) -1;
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        byte byte0 = com.squareup.okhttp.internal.bytes.GzipSource.SECTION_HEADER;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + byte0 + "' != '" + (byte) 0 + "'", byte0 == (byte) 0);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline3 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long4 = gzipSource0.seek((byte) 2, deadline3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline5 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline6 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline4 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        com.squareup.okhttp.internal.bytes.GzipSource.FNAME = (byte) 10;
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer2 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline4 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long5 = gzipSource0.read(okBuffer2, 100L, deadline4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        byte byte0 = com.squareup.okhttp.internal.bytes.GzipSource.FCOMMENT;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + byte0 + "' != '" + (byte) 0 + "'", byte0 == (byte) 0);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_BODY = (byte) 10;
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_DONE = (byte) 3;
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer6 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer6, (long) (byte) -1, (long) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_HEADER = (byte) 2;
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        byte byte0 = com.squareup.okhttp.internal.bytes.GzipSource.FEXTRA;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + byte0 + "' != '" + (byte) 10 + "'", byte0 == (byte) 10);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long9 = gzipSource6.seek((byte) -1, deadline8);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.consumeHeader(deadline8);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline5 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long12 = gzipSource0.seek((byte) -1, deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_DONE = (byte) 0;
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        com.squareup.okhttp.internal.bytes.GzipSource.FEXTRA = (byte) 0;
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline6 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long7 = gzipSource0.seek((byte) 0, deadline6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        byte byte0 = com.squareup.okhttp.internal.bytes.GzipSource.SECTION_BODY;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + byte0 + "' != '" + (byte) 10 + "'", byte0 == (byte) 10);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline4 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_TRAILER = (byte) 10;
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", (int) '#', 100);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000064 != expected 0x000023");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer5, (long) 0, (long) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer1 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer1, 0L, (long) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long8 = gzipSource0.read(okBuffer5, (-1L), deadline7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: byteCount < 0: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline6 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long7 = gzipSource0.read(okBuffer4, (long) (byte) 3, deadline6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer1 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline3 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long4 = gzipSource0.read(okBuffer1, (-1L), deadline3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: byteCount < 0: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer6 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer6, (long) 1, (long) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        com.squareup.okhttp.internal.bytes.GzipSource.FEXTRA = (byte) 3;
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        com.squareup.okhttp.internal.bytes.GzipSource.FHCRC = (byte) 3;
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline5 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (short) 100, deadline5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_HEADER = (byte) 3;
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", (int) (byte) 3, (-1));
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0xffffffff != expected 0x000003");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_DONE = (byte) 2;
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline6 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass2 = inflater1.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.consumeTrailer(deadline7);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        com.squareup.okhttp.internal.bytes.GzipSource.FNAME = (byte) -1;
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        com.squareup.okhttp.internal.bytes.GzipSource.FNAME = (byte) 100;
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require(1, deadline8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        byte byte0 = com.squareup.okhttp.internal.bytes.GzipSource.FHCRC;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + byte0 + "' != '" + (byte) 3 + "'", byte0 == (byte) 3);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer5, (long) (-1), (long) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        com.squareup.okhttp.internal.bytes.GzipSource.FNAME = (byte) 3;
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_TRAILER = (byte) 1;
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long13 = gzipSource0.seek((byte) 2, deadline12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_DONE = (byte) 1;
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        com.squareup.okhttp.internal.bytes.GzipSource.FCOMMENT = (byte) -1;
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        com.squareup.okhttp.internal.bytes.GzipSource.FNAME = (byte) 1;
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_DONE = (byte) 100;
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer4, (long) (byte) 1, (long) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_BODY = (byte) 3;
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer11, (long) (-1), 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.require(2, deadline10);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = null;
        gzipSource0.inflaterSource = inflaterSource3;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) inflaterSource3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: source == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Deadline deadline6 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long7 = gzipSource0.seek((byte) 0, deadline6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer11, (long) 0, 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline5 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long6 = gzipSource0.seek((byte) 10, deadline5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater4 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline6 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long7 = gzipSource0.seek((byte) 2, deadline6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater4);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer3 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer3, (long) 10, (long) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer6 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long9 = gzipSource0.read(okBuffer6, 1L, deadline8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = null;
        gzipSource0.inflaterSource = inflaterSource3;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer5, (long) (short) 100, 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long8 = gzipSource0.seek((byte) 3, deadline7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long11 = gzipSource0.read(okBuffer8, (long) (byte) 100, deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        com.squareup.okhttp.internal.bytes.GzipSource.FCOMMENT = (byte) 1;
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_HEADER = (byte) 0;
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource0.buffer = okBuffer8;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_TRAILER = (byte) 3;
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer6 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer6, (long) 2, 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer6 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        long long9 = gzipSource0.read(okBuffer6, (long) 100, deadline8);
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer7, 1L, (long) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Deadline deadline6 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (short) 10, deadline6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        com.squareup.okhttp.internal.bytes.GzipSource.FCOMMENT = (byte) 2;
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", (-1), 0);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000000 != expected 0xffffffff");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.Deadline deadline9 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_HEADER = (byte) 1;
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        com.squareup.okhttp.internal.bytes.Deadline deadline6 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline5 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_HEADER = (byte) 10;
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 10 + "'", int3 == 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (byte) 1, deadline12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 10 + "'", int3 == 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        com.squareup.okhttp.internal.bytes.GzipSource.FEXTRA = (byte) 100;
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_TRAILER = (byte) 2;
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource8.require(3, deadline10);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 10 + "'", int3 == 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource9.consumeTrailer(deadline10);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 10 + "'", int3 == 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        com.squareup.okhttp.internal.bytes.GzipSource.FCOMMENT = (byte) 10;
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.Deadline deadline9 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long10 = gzipSource0.seek((byte) 0, deadline9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        com.squareup.okhttp.internal.bytes.GzipSource.FHCRC = (byte) 1;
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.Inflater inflater14 = gzipSource13.inflater;
        gzipSource0.inflater = inflater14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        gzipSource16.section = (byte) -1;
        java.util.zip.CRC32 cRC32_22 = null;
        gzipSource16.crc = cRC32_22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_25 = null;
        gzipSource24.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        java.util.zip.Inflater inflater34 = gzipSource33.inflater;
        gzipSource24.inflater = inflater34;
        gzipSource16.inflater = inflater34;
        gzipSource0.inflater = inflater34;
        com.squareup.okhttp.internal.bytes.Deadline deadline38 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 10 + "'", int3 == 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater34);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long9 = gzipSource0.seek((byte) 100, deadline8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 10 + "'", int3 == 10);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.Inflater inflater14 = gzipSource13.inflater;
        gzipSource0.inflater = inflater14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        gzipSource16.section = (byte) -1;
        java.util.zip.CRC32 cRC32_22 = null;
        gzipSource16.crc = cRC32_22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_25 = null;
        gzipSource24.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        java.util.zip.Inflater inflater34 = gzipSource33.inflater;
        gzipSource24.inflater = inflater34;
        gzipSource16.inflater = inflater34;
        gzipSource0.inflater = inflater34;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer38 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline40 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long41 = gzipSource0.read(okBuffer38, (long) (-1), deadline40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: byteCount < 0: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 10 + "'", int3 == 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater34);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.Inflater inflater14 = gzipSource13.inflater;
        gzipSource0.inflater = inflater14;
        com.squareup.okhttp.internal.bytes.Deadline deadline17 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long18 = gzipSource0.seek((byte) 3, deadline17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 10 + "'", int3 == 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline6 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long7 = gzipSource0.seek((byte) -1, deadline6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_HEADER = (byte) -1;
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_DONE = (byte) 10;
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        com.squareup.okhttp.internal.bytes.GzipSource.FCOMMENT = (byte) 100;
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        byte byte0 = com.squareup.okhttp.internal.bytes.GzipSource.FNAME;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + byte0 + "' != '" + (byte) 1 + "'", byte0 == (byte) 1);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline6 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (short) 10, deadline6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: source == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.lang.Class<?> wildcardClass11 = gzipSource10.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource0.inflaterSource;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = inflaterSource14.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        com.squareup.okhttp.internal.bytes.GzipSource.FEXTRA = (byte) -1;
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline19 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        com.squareup.okhttp.internal.bytes.GzipSource.FHCRC = (byte) 2;
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource8.require((int) (short) 10, deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_BODY = (byte) 100;
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.Inflater inflater14 = gzipSource13.inflater;
        gzipSource0.inflater = inflater14;
        java.lang.Class<?> wildcardClass16 = inflater14.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        java.util.zip.Inflater inflater25 = gzipSource24.inflater;
        gzipSource15.inflater = inflater25;
        gzipSource14.inflater = inflater25;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer28 = gzipSource14.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline30 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long31 = gzipSource0.read(okBuffer28, (long) (-1), deadline30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: byteCount < 0: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer28);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline3 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long4 = gzipSource0.seek((byte) 3, deadline3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", (-1), (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000061 != expected 0xffffffff");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater4 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline5 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater4);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer14 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        int int19 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.Source source20 = gzipSource15.source;
        gzipSource15.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer23 = gzipSource15.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer23, (long) (short) 0, (long) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer23);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        int int11 = gzipSource7.section;
        com.squareup.okhttp.internal.bytes.Source source12 = gzipSource7.source;
        gzipSource7.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer15 = gzipSource7.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline17 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long18 = gzipSource0.read(okBuffer15, (long) 1, deadline17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer15);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        java.lang.Class<?> wildcardClass8 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline9 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource0.inflaterSource;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) inflaterSource22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: source == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer14 = gzipSource0.buffer;
        java.lang.Class<?> wildcardClass15 = okBuffer14.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        com.squareup.okhttp.internal.bytes.GzipSource.FHCRC = (byte) 100;
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        com.squareup.okhttp.internal.bytes.GzipSource.FEXTRA = (byte) 2;
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_11 = gzipSource0.crc;
        int int12 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource14.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        gzipSource17.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource17);
        java.util.zip.Inflater inflater24 = gzipSource23.inflater;
        gzipSource14.inflater = inflater24;
        gzipSource13.inflater = inflater24;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer27 = gzipSource13.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline29 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long30 = gzipSource0.read(okBuffer27, (long) (short) 100, deadline29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer27);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_BODY = (byte) 1;
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.consumeTrailer(deadline8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource11.inflaterSource;
        gzipSource0.source = gzipSource11;
        com.squareup.okhttp.internal.bytes.Deadline deadline19 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer2 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline4 = null;
        long long5 = gzipSource0.read(okBuffer2, 0L, deadline4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.Deadline deadline4 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.Deadline deadline14 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Deadline deadline6 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (byte) 2, deadline6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        com.squareup.okhttp.internal.bytes.Source source0 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource(source0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: source == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long12 = gzipSource0.seek((byte) 3, deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        com.squareup.okhttp.internal.bytes.GzipSource.FNAME = (byte) 0;
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        com.squareup.okhttp.internal.bytes.GzipSource.FHCRC = (byte) 10;
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline6 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        com.squareup.okhttp.internal.bytes.Deadline deadline6 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource11.inflaterSource;
        gzipSource0.source = gzipSource11;
        com.squareup.okhttp.internal.bytes.Deadline deadline19 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource11.close(deadline19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource6.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource6.inflaterSource;
        java.util.zip.Inflater inflater10 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = gzipSource6.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer11, 1L, (long) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer11);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater4 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline6 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer5);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        java.util.zip.Inflater inflater9 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_10 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_10);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        int int9 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource5.source;
        gzipSource5.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer13 = gzipSource5.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer14 = gzipSource5.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer14, (long) 'a', (long) (byte) 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer14);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Deadline deadline22 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        java.util.zip.Inflater inflater9 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_10 = gzipSource0.crc;
        java.lang.Class<?> wildcardClass11 = cRC32_10.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource7.inflaterSource;
        gzipSource7.section = (byte) 100;
        int int14 = gzipSource7.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource15.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_23 = null;
        gzipSource22.crc = cRC32_23;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource22.inflaterSource;
        java.util.zip.CRC32 cRC32_26 = gzipSource22.crc;
        java.util.zip.Inflater inflater27 = gzipSource22.inflater;
        gzipSource22.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source32 = gzipSource22.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource33.inflaterSource;
        gzipSource22.source = gzipSource33;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater46 = null;
        gzipSource45.inflater = inflater46;
        int int48 = gzipSource45.section;
        gzipSource45.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource45);
        java.util.zip.Inflater inflater52 = gzipSource51.inflater;
        gzipSource42.inflater = inflater52;
        gzipSource41.inflater = inflater52;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer55 = gzipSource41.buffer;
        gzipSource22.updateCrc(okBuffer55, (long) '#', (long) (-1));
        gzipSource15.updateCrc(okBuffer55, (long) 0, 0L);
        gzipSource7.buffer = okBuffer55;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer55, (long) (-1), (long) 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer55);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource0.inflaterSource;
        java.lang.Class<?> wildcardClass10 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource11.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource19.inflater = inflater29;
        gzipSource11.inflater = inflater29;
        gzipSource10.inflater = inflater29;
        gzipSource0.inflater = inflater29;
        java.lang.Class<?> wildcardClass34 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", (int) (short) 1, 3);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000003 != expected 0x000001");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        gzipSource6.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.consumeHeader(deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource11.inflaterSource;
        gzipSource0.source = gzipSource11;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_21 = null;
        gzipSource20.crc = cRC32_21;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        gzipSource23.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource23);
        java.util.zip.Inflater inflater30 = gzipSource29.inflater;
        gzipSource20.inflater = inflater30;
        gzipSource19.inflater = inflater30;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer33 = gzipSource19.buffer;
        gzipSource0.updateCrc(okBuffer33, (long) '#', (long) (-1));
        com.squareup.okhttp.internal.bytes.Deadline deadline38 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long39 = gzipSource0.seek((byte) 3, deadline38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer33);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.Deadline deadline1 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        java.lang.Class<?> wildcardClass9 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.Deadline deadline9 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.close(deadline9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        gzipSource3.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource3);
        java.util.zip.Inflater inflater10 = gzipSource9.inflater;
        gzipSource0.inflater = inflater10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        gzipSource12.section = (byte) 100;
        int int19 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_21 = null;
        gzipSource20.crc = cRC32_21;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource20.inflaterSource;
        java.util.zip.CRC32 cRC32_24 = gzipSource20.crc;
        java.util.zip.CRC32 cRC32_25 = null;
        gzipSource20.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource27.inflaterSource;
        java.util.zip.CRC32 cRC32_31 = gzipSource27.crc;
        java.util.zip.Inflater inflater32 = gzipSource27.inflater;
        gzipSource27.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source37 = gzipSource27.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = gzipSource38.inflaterSource;
        gzipSource27.source = gzipSource38;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_48 = null;
        gzipSource47.crc = cRC32_48;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater51 = null;
        gzipSource50.inflater = inflater51;
        int int53 = gzipSource50.section;
        gzipSource50.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource50);
        java.util.zip.Inflater inflater57 = gzipSource56.inflater;
        gzipSource47.inflater = inflater57;
        gzipSource46.inflater = inflater57;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = gzipSource46.buffer;
        gzipSource27.updateCrc(okBuffer60, (long) '#', (long) (-1));
        gzipSource20.updateCrc(okBuffer60, (long) 0, 0L);
        gzipSource12.buffer = okBuffer60;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer60, (long) 0, (long) (byte) 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer60);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_TRAILER = (byte) -1;
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_35 = null;
        gzipSource34.crc = cRC32_35;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater38 = null;
        gzipSource37.inflater = inflater38;
        int int40 = gzipSource37.section;
        gzipSource37.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource37);
        java.util.zip.Inflater inflater44 = gzipSource43.inflater;
        gzipSource34.inflater = inflater44;
        gzipSource33.inflater = inflater44;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer47 = gzipSource33.buffer;
        gzipSource0.buffer = okBuffer47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer47);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource49.checkEqual("hi!", 10, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0xffffffff != expected 0x00000a");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer47);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource8.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer22 = gzipSource8.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline24 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long25 = gzipSource0.read(okBuffer22, (long) (byte) 2, deadline24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer22);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long9 = gzipSource0.seek((byte) 10, deadline8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource8.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_18 = null;
        gzipSource17.crc = cRC32_18;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource20 = gzipSource17.inflaterSource;
        java.util.zip.CRC32 cRC32_21 = gzipSource17.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource22.inflaterSource;
        gzipSource22.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        gzipSource29.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource29);
        java.util.zip.Inflater inflater36 = gzipSource35.inflater;
        gzipSource22.inflater = inflater36;
        gzipSource17.inflater = inflater36;
        gzipSource8.inflater = inflater36;
        java.util.zip.CRC32 cRC32_40 = gzipSource8.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater46 = null;
        gzipSource45.inflater = inflater46;
        int int48 = gzipSource45.section;
        gzipSource45.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource45);
        java.util.zip.Inflater inflater52 = gzipSource51.inflater;
        gzipSource42.inflater = inflater52;
        gzipSource41.inflater = inflater52;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer55 = gzipSource41.buffer;
        gzipSource8.buffer = okBuffer55;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer55);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer55, (long) (byte) 100, (long) 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer55);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource33.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource47.inflaterSource;
        gzipSource47.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        gzipSource54.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource54);
        java.util.zip.Inflater inflater61 = gzipSource60.inflater;
        gzipSource47.inflater = inflater61;
        gzipSource42.inflater = inflater61;
        gzipSource33.inflater = inflater61;
        java.util.zip.CRC32 cRC32_65 = gzipSource33.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_68 = null;
        gzipSource67.crc = cRC32_68;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater71 = null;
        gzipSource70.inflater = inflater71;
        int int73 = gzipSource70.section;
        gzipSource70.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource70);
        java.util.zip.Inflater inflater77 = gzipSource76.inflater;
        gzipSource67.inflater = inflater77;
        gzipSource66.inflater = inflater77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource66.buffer;
        gzipSource33.buffer = okBuffer80;
        gzipSource0.updateCrc(okBuffer80, (long) '#', (long) (short) 0);
        com.squareup.okhttp.internal.bytes.Deadline deadline86 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (byte) 1, deadline86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater2 = null;
        gzipSource1.inflater = inflater2;
        int int4 = gzipSource1.section;
        gzipSource1.section = (byte) -1;
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource1.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource1.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Deadline deadline24 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long25 = gzipSource0.seek((byte) -1, deadline24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater2 = null;
        gzipSource1.inflater = inflater2;
        int int4 = gzipSource1.section;
        gzipSource1.section = (byte) -1;
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource1.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource1.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource23.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        java.util.zip.Inflater inflater35 = gzipSource30.inflater;
        gzipSource30.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source40 = gzipSource30.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource41.inflaterSource;
        gzipSource30.source = gzipSource41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        java.util.zip.Inflater inflater60 = gzipSource59.inflater;
        gzipSource50.inflater = inflater60;
        gzipSource49.inflater = inflater60;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer63 = gzipSource49.buffer;
        gzipSource30.updateCrc(okBuffer63, (long) '#', (long) (-1));
        gzipSource23.updateCrc(okBuffer63, (long) 0, 0L);
        gzipSource0.buffer = okBuffer63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_72 = null;
        gzipSource71.crc = cRC32_72;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource74 = gzipSource71.inflaterSource;
        java.util.zip.CRC32 cRC32_75 = gzipSource71.crc;
        java.util.zip.Inflater inflater76 = gzipSource71.inflater;
        java.util.zip.CRC32 cRC32_77 = null;
        gzipSource71.crc = cRC32_77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer79 = null;
        gzipSource71.buffer = okBuffer79;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer81 = null;
        gzipSource71.buffer = okBuffer81;
        gzipSource0.source = gzipSource71;
        com.squareup.okhttp.internal.bytes.Deadline deadline85 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) ' ', deadline85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater76);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource33.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource47.inflaterSource;
        gzipSource47.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        gzipSource54.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource54);
        java.util.zip.Inflater inflater61 = gzipSource60.inflater;
        gzipSource47.inflater = inflater61;
        gzipSource42.inflater = inflater61;
        gzipSource33.inflater = inflater61;
        java.util.zip.CRC32 cRC32_65 = gzipSource33.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_68 = null;
        gzipSource67.crc = cRC32_68;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater71 = null;
        gzipSource70.inflater = inflater71;
        int int73 = gzipSource70.section;
        gzipSource70.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource70);
        java.util.zip.Inflater inflater77 = gzipSource76.inflater;
        gzipSource67.inflater = inflater77;
        gzipSource66.inflater = inflater77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource66.buffer;
        gzipSource33.buffer = okBuffer80;
        gzipSource0.updateCrc(okBuffer80, (long) '#', (long) (short) 0);
        gzipSource0.section = (byte) 2;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        com.squareup.okhttp.internal.bytes.GzipSource.FHCRC = (byte) 0;
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", (int) '#', (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000000 != expected 0x000023");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_TRAILER = (byte) 100;
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource33.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource47.inflaterSource;
        gzipSource47.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        gzipSource54.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource54);
        java.util.zip.Inflater inflater61 = gzipSource60.inflater;
        gzipSource47.inflater = inflater61;
        gzipSource42.inflater = inflater61;
        gzipSource33.inflater = inflater61;
        java.util.zip.CRC32 cRC32_65 = gzipSource33.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_68 = null;
        gzipSource67.crc = cRC32_68;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater71 = null;
        gzipSource70.inflater = inflater71;
        int int73 = gzipSource70.section;
        gzipSource70.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource70);
        java.util.zip.Inflater inflater77 = gzipSource76.inflater;
        gzipSource67.inflater = inflater77;
        gzipSource66.inflater = inflater77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource66.buffer;
        gzipSource33.buffer = okBuffer80;
        gzipSource0.updateCrc(okBuffer80, (long) '#', (long) (short) 0);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer85 = gzipSource0.buffer;
        java.lang.Class<?> wildcardClass86 = okBuffer85.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        java.util.zip.CRC32 cRC32_2 = gzipSource0.crc;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", (int) (byte) 0, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000001 != expected 0x000000");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_2);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        int int30 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline32 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long33 = gzipSource19.seek((byte) -1, deadline32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        gzipSource14.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        com.squareup.okhttp.internal.bytes.Deadline deadline22 = null;
        gzipSource20.require((-1), deadline22);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = null;
        gzipSource24.inflaterSource = inflaterSource31;
        gzipSource20.source = inflaterSource31;
        java.util.zip.CRC32 cRC32_34 = gzipSource20.crc;
        gzipSource0.crc = cRC32_34;
        com.squareup.okhttp.internal.bytes.Deadline deadline36 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_34);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline6 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource0.buffer = okBuffer8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource10.inflaterSource;
        gzipSource10.section = (byte) 100;
        int int17 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource18.inflaterSource;
        java.util.zip.CRC32 cRC32_22 = gzipSource18.crc;
        java.util.zip.CRC32 cRC32_23 = null;
        gzipSource18.crc = cRC32_23;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_26 = null;
        gzipSource25.crc = cRC32_26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource25.inflaterSource;
        java.util.zip.CRC32 cRC32_29 = gzipSource25.crc;
        java.util.zip.Inflater inflater30 = gzipSource25.inflater;
        gzipSource25.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source35 = gzipSource25.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater37 = null;
        gzipSource36.inflater = inflater37;
        int int39 = gzipSource36.section;
        gzipSource36.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = gzipSource36.inflaterSource;
        gzipSource25.source = gzipSource36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_46 = null;
        gzipSource45.crc = cRC32_46;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater49 = null;
        gzipSource48.inflater = inflater49;
        int int51 = gzipSource48.section;
        gzipSource48.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource48);
        java.util.zip.Inflater inflater55 = gzipSource54.inflater;
        gzipSource45.inflater = inflater55;
        gzipSource44.inflater = inflater55;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer58 = gzipSource44.buffer;
        gzipSource25.updateCrc(okBuffer58, (long) '#', (long) (-1));
        gzipSource18.updateCrc(okBuffer58, (long) 0, 0L);
        gzipSource10.buffer = okBuffer58;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer58, (long) 2, (long) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer58);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource0.buffer = okBuffer8;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", (int) (byte) 10, 2);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000002 != expected 0x00000a");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater2 = null;
        gzipSource1.inflater = inflater2;
        int int4 = gzipSource1.section;
        gzipSource1.section = (byte) -1;
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource1.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource1.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Deadline deadline23 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        gzipSource5.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource5);
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource5.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_15 = null;
        gzipSource14.crc = cRC32_15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource14.inflaterSource;
        java.util.zip.CRC32 cRC32_18 = gzipSource14.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        gzipSource19.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater27 = null;
        gzipSource26.inflater = inflater27;
        int int29 = gzipSource26.section;
        gzipSource26.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource26);
        java.util.zip.Inflater inflater33 = gzipSource32.inflater;
        gzipSource19.inflater = inflater33;
        gzipSource14.inflater = inflater33;
        gzipSource5.inflater = inflater33;
        java.util.zip.CRC32 cRC32_37 = gzipSource5.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource39.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        java.util.zip.Inflater inflater49 = gzipSource48.inflater;
        gzipSource39.inflater = inflater49;
        gzipSource38.inflater = inflater49;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer52 = gzipSource38.buffer;
        gzipSource5.buffer = okBuffer52;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer52, 100L, (long) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer52);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.Deadline deadline21 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource10.consumeHeader(deadline21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_TRAILER = (byte) 0;
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long11 = gzipSource0.seek((byte) 1, deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        gzipSource8.inflater = inflater18;
        gzipSource0.inflater = inflater18;
        com.squareup.okhttp.internal.bytes.Deadline deadline22 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require(10, deadline22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater18);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long9 = gzipSource0.seek((byte) 100, deadline8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer2 = null;
        gzipSource0.buffer = okBuffer2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource4.inflaterSource;
        gzipSource4.section = (byte) 100;
        int int11 = gzipSource4.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource12.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource12.inflaterSource;
        java.util.zip.CRC32 cRC32_16 = gzipSource12.crc;
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource12.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource19.inflaterSource;
        java.util.zip.CRC32 cRC32_23 = gzipSource19.crc;
        java.util.zip.Inflater inflater24 = gzipSource19.inflater;
        gzipSource19.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source29 = gzipSource19.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = gzipSource30.inflaterSource;
        gzipSource19.source = gzipSource30;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource39.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        java.util.zip.Inflater inflater49 = gzipSource48.inflater;
        gzipSource39.inflater = inflater49;
        gzipSource38.inflater = inflater49;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer52 = gzipSource38.buffer;
        gzipSource19.updateCrc(okBuffer52, (long) '#', (long) (-1));
        gzipSource12.updateCrc(okBuffer52, (long) 0, 0L);
        gzipSource4.buffer = okBuffer52;
        com.squareup.okhttp.internal.bytes.Deadline deadline61 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long62 = gzipSource0.read(okBuffer52, (long) '#', deadline61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer52);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_4 = gzipSource3.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline5 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource3.consumeTrailer(deadline5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_4);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource0.buffer = okBuffer8;
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require(0, deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) inflaterSource4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: source == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource(source9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: source == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline33 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline2 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        com.squareup.okhttp.internal.bytes.GzipSource.FCOMMENT = (byte) 3;
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        gzipSource0.require((int) (byte) -1, deadline7);
        com.squareup.okhttp.internal.bytes.Deadline deadline9 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_11 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer17 = null;
        gzipSource12.buffer = okBuffer17;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = null;
        gzipSource12.inflaterSource = inflaterSource21;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource12.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource12.buffer = okBuffer24;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        gzipSource27.inflater = inflater37;
        gzipSource26.inflater = inflater37;
        gzipSource12.inflater = inflater37;
        gzipSource0.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.Deadline deadline42 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater9 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource11.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource19.inflater = inflater29;
        gzipSource11.inflater = inflater29;
        gzipSource10.inflater = inflater29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_34 = null;
        gzipSource33.crc = cRC32_34;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = gzipSource33.inflaterSource;
        java.util.zip.CRC32 cRC32_37 = gzipSource33.crc;
        java.util.zip.CRC32 cRC32_38 = null;
        gzipSource33.crc = cRC32_38;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_41 = null;
        gzipSource40.crc = cRC32_41;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource40.inflaterSource;
        java.util.zip.CRC32 cRC32_44 = gzipSource40.crc;
        java.util.zip.Inflater inflater45 = gzipSource40.inflater;
        gzipSource40.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source50 = gzipSource40.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater52 = null;
        gzipSource51.inflater = inflater52;
        int int54 = gzipSource51.section;
        gzipSource51.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource57 = gzipSource51.inflaterSource;
        gzipSource40.source = gzipSource51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_61 = null;
        gzipSource60.crc = cRC32_61;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater64 = null;
        gzipSource63.inflater = inflater64;
        int int66 = gzipSource63.section;
        gzipSource63.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource63);
        java.util.zip.Inflater inflater70 = gzipSource69.inflater;
        gzipSource60.inflater = inflater70;
        gzipSource59.inflater = inflater70;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer73 = gzipSource59.buffer;
        gzipSource40.updateCrc(okBuffer73, (long) '#', (long) (-1));
        gzipSource33.updateCrc(okBuffer73, (long) 0, 0L);
        gzipSource10.buffer = okBuffer73;
        com.squareup.okhttp.internal.bytes.Deadline deadline82 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long83 = gzipSource0.read(okBuffer73, (long) (short) 10, deadline82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer73);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource0.buffer = okBuffer8;
        java.lang.Class<?> wildcardClass10 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        com.squareup.okhttp.internal.bytes.GzipSource.FEXTRA = (byte) 1;
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = null;
        gzipSource0.buffer = okBuffer12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        java.util.zip.Inflater inflater25 = gzipSource24.inflater;
        gzipSource15.inflater = inflater25;
        gzipSource14.inflater = inflater25;
        gzipSource0.inflater = inflater25;
        com.squareup.okhttp.internal.bytes.Deadline deadline29 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater25);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater3 = null;
        gzipSource2.inflater = inflater3;
        int int5 = gzipSource2.section;
        gzipSource2.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource2);
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource2.source;
        gzipSource0.source = gzipSource2;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource2.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.Inflater inflater14 = gzipSource13.inflater;
        gzipSource0.inflater = inflater14;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = null;
        gzipSource0.inflaterSource = inflaterSource16;
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.close(deadline7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater3 = null;
        gzipSource2.inflater = inflater3;
        int int5 = gzipSource2.section;
        gzipSource2.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource2);
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource2.source;
        gzipSource0.source = gzipSource2;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long13 = gzipSource2.seek((byte) 100, deadline12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long13 = gzipSource0.seek((byte) 3, deadline12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline20 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long21 = gzipSource0.seek((byte) 10, deadline20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = null;
        gzipSource0.inflaterSource = inflaterSource10;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        java.util.zip.Inflater inflater14 = gzipSource9.inflater;
        gzipSource9.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source19 = gzipSource9.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource20.inflaterSource;
        gzipSource9.source = gzipSource20;
        gzipSource0.source = gzipSource20;
        com.squareup.okhttp.internal.bytes.Deadline deadline29 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource20.close(deadline29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.Deadline deadline22 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource10.consumeHeader(deadline22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource0.crc = cRC32_5;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        gzipSource27.inflater = inflater37;
        gzipSource26.inflater = inflater37;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource26.buffer;
        gzipSource7.updateCrc(okBuffer40, (long) '#', (long) (-1));
        gzipSource0.updateCrc(okBuffer40, (long) 0, 0L);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", (int) (byte) 10, 100);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000064 != expected 0x00000a");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        java.lang.Class<?> wildcardClass10 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource0.crc = cRC32_5;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        gzipSource27.inflater = inflater37;
        gzipSource26.inflater = inflater37;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource26.buffer;
        gzipSource7.updateCrc(okBuffer40, (long) '#', (long) (-1));
        gzipSource0.updateCrc(okBuffer40, (long) 0, 0L);
        com.squareup.okhttp.internal.bytes.Deadline deadline47 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline5 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long8 = gzipSource0.seek((byte) 10, deadline7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        gzipSource0.source = gzipSource6;
        java.util.zip.CRC32 cRC32_10 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_10);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        java.util.zip.Inflater inflater14 = gzipSource9.inflater;
        gzipSource9.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source19 = gzipSource9.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource20.inflaterSource;
        gzipSource9.source = gzipSource20;
        gzipSource0.source = gzipSource20;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource29 = null;
        gzipSource20.inflaterSource = inflaterSource29;
        com.squareup.okhttp.internal.bytes.Deadline deadline31 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource20.consumeTrailer(deadline31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_HEADER = (byte) 100;
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        java.util.zip.Inflater inflater10 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer11);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource12.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource12.inflaterSource;
        java.util.zip.CRC32 cRC32_16 = gzipSource12.crc;
        java.util.zip.Inflater inflater17 = gzipSource12.inflater;
        java.util.zip.CRC32 cRC32_18 = null;
        gzipSource12.crc = cRC32_18;
        java.util.zip.Inflater inflater20 = gzipSource12.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource21.inflaterSource;
        gzipSource21.section = (byte) 100;
        int int28 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_30 = null;
        gzipSource29.crc = cRC32_30;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource29.inflaterSource;
        java.util.zip.CRC32 cRC32_33 = gzipSource29.crc;
        java.util.zip.CRC32 cRC32_34 = null;
        gzipSource29.crc = cRC32_34;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_37 = null;
        gzipSource36.crc = cRC32_37;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource36.inflaterSource;
        java.util.zip.CRC32 cRC32_40 = gzipSource36.crc;
        java.util.zip.Inflater inflater41 = gzipSource36.inflater;
        gzipSource36.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source46 = gzipSource36.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        gzipSource47.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource53 = gzipSource47.inflaterSource;
        gzipSource36.source = gzipSource47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_57 = null;
        gzipSource56.crc = cRC32_57;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater60 = null;
        gzipSource59.inflater = inflater60;
        int int62 = gzipSource59.section;
        gzipSource59.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource59);
        java.util.zip.Inflater inflater66 = gzipSource65.inflater;
        gzipSource56.inflater = inflater66;
        gzipSource55.inflater = inflater66;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer69 = gzipSource55.buffer;
        gzipSource36.updateCrc(okBuffer69, (long) '#', (long) (-1));
        gzipSource29.updateCrc(okBuffer69, (long) 0, 0L);
        gzipSource21.buffer = okBuffer69;
        gzipSource12.buffer = okBuffer69;
        com.squareup.okhttp.internal.bytes.Deadline deadline79 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long80 = gzipSource0.read(okBuffer69, (long) 2, deadline79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer69);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource0.crc = cRC32_5;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        gzipSource27.inflater = inflater37;
        gzipSource26.inflater = inflater37;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource26.buffer;
        gzipSource7.updateCrc(okBuffer40, (long) '#', (long) (-1));
        gzipSource0.updateCrc(okBuffer40, (long) 0, 0L);
        com.squareup.okhttp.internal.bytes.Source source47 = gzipSource0.source;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", (int) (byte) 1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000020 != expected 0x000001");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source47);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline15 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        com.squareup.okhttp.internal.bytes.GzipSource.FNAME = (byte) 2;
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        gzipSource0.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        gzipSource12.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        gzipSource19.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        java.util.zip.Inflater inflater26 = gzipSource25.inflater;
        gzipSource12.inflater = inflater26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = null;
        gzipSource12.inflaterSource = inflaterSource28;
        gzipSource0.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource31.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource31.inflaterSource;
        java.util.zip.CRC32 cRC32_35 = gzipSource31.crc;
        java.util.zip.Inflater inflater36 = gzipSource31.inflater;
        java.util.zip.CRC32 cRC32_37 = null;
        gzipSource31.crc = cRC32_37;
        java.util.zip.Inflater inflater39 = gzipSource31.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = gzipSource40.inflaterSource;
        gzipSource40.section = (byte) 100;
        int int47 = gzipSource40.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_49 = null;
        gzipSource48.crc = cRC32_49;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource48.inflaterSource;
        java.util.zip.CRC32 cRC32_52 = gzipSource48.crc;
        java.util.zip.CRC32 cRC32_53 = null;
        gzipSource48.crc = cRC32_53;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_56 = null;
        gzipSource55.crc = cRC32_56;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = gzipSource55.inflaterSource;
        java.util.zip.CRC32 cRC32_59 = gzipSource55.crc;
        java.util.zip.Inflater inflater60 = gzipSource55.inflater;
        gzipSource55.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source65 = gzipSource55.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater67 = null;
        gzipSource66.inflater = inflater67;
        int int69 = gzipSource66.section;
        gzipSource66.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource72 = gzipSource66.inflaterSource;
        gzipSource55.source = gzipSource66;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource74 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_76 = null;
        gzipSource75.crc = cRC32_76;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource78 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater79 = null;
        gzipSource78.inflater = inflater79;
        int int81 = gzipSource78.section;
        gzipSource78.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource84 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource78);
        java.util.zip.Inflater inflater85 = gzipSource84.inflater;
        gzipSource75.inflater = inflater85;
        gzipSource74.inflater = inflater85;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer88 = gzipSource74.buffer;
        gzipSource55.updateCrc(okBuffer88, (long) '#', (long) (-1));
        gzipSource48.updateCrc(okBuffer88, (long) 0, 0L);
        gzipSource40.buffer = okBuffer88;
        gzipSource31.buffer = okBuffer88;
        com.squareup.okhttp.internal.bytes.Deadline deadline98 = null;
        long long99 = gzipSource0.read(okBuffer88, (long) (byte) 2, deadline98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long99 + "' != '" + (-1L) + "'", long99 == (-1L));
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        java.util.zip.CRC32 cRC32_2 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline4 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long5 = gzipSource0.seek((byte) 100, deadline4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_2);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline30 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource19.close(deadline30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.Source source14 = gzipSource0.source;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source14);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline9 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.require((int) (short) 1, deadline9);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        com.squareup.okhttp.internal.bytes.GzipSource.SECTION_BODY = (byte) 2;
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource11.consumeHeader(deadline12);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", (-1), 100);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000064 != expected 0xffffffff");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long12 = gzipSource0.seek((byte) 10, deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater2 = null;
        gzipSource1.inflater = inflater2;
        int int4 = gzipSource1.section;
        gzipSource1.section = (byte) -1;
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource1.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource1.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource23.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        java.util.zip.Inflater inflater35 = gzipSource30.inflater;
        gzipSource30.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source40 = gzipSource30.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource41.inflaterSource;
        gzipSource30.source = gzipSource41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        java.util.zip.Inflater inflater60 = gzipSource59.inflater;
        gzipSource50.inflater = inflater60;
        gzipSource49.inflater = inflater60;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer63 = gzipSource49.buffer;
        gzipSource30.updateCrc(okBuffer63, (long) '#', (long) (-1));
        gzipSource23.updateCrc(okBuffer63, (long) 0, 0L);
        gzipSource0.buffer = okBuffer63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_72 = null;
        gzipSource71.crc = cRC32_72;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource74 = gzipSource71.inflaterSource;
        java.util.zip.CRC32 cRC32_75 = gzipSource71.crc;
        java.util.zip.Inflater inflater76 = gzipSource71.inflater;
        java.util.zip.CRC32 cRC32_77 = null;
        gzipSource71.crc = cRC32_77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer79 = null;
        gzipSource71.buffer = okBuffer79;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer81 = null;
        gzipSource71.buffer = okBuffer81;
        gzipSource0.source = gzipSource71;
        com.squareup.okhttp.internal.bytes.Deadline deadline84 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource71.close(deadline84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater76);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long11 = gzipSource8.seek((byte) -1, deadline10);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource8.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        com.squareup.okhttp.internal.bytes.Deadline deadline30 = null;
        gzipSource28.require((-1), deadline30);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        int int35 = gzipSource32.section;
        gzipSource32.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = null;
        gzipSource32.inflaterSource = inflaterSource39;
        gzipSource28.source = inflaterSource39;
        java.util.zip.CRC32 cRC32_42 = gzipSource28.crc;
        gzipSource8.crc = cRC32_42;
        gzipSource0.crc = cRC32_42;
        java.lang.Class<?> wildcardClass45 = cRC32_42.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource21.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = null;
        gzipSource21.buffer = okBuffer26;
        int int28 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.Source source29 = null;
        gzipSource21.source = source29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.CRC32 cRC32_32 = gzipSource21.crc;
        gzipSource10.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.Source source34 = gzipSource10.source;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source34);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource4.crc = cRC32_5;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.Inflater inflater14 = gzipSource13.inflater;
        gzipSource4.inflater = inflater14;
        gzipSource3.inflater = inflater14;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer17 = gzipSource3.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline19 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long20 = gzipSource0.read(okBuffer17, (long) '4', deadline19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer17);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long12 = gzipSource9.seek((byte) 2, deadline11);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        gzipSource0.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        gzipSource12.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        gzipSource19.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        java.util.zip.Inflater inflater26 = gzipSource25.inflater;
        gzipSource12.inflater = inflater26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = null;
        gzipSource12.inflaterSource = inflaterSource28;
        gzipSource0.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.Deadline deadline32 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long33 = gzipSource12.seek((byte) 3, deadline32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater26);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        gzipSource6.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource11.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource11.inflaterSource;
        java.util.zip.CRC32 cRC32_15 = gzipSource11.crc;
        java.util.zip.Inflater inflater16 = gzipSource11.inflater;
        gzipSource11.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source21 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource22.inflaterSource;
        gzipSource11.source = gzipSource22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource31.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        java.util.zip.Inflater inflater41 = gzipSource40.inflater;
        gzipSource31.inflater = inflater41;
        gzipSource30.inflater = inflater41;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer44 = gzipSource30.buffer;
        gzipSource11.updateCrc(okBuffer44, (long) '#', (long) (-1));
        com.squareup.okhttp.internal.bytes.Deadline deadline49 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long50 = gzipSource6.read(okBuffer44, 100L, deadline49);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer44);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.Inflater inflater40 = gzipSource39.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource39);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource41);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        java.util.zip.CRC32 cRC32_50 = null;
        gzipSource44.crc = cRC32_50;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_53 = null;
        gzipSource52.crc = cRC32_53;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        gzipSource55.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource55);
        java.util.zip.Inflater inflater62 = gzipSource61.inflater;
        gzipSource52.inflater = inflater62;
        gzipSource44.inflater = inflater62;
        gzipSource43.inflater = inflater62;
        gzipSource42.inflater = inflater62;
        gzipSource0.inflater = inflater62;
        com.squareup.okhttp.internal.bytes.Source source68 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source69 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline71 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long72 = gzipSource0.seek((byte) -1, deadline71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source69);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline33 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        java.util.zip.CRC32 cRC32_12 = gzipSource8.crc;
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource8.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        java.util.zip.Inflater inflater20 = gzipSource15.inflater;
        gzipSource15.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source25 = gzipSource15.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater27 = null;
        gzipSource26.inflater = inflater27;
        int int29 = gzipSource26.section;
        gzipSource26.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource26.inflaterSource;
        gzipSource15.source = gzipSource26;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource35.inflater = inflater45;
        gzipSource34.inflater = inflater45;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer48 = gzipSource34.buffer;
        gzipSource15.updateCrc(okBuffer48, (long) '#', (long) (-1));
        gzipSource8.updateCrc(okBuffer48, (long) 0, 0L);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer48, 0L, (long) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer48);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = null;
        gzipSource0.inflaterSource = inflaterSource32;
        java.util.zip.CRC32 cRC32_34 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline35 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater9 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater9);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.Deadline deadline22 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource10.close(deadline22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = null;
        gzipSource30.inflaterSource = inflaterSource37;
        java.util.zip.CRC32 cRC32_39 = gzipSource30.crc;
        gzipSource19.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.Deadline deadline41 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource19.consumeHeader(deadline41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_39);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline9 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long10 = gzipSource0.seek((byte) 2, deadline9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.Inflater inflater14 = gzipSource13.inflater;
        gzipSource0.inflater = inflater14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource16.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource16.inflaterSource;
        java.util.zip.CRC32 cRC32_20 = gzipSource16.crc;
        java.util.zip.CRC32 cRC32_21 = null;
        gzipSource16.crc = cRC32_21;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        java.util.zip.Inflater inflater28 = gzipSource23.inflater;
        gzipSource23.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source33 = gzipSource23.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource40 = gzipSource34.inflaterSource;
        gzipSource23.source = gzipSource34;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_44 = null;
        gzipSource43.crc = cRC32_44;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        java.util.zip.Inflater inflater53 = gzipSource52.inflater;
        gzipSource43.inflater = inflater53;
        gzipSource42.inflater = inflater53;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer56 = gzipSource42.buffer;
        gzipSource23.updateCrc(okBuffer56, (long) '#', (long) (-1));
        gzipSource16.updateCrc(okBuffer56, (long) 0, 0L);
        gzipSource0.updateCrc(okBuffer56, (long) (byte) 3, 0L);
        com.squareup.okhttp.internal.bytes.Deadline deadline66 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer56);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_35 = null;
        gzipSource34.crc = cRC32_35;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater38 = null;
        gzipSource37.inflater = inflater38;
        int int40 = gzipSource37.section;
        gzipSource37.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource37);
        java.util.zip.Inflater inflater44 = gzipSource43.inflater;
        gzipSource34.inflater = inflater44;
        gzipSource33.inflater = inflater44;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer47 = gzipSource33.buffer;
        gzipSource0.buffer = okBuffer47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer47);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource53 = gzipSource50.inflaterSource;
        java.util.zip.CRC32 cRC32_54 = gzipSource50.crc;
        java.util.zip.Inflater inflater55 = gzipSource50.inflater;
        java.util.zip.CRC32 cRC32_56 = null;
        gzipSource50.crc = cRC32_56;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer58 = null;
        gzipSource50.buffer = okBuffer58;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater61 = null;
        gzipSource60.inflater = inflater61;
        int int63 = gzipSource60.section;
        gzipSource60.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource60);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer67 = gzipSource60.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline69 = null;
        long long70 = gzipSource50.read(okBuffer67, (long) (short) 0, deadline69);
        com.squareup.okhttp.internal.bytes.Deadline deadline72 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long73 = gzipSource49.read(okBuffer67, (long) ' ', deadline72);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        gzipSource8.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        gzipSource15.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        java.util.zip.Inflater inflater22 = gzipSource21.inflater;
        gzipSource8.inflater = inflater22;
        gzipSource0.inflater = inflater22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_26 = null;
        gzipSource25.crc = cRC32_26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource25.inflaterSource;
        java.util.zip.CRC32 cRC32_29 = gzipSource25.crc;
        java.util.zip.Inflater inflater30 = gzipSource25.inflater;
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource25.crc = cRC32_31;
        java.util.zip.Inflater inflater33 = gzipSource25.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource34.inflaterSource;
        gzipSource34.section = (byte) 100;
        int int41 = gzipSource34.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        java.util.zip.CRC32 cRC32_47 = null;
        gzipSource42.crc = cRC32_47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_50 = null;
        gzipSource49.crc = cRC32_50;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource49.inflaterSource;
        java.util.zip.CRC32 cRC32_53 = gzipSource49.crc;
        java.util.zip.Inflater inflater54 = gzipSource49.inflater;
        gzipSource49.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source59 = gzipSource49.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater61 = null;
        gzipSource60.inflater = inflater61;
        int int63 = gzipSource60.section;
        gzipSource60.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource66 = gzipSource60.inflaterSource;
        gzipSource49.source = gzipSource60;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_70 = null;
        gzipSource69.crc = cRC32_70;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater73 = null;
        gzipSource72.inflater = inflater73;
        int int75 = gzipSource72.section;
        gzipSource72.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource78 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource72);
        java.util.zip.Inflater inflater79 = gzipSource78.inflater;
        gzipSource69.inflater = inflater79;
        gzipSource68.inflater = inflater79;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer82 = gzipSource68.buffer;
        gzipSource49.updateCrc(okBuffer82, (long) '#', (long) (-1));
        gzipSource42.updateCrc(okBuffer82, (long) 0, 0L);
        gzipSource34.buffer = okBuffer82;
        gzipSource25.buffer = okBuffer82;
        gzipSource0.buffer = okBuffer82;
        com.squareup.okhttp.internal.bytes.Deadline deadline92 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer82);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 2;
        java.util.zip.Inflater inflater11 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater11);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_35 = null;
        gzipSource34.crc = cRC32_35;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater38 = null;
        gzipSource37.inflater = inflater38;
        int int40 = gzipSource37.section;
        gzipSource37.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource37);
        java.util.zip.Inflater inflater44 = gzipSource43.inflater;
        gzipSource34.inflater = inflater44;
        gzipSource33.inflater = inflater44;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer47 = gzipSource33.buffer;
        gzipSource0.buffer = okBuffer47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer47);
        com.squareup.okhttp.internal.bytes.Deadline deadline51 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource49.require((int) (short) 100, deadline51);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer47);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource10.inflaterSource;
        gzipSource10.section = (byte) 100;
        int int17 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource18.inflaterSource;
        java.util.zip.CRC32 cRC32_22 = gzipSource18.crc;
        java.util.zip.CRC32 cRC32_23 = null;
        gzipSource18.crc = cRC32_23;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_26 = null;
        gzipSource25.crc = cRC32_26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource25.inflaterSource;
        java.util.zip.CRC32 cRC32_29 = gzipSource25.crc;
        java.util.zip.Inflater inflater30 = gzipSource25.inflater;
        gzipSource25.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source35 = gzipSource25.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater37 = null;
        gzipSource36.inflater = inflater37;
        int int39 = gzipSource36.section;
        gzipSource36.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = gzipSource36.inflaterSource;
        gzipSource25.source = gzipSource36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_46 = null;
        gzipSource45.crc = cRC32_46;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater49 = null;
        gzipSource48.inflater = inflater49;
        int int51 = gzipSource48.section;
        gzipSource48.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource48);
        java.util.zip.Inflater inflater55 = gzipSource54.inflater;
        gzipSource45.inflater = inflater55;
        gzipSource44.inflater = inflater55;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer58 = gzipSource44.buffer;
        gzipSource25.updateCrc(okBuffer58, (long) '#', (long) (-1));
        gzipSource18.updateCrc(okBuffer58, (long) 0, 0L);
        gzipSource10.buffer = okBuffer58;
        com.squareup.okhttp.internal.bytes.Deadline deadline67 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long68 = gzipSource0.read(okBuffer58, (long) (byte) 10, deadline67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer58);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline9 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        int int11 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = null;
        gzipSource0.buffer = okBuffer12;
        com.squareup.okhttp.internal.bytes.Deadline deadline14 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource8.inflaterSource = inflaterSource9;
        java.lang.Class<?> wildcardClass11 = gzipSource8.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        int int11 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = null;
        gzipSource0.buffer = okBuffer12;
        java.lang.Class<?> wildcardClass14 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Deadline deadline6 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require(97, deadline6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        java.util.zip.Inflater inflater14 = gzipSource9.inflater;
        gzipSource9.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source19 = gzipSource9.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource20.inflaterSource;
        gzipSource9.source = gzipSource20;
        gzipSource0.source = gzipSource20;
        com.squareup.okhttp.internal.bytes.Deadline deadline30 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long31 = gzipSource20.seek((byte) -1, deadline30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource12.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource12.inflaterSource;
        java.util.zip.CRC32 cRC32_16 = gzipSource12.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource17.inflaterSource;
        gzipSource17.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource17.inflater = inflater31;
        gzipSource12.inflater = inflater31;
        com.squareup.okhttp.internal.bytes.Source source34 = gzipSource12.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource12.inflaterSource;
        gzipSource11.source = gzipSource12;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource12.checkEqual("", 10, (int) (byte) 3);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000003 != expected 0x00000a");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 2;
        java.util.zip.Inflater inflater11 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = null;
        gzipSource0.inflaterSource = inflaterSource12;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater11);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Source source4 = gzipSource3.source;
        java.lang.Class<?> wildcardClass5 = gzipSource3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource0.inflaterSource;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", (int) (byte) 3, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000020 != expected 0x000003");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline20 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource0.source;
        int int23 = gzipSource0.section;
        java.util.zip.CRC32 cRC32_24 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Source source25 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline26 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source25);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource0.source;
        int int23 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline24 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_11 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer17 = null;
        gzipSource12.buffer = okBuffer17;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = null;
        gzipSource12.inflaterSource = inflaterSource21;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource12.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource12.buffer = okBuffer24;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        gzipSource27.inflater = inflater37;
        gzipSource26.inflater = inflater37;
        gzipSource12.inflater = inflater37;
        gzipSource0.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        java.util.zip.Inflater inflater47 = gzipSource42.inflater;
        gzipSource42.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source52 = gzipSource42.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource59 = gzipSource53.inflaterSource;
        gzipSource42.source = gzipSource53;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_63 = null;
        gzipSource62.crc = cRC32_63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater66 = null;
        gzipSource65.inflater = inflater66;
        int int68 = gzipSource65.section;
        gzipSource65.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource65);
        java.util.zip.Inflater inflater72 = gzipSource71.inflater;
        gzipSource62.inflater = inflater72;
        gzipSource61.inflater = inflater72;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer75 = gzipSource61.buffer;
        gzipSource42.updateCrc(okBuffer75, (long) '#', (long) (-1));
        gzipSource12.buffer = okBuffer75;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer75);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        java.lang.Class<?> wildcardClass15 = gzipSource10.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) ' ', deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer9 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer9);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        java.util.zip.CRC32 cRC32_9 = gzipSource8.crc;
        java.lang.Class<?> wildcardClass10 = gzipSource8.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_4 = gzipSource3.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline6 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource3.require(97, deadline6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_4);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer14 = gzipSource0.buffer;
        java.util.zip.CRC32 cRC32_15 = gzipSource0.crc;
        java.lang.Class<?> wildcardClass16 = cRC32_15.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.CRC32 cRC32_28 = gzipSource27.crc;
        gzipSource0.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.Deadline deadline31 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long32 = gzipSource0.seek((byte) 10, deadline31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_28);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline9 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require(0, deadline9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline20 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        gzipSource0.source = gzipSource6;
        java.util.zip.CRC32 cRC32_10 = gzipSource0.crc;
        java.lang.Class<?> wildcardClass11 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater3 = null;
        gzipSource2.inflater = inflater3;
        int int5 = gzipSource2.section;
        gzipSource2.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource2);
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource2.source;
        gzipSource0.source = gzipSource2;
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource2.consumeTrailer(deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        java.util.zip.Inflater inflater10 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = null;
        gzipSource0.inflaterSource = inflaterSource3;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline13 = null;
        gzipSource5.require((int) (short) -1, deadline13);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        gzipSource15.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = null;
        gzipSource15.inflaterSource = inflaterSource22;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource15.inflaterSource;
        gzipSource5.source = gzipSource15;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = null;
        gzipSource15.inflaterSource = inflaterSource27;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer29 = gzipSource15.buffer;
        gzipSource0.updateCrc(okBuffer29, 1L, (long) (byte) 0);
        java.lang.Class<?> wildcardClass33 = okBuffer29.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource33.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource47.inflaterSource;
        gzipSource47.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        gzipSource54.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource54);
        java.util.zip.Inflater inflater61 = gzipSource60.inflater;
        gzipSource47.inflater = inflater61;
        gzipSource42.inflater = inflater61;
        gzipSource33.inflater = inflater61;
        java.util.zip.CRC32 cRC32_65 = gzipSource33.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_68 = null;
        gzipSource67.crc = cRC32_68;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater71 = null;
        gzipSource70.inflater = inflater71;
        int int73 = gzipSource70.section;
        gzipSource70.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource70);
        java.util.zip.Inflater inflater77 = gzipSource76.inflater;
        gzipSource67.inflater = inflater77;
        gzipSource66.inflater = inflater77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource66.buffer;
        gzipSource33.buffer = okBuffer80;
        gzipSource0.updateCrc(okBuffer80, (long) '#', (long) (short) 0);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer85 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline87 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long88 = gzipSource0.seek((byte) 2, deadline87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer85);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource7.inflaterSource;
        gzipSource7.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer14 = gzipSource7.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline16 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long17 = gzipSource0.read(okBuffer14, 10L, deadline16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer14);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_11 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer17 = null;
        gzipSource12.buffer = okBuffer17;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = null;
        gzipSource12.inflaterSource = inflaterSource21;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource12.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource12.buffer = okBuffer24;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        gzipSource27.inflater = inflater37;
        gzipSource26.inflater = inflater37;
        gzipSource12.inflater = inflater37;
        gzipSource0.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.Deadline deadline42 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource12.close(deadline42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        java.lang.Class<?> wildcardClass6 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource3.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource3.buffer = okBuffer8;
        gzipSource3.section = (byte) -1;
        java.util.zip.Inflater inflater12 = gzipSource3.inflater;
        java.util.zip.CRC32 cRC32_13 = gzipSource3.crc;
        gzipSource0.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int16 = gzipSource15.section;
        java.util.zip.CRC32 cRC32_17 = gzipSource15.crc;
        gzipSource0.crc = cRC32_17;
        java.lang.Class<?> wildcardClass19 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource0.inflaterSource;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", 100, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000023 != expected 0x000064");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.Inflater inflater40 = gzipSource39.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource39);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource41);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        java.util.zip.CRC32 cRC32_50 = null;
        gzipSource44.crc = cRC32_50;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_53 = null;
        gzipSource52.crc = cRC32_53;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        gzipSource55.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource55);
        java.util.zip.Inflater inflater62 = gzipSource61.inflater;
        gzipSource52.inflater = inflater62;
        gzipSource44.inflater = inflater62;
        gzipSource43.inflater = inflater62;
        gzipSource42.inflater = inflater62;
        gzipSource0.inflater = inflater62;
        java.util.zip.Inflater inflater68 = gzipSource0.inflater;
        int int69 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline70 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        int int32 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater10 = null;
        gzipSource9.inflater = inflater10;
        int int12 = gzipSource9.section;
        gzipSource9.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource9);
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource9.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource18.inflaterSource;
        java.util.zip.CRC32 cRC32_22 = gzipSource18.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource23.inflaterSource;
        gzipSource23.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        gzipSource23.inflater = inflater37;
        gzipSource18.inflater = inflater37;
        gzipSource9.inflater = inflater37;
        java.util.zip.CRC32 cRC32_41 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        java.util.zip.CRC32 cRC32_49 = null;
        gzipSource42.crc = cRC32_49;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_52 = null;
        gzipSource51.crc = cRC32_52;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource54 = gzipSource51.inflaterSource;
        java.util.zip.CRC32 cRC32_55 = gzipSource51.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater57 = null;
        gzipSource56.inflater = inflater57;
        int int59 = gzipSource56.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource60 = gzipSource56.inflaterSource;
        gzipSource56.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater64 = null;
        gzipSource63.inflater = inflater64;
        int int66 = gzipSource63.section;
        gzipSource63.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource63);
        java.util.zip.Inflater inflater70 = gzipSource69.inflater;
        gzipSource56.inflater = inflater70;
        gzipSource51.inflater = inflater70;
        gzipSource42.inflater = inflater70;
        java.util.zip.CRC32 cRC32_74 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_77 = null;
        gzipSource76.crc = cRC32_77;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource79 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater80 = null;
        gzipSource79.inflater = inflater80;
        int int82 = gzipSource79.section;
        gzipSource79.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource85 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource79);
        java.util.zip.Inflater inflater86 = gzipSource85.inflater;
        gzipSource76.inflater = inflater86;
        gzipSource75.inflater = inflater86;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer89 = gzipSource75.buffer;
        gzipSource42.buffer = okBuffer89;
        gzipSource9.updateCrc(okBuffer89, (long) '#', (long) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource8.updateCrc(okBuffer89, (long) 2, (long) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer89);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        gzipSource0.checkEqual("hi!", (-1), (int) (byte) -1);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline13 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long14 = gzipSource11.seek((byte) 1, deadline13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource19.inflaterSource;
        int int23 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.Source source24 = gzipSource19.source;
        gzipSource19.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer27 = gzipSource19.buffer;
        gzipSource19.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer30 = gzipSource19.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline32 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long33 = gzipSource0.read(okBuffer30, (long) (short) 100, deadline32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer30);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.Inflater inflater18 = gzipSource17.inflater;
        gzipSource8.inflater = inflater18;
        gzipSource0.inflater = inflater18;
        com.squareup.okhttp.internal.bytes.Deadline deadline21 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater18);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        java.lang.Class<?> wildcardClass14 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Deadline deadline5 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer9 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long13 = gzipSource10.seek((byte) 0, deadline12);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer9);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long11 = gzipSource0.seek((byte) 100, deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        java.util.zip.CRC32 cRC32_12 = gzipSource8.crc;
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource8.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        java.util.zip.Inflater inflater20 = gzipSource15.inflater;
        gzipSource15.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source25 = gzipSource15.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater27 = null;
        gzipSource26.inflater = inflater27;
        int int29 = gzipSource26.section;
        gzipSource26.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource26.inflaterSource;
        gzipSource15.source = gzipSource26;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource35.inflater = inflater45;
        gzipSource34.inflater = inflater45;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer48 = gzipSource34.buffer;
        gzipSource15.updateCrc(okBuffer48, (long) '#', (long) (-1));
        gzipSource8.updateCrc(okBuffer48, (long) 0, 0L);
        gzipSource0.buffer = okBuffer48;
        java.lang.Class<?> wildcardClass56 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource8.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        com.squareup.okhttp.internal.bytes.Deadline deadline30 = null;
        gzipSource28.require((-1), deadline30);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        int int35 = gzipSource32.section;
        gzipSource32.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = null;
        gzipSource32.inflaterSource = inflaterSource39;
        gzipSource28.source = inflaterSource39;
        java.util.zip.CRC32 cRC32_42 = gzipSource28.crc;
        gzipSource8.crc = cRC32_42;
        gzipSource0.crc = cRC32_42;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater46 = null;
        gzipSource45.inflater = inflater46;
        int int48 = gzipSource45.section;
        gzipSource45.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_52 = null;
        gzipSource51.crc = cRC32_52;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource54 = gzipSource51.inflaterSource;
        java.util.zip.CRC32 cRC32_55 = gzipSource51.crc;
        java.util.zip.Inflater inflater56 = gzipSource51.inflater;
        gzipSource51.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source61 = gzipSource51.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater63 = null;
        gzipSource62.inflater = inflater63;
        int int65 = gzipSource62.section;
        gzipSource62.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource68 = gzipSource62.inflaterSource;
        gzipSource51.source = gzipSource62;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_72 = null;
        gzipSource71.crc = cRC32_72;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource74 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater75 = null;
        gzipSource74.inflater = inflater75;
        int int77 = gzipSource74.section;
        gzipSource74.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource80 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource74);
        java.util.zip.Inflater inflater81 = gzipSource80.inflater;
        gzipSource71.inflater = inflater81;
        gzipSource70.inflater = inflater81;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer84 = gzipSource70.buffer;
        gzipSource51.updateCrc(okBuffer84, (long) '#', (long) (-1));
        com.squareup.okhttp.internal.bytes.Deadline deadline89 = null;
        long long90 = gzipSource45.read(okBuffer84, (long) (short) 0, deadline89);
        com.squareup.okhttp.internal.bytes.Deadline deadline92 = null;
        long long93 = gzipSource0.read(okBuffer84, (long) 2, deadline92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 0L + "'", long90 == 0L);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + (-1L) + "'", long93 == (-1L));
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer7 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        java.util.zip.Inflater inflater12 = gzipSource8.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer13 = gzipSource8.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer13, 100L, (long) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer13);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource11.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource19.inflater = inflater29;
        gzipSource11.inflater = inflater29;
        gzipSource10.inflater = inflater29;
        gzipSource9.inflater = inflater29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource9);
        com.squareup.okhttp.internal.bytes.Deadline deadline35 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource9.consumeTrailer(deadline35);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", (int) (byte) 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000020 != expected 0x000064");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 10;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_11 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource12.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_22 = null;
        gzipSource21.crc = cRC32_22;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource21.inflaterSource;
        java.util.zip.CRC32 cRC32_25 = gzipSource21.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater27 = null;
        gzipSource26.inflater = inflater27;
        int int29 = gzipSource26.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource26.inflaterSource;
        gzipSource26.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.Inflater inflater40 = gzipSource39.inflater;
        gzipSource26.inflater = inflater40;
        gzipSource21.inflater = inflater40;
        gzipSource12.inflater = inflater40;
        java.util.zip.CRC32 cRC32_44 = gzipSource12.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater46 = null;
        gzipSource45.inflater = inflater46;
        int int48 = gzipSource45.section;
        gzipSource45.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource45);
        java.util.zip.CRC32 cRC32_52 = null;
        gzipSource45.crc = cRC32_52;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_55 = null;
        gzipSource54.crc = cRC32_55;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource57 = gzipSource54.inflaterSource;
        java.util.zip.CRC32 cRC32_58 = gzipSource54.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater60 = null;
        gzipSource59.inflater = inflater60;
        int int62 = gzipSource59.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource63 = gzipSource59.inflaterSource;
        gzipSource59.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater67 = null;
        gzipSource66.inflater = inflater67;
        int int69 = gzipSource66.section;
        gzipSource66.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource66);
        java.util.zip.Inflater inflater73 = gzipSource72.inflater;
        gzipSource59.inflater = inflater73;
        gzipSource54.inflater = inflater73;
        gzipSource45.inflater = inflater73;
        java.util.zip.CRC32 cRC32_77 = gzipSource45.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource78 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource79 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_80 = null;
        gzipSource79.crc = cRC32_80;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource82 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater83 = null;
        gzipSource82.inflater = inflater83;
        int int85 = gzipSource82.section;
        gzipSource82.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource88 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource82);
        java.util.zip.Inflater inflater89 = gzipSource88.inflater;
        gzipSource79.inflater = inflater89;
        gzipSource78.inflater = inflater89;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer92 = gzipSource78.buffer;
        gzipSource45.buffer = okBuffer92;
        gzipSource12.updateCrc(okBuffer92, (long) '#', (long) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer92, 10L, (long) 97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer92);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource33.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource47.inflaterSource;
        gzipSource47.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        gzipSource54.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource54);
        java.util.zip.Inflater inflater61 = gzipSource60.inflater;
        gzipSource47.inflater = inflater61;
        gzipSource42.inflater = inflater61;
        gzipSource33.inflater = inflater61;
        java.util.zip.CRC32 cRC32_65 = gzipSource33.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_68 = null;
        gzipSource67.crc = cRC32_68;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater71 = null;
        gzipSource70.inflater = inflater71;
        int int73 = gzipSource70.section;
        gzipSource70.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource70);
        java.util.zip.Inflater inflater77 = gzipSource76.inflater;
        gzipSource67.inflater = inflater77;
        gzipSource66.inflater = inflater77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource66.buffer;
        gzipSource33.buffer = okBuffer80;
        gzipSource0.updateCrc(okBuffer80, (long) '#', (long) (short) 0);
        com.squareup.okhttp.internal.bytes.Deadline deadline85 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource12.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource12.inflaterSource;
        java.util.zip.CRC32 cRC32_16 = gzipSource12.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource17.inflaterSource;
        gzipSource17.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        int int27 = gzipSource24.section;
        gzipSource24.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.Inflater inflater31 = gzipSource30.inflater;
        gzipSource17.inflater = inflater31;
        gzipSource12.inflater = inflater31;
        com.squareup.okhttp.internal.bytes.Source source34 = gzipSource12.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource12.inflaterSource;
        gzipSource11.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.Deadline deadline37 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource11.consumeTrailer(deadline37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.Deadline deadline6 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline9 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long10 = gzipSource0.seek((byte) 0, deadline9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        gzipSource0.section = 0;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.lang.Class<?> wildcardClass4 = gzipSource3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource6.inflaterSource;
        gzipSource6.section = 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline26 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long27 = gzipSource6.seek((byte) 10, deadline26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource22);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        java.lang.Class<?> wildcardClass15 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = null;
        gzipSource0.buffer = okBuffer12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        java.util.zip.Inflater inflater25 = gzipSource24.inflater;
        gzipSource15.inflater = inflater25;
        gzipSource14.inflater = inflater25;
        gzipSource0.inflater = inflater25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.Inflater inflater40 = gzipSource39.inflater;
        gzipSource30.inflater = inflater40;
        gzipSource29.inflater = inflater40;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource29.inflaterSource;
        java.util.zip.Inflater inflater44 = gzipSource29.inflater;
        gzipSource0.inflater = inflater44;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_47 = null;
        gzipSource46.crc = cRC32_47;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = gzipSource46.inflaterSource;
        int int50 = gzipSource46.section;
        com.squareup.okhttp.internal.bytes.Source source51 = gzipSource46.source;
        gzipSource46.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer54 = gzipSource46.buffer;
        gzipSource46.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer57 = gzipSource46.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer57, (long) '4', (long) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer57);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        java.util.zip.Inflater inflater10 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = null;
        gzipSource0.inflaterSource = inflaterSource11;
        com.squareup.okhttp.internal.bytes.Deadline deadline14 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long15 = gzipSource0.seek((byte) 2, deadline14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        gzipSource0.section = 'a';
        int int16 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline17 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 97 + "'", int16 == 97);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource18.inflaterSource;
        int int22 = gzipSource18.section;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource18.source;
        gzipSource18.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = gzipSource18.buffer;
        gzipSource0.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater29 = null;
        gzipSource28.inflater = inflater29;
        int int31 = gzipSource28.section;
        gzipSource28.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource28);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = null;
        gzipSource28.inflaterSource = inflaterSource35;
        java.util.zip.CRC32 cRC32_37 = gzipSource28.crc;
        gzipSource28.section = 100;
        com.squareup.okhttp.internal.bytes.Source source40 = gzipSource28.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer41 = gzipSource28.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer41, (long) (byte) -1, (long) 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer41);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = null;
        gzipSource0.inflaterSource = inflaterSource32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource35.inflater = inflater45;
        gzipSource34.inflater = inflater45;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer48 = gzipSource34.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer48, (long) '4', 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer48);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        gzipSource12.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline20 = null;
        gzipSource12.require((int) (short) -1, deadline20);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource29 = null;
        gzipSource22.inflaterSource = inflaterSource29;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource22.inflaterSource;
        gzipSource12.source = gzipSource22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = null;
        gzipSource22.inflaterSource = inflaterSource34;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer36 = gzipSource22.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline38 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long39 = gzipSource11.read(okBuffer36, 10L, deadline38);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer36);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource3.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource3.buffer = okBuffer8;
        gzipSource3.section = (byte) -1;
        java.util.zip.Inflater inflater12 = gzipSource3.inflater;
        java.util.zip.CRC32 cRC32_13 = gzipSource3.crc;
        gzipSource0.crc = cRC32_13;
        java.util.zip.CRC32 cRC32_15 = gzipSource0.crc;
        java.util.zip.Inflater inflater16 = gzipSource0.inflater;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater16);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline2 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        com.squareup.okhttp.internal.bytes.Deadline deadline30 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long31 = gzipSource0.seek((byte) 1, deadline30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer10 = null;
        gzipSource0.buffer = okBuffer10;
        com.squareup.okhttp.internal.bytes.Source source12 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_13 = gzipSource0.crc;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", 1, 97);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000061 != expected 0x000001");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        int int22 = gzipSource6.section;
        java.util.zip.CRC32 cRC32_23 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline24 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.consumeHeader(deadline24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_23);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.Inflater inflater14 = gzipSource13.inflater;
        gzipSource0.inflater = inflater14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        gzipSource16.section = (byte) -1;
        java.util.zip.CRC32 cRC32_22 = null;
        gzipSource16.crc = cRC32_22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_25 = null;
        gzipSource24.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        java.util.zip.Inflater inflater34 = gzipSource33.inflater;
        gzipSource24.inflater = inflater34;
        gzipSource16.inflater = inflater34;
        gzipSource0.inflater = inflater34;
        com.squareup.okhttp.internal.bytes.Source source38 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater40 = null;
        gzipSource39.inflater = inflater40;
        int int42 = gzipSource39.section;
        gzipSource39.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource39);
        java.util.zip.CRC32 cRC32_46 = null;
        gzipSource39.crc = cRC32_46;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_49 = null;
        gzipSource48.crc = cRC32_49;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource48.inflaterSource;
        java.util.zip.CRC32 cRC32_52 = gzipSource48.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource57 = gzipSource53.inflaterSource;
        gzipSource53.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater61 = null;
        gzipSource60.inflater = inflater61;
        int int63 = gzipSource60.section;
        gzipSource60.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource60);
        java.util.zip.Inflater inflater67 = gzipSource66.inflater;
        gzipSource53.inflater = inflater67;
        gzipSource48.inflater = inflater67;
        gzipSource39.inflater = inflater67;
        java.util.zip.CRC32 cRC32_71 = gzipSource39.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater73 = null;
        gzipSource72.inflater = inflater73;
        int int75 = gzipSource72.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource76 = gzipSource72.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource77 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_78 = null;
        gzipSource77.crc = cRC32_78;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource80 = gzipSource77.inflaterSource;
        java.util.zip.CRC32 cRC32_81 = gzipSource77.crc;
        java.util.zip.Inflater inflater82 = gzipSource77.inflater;
        gzipSource77.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source87 = gzipSource77.source;
        gzipSource72.source = source87;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource89 = gzipSource72.inflaterSource;
        int int90 = gzipSource72.section;
        gzipSource39.source = gzipSource72;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer92 = gzipSource72.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline94 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long95 = gzipSource0.read(okBuffer92, (long) ' ', deadline94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 100 + "'", int90 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer92);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = null;
        gzipSource0.inflaterSource = inflaterSource10;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer10 = null;
        gzipSource0.buffer = okBuffer10;
        java.util.zip.CRC32 cRC32_12 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline14 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long15 = gzipSource0.seek((byte) 2, deadline14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource11.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource19.inflater = inflater29;
        gzipSource11.inflater = inflater29;
        gzipSource10.inflater = inflater29;
        gzipSource9.inflater = inflater29;
        com.squareup.okhttp.internal.bytes.Deadline deadline35 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long36 = gzipSource9.seek((byte) 0, deadline35);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", 1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x00000a != expected 0x000001");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        gzipSource8.section = (byte) 0;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource8.checkEqual("hi!", 10, 0);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000000 != expected 0x00000a");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        gzipSource0.section = ' ';
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_14 = null;
        gzipSource13.crc = cRC32_14;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource13.inflaterSource;
        java.util.zip.CRC32 cRC32_17 = gzipSource13.crc;
        java.util.zip.Inflater inflater18 = gzipSource13.inflater;
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource13.crc = cRC32_19;
        java.util.zip.Inflater inflater21 = gzipSource13.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource22.inflaterSource;
        gzipSource22.section = (byte) 100;
        int int29 = gzipSource22.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        java.util.zip.CRC32 cRC32_35 = null;
        gzipSource30.crc = cRC32_35;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_38 = null;
        gzipSource37.crc = cRC32_38;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource40 = gzipSource37.inflaterSource;
        java.util.zip.CRC32 cRC32_41 = gzipSource37.crc;
        java.util.zip.Inflater inflater42 = gzipSource37.inflater;
        gzipSource37.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source47 = gzipSource37.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater49 = null;
        gzipSource48.inflater = inflater49;
        int int51 = gzipSource48.section;
        gzipSource48.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource54 = gzipSource48.inflaterSource;
        gzipSource37.source = gzipSource48;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_58 = null;
        gzipSource57.crc = cRC32_58;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater61 = null;
        gzipSource60.inflater = inflater61;
        int int63 = gzipSource60.section;
        gzipSource60.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource60);
        java.util.zip.Inflater inflater67 = gzipSource66.inflater;
        gzipSource57.inflater = inflater67;
        gzipSource56.inflater = inflater67;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer70 = gzipSource56.buffer;
        gzipSource37.updateCrc(okBuffer70, (long) '#', (long) (-1));
        gzipSource30.updateCrc(okBuffer70, (long) 0, 0L);
        gzipSource22.buffer = okBuffer70;
        gzipSource13.buffer = okBuffer70;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource79 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer70);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer70, 1L, (long) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer70);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long8 = gzipSource0.seek((byte) 100, deadline7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        gzipSource0.section = 0;
        com.squareup.okhttp.internal.bytes.Deadline deadline3 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource18.inflaterSource;
        int int22 = gzipSource18.section;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource18.source;
        gzipSource18.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = gzipSource18.buffer;
        gzipSource0.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer28 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline30 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long31 = gzipSource0.read(okBuffer28, (long) ' ', deadline30);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer26);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Source source12 = gzipSource0.source;
        java.lang.Class<?> wildcardClass13 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        java.util.zip.CRC32 cRC32_9 = gzipSource0.crc;
        gzipSource0.section = 100;
        com.squareup.okhttp.internal.bytes.Source source12 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer13 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline14 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer13);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_30 = null;
        gzipSource29.crc = cRC32_30;
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource29.crc = cRC32_32;
        gzipSource0.source = gzipSource29;
        int int35 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline37 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long38 = gzipSource0.seek((byte) 2, deadline37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource11.inflaterSource;
        gzipSource0.source = gzipSource11;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_21 = null;
        gzipSource20.crc = cRC32_21;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        gzipSource23.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource23);
        java.util.zip.Inflater inflater30 = gzipSource29.inflater;
        gzipSource20.inflater = inflater30;
        gzipSource19.inflater = inflater30;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer33 = gzipSource19.buffer;
        gzipSource0.updateCrc(okBuffer33, (long) '#', (long) (-1));
        com.squareup.okhttp.internal.bytes.Deadline deadline37 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline37);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer33);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        gzipSource0.section = (byte) 3;
        java.lang.Class<?> wildcardClass7 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource21.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = null;
        gzipSource21.buffer = okBuffer26;
        int int28 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.Source source29 = null;
        gzipSource21.source = source29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.CRC32 cRC32_32 = gzipSource21.crc;
        gzipSource10.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer34 = gzipSource10.buffer;
        gzipSource10.section = ' ';
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer34);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource10.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        gzipSource16.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource16.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource16.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer25 = gzipSource16.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource10.updateCrc(okBuffer25, (long) '#', (long) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer25);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource4.crc = cRC32_5;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource4.inflaterSource;
        java.util.zip.CRC32 cRC32_8 = gzipSource4.crc;
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource4.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource11.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource11.inflaterSource;
        java.util.zip.CRC32 cRC32_15 = gzipSource11.crc;
        java.util.zip.Inflater inflater16 = gzipSource11.inflater;
        gzipSource11.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source21 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource22.inflaterSource;
        gzipSource11.source = gzipSource22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource31.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        java.util.zip.Inflater inflater41 = gzipSource40.inflater;
        gzipSource31.inflater = inflater41;
        gzipSource30.inflater = inflater41;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer44 = gzipSource30.buffer;
        gzipSource11.updateCrc(okBuffer44, (long) '#', (long) (-1));
        gzipSource4.updateCrc(okBuffer44, (long) 0, 0L);
        gzipSource0.updateCrc(okBuffer44, (long) (short) -1, 0L);
        com.squareup.okhttp.internal.bytes.Deadline deadline54 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer44);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource33.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource47.inflaterSource;
        gzipSource47.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        gzipSource54.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource54);
        java.util.zip.Inflater inflater61 = gzipSource60.inflater;
        gzipSource47.inflater = inflater61;
        gzipSource42.inflater = inflater61;
        gzipSource33.inflater = inflater61;
        java.util.zip.CRC32 cRC32_65 = gzipSource33.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_68 = null;
        gzipSource67.crc = cRC32_68;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater71 = null;
        gzipSource70.inflater = inflater71;
        int int73 = gzipSource70.section;
        gzipSource70.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource70);
        java.util.zip.Inflater inflater77 = gzipSource76.inflater;
        gzipSource67.inflater = inflater77;
        gzipSource66.inflater = inflater77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource66.buffer;
        gzipSource33.buffer = okBuffer80;
        gzipSource0.updateCrc(okBuffer80, (long) '#', (long) (short) 0);
        gzipSource0.checkEqual("hi!", (int) (short) 10, 10);
        com.squareup.okhttp.internal.bytes.Deadline deadline90 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long91 = gzipSource0.seek((byte) 1, deadline90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        java.util.zip.CRC32 cRC32_30 = gzipSource19.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline32 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource19.require((int) '#', deadline32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_30);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline31 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long32 = gzipSource19.seek((byte) 3, deadline31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        gzipSource6.section = (byte) -1;
        java.util.zip.Inflater inflater10 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.close(deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater10);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource4.crc = cRC32_5;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource4.inflaterSource;
        java.util.zip.CRC32 cRC32_8 = gzipSource4.crc;
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource4.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_12 = null;
        gzipSource11.crc = cRC32_12;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource11.inflaterSource;
        java.util.zip.CRC32 cRC32_15 = gzipSource11.crc;
        java.util.zip.Inflater inflater16 = gzipSource11.inflater;
        gzipSource11.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source21 = gzipSource11.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = gzipSource22.inflaterSource;
        gzipSource11.source = gzipSource22;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource31.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        java.util.zip.Inflater inflater41 = gzipSource40.inflater;
        gzipSource31.inflater = inflater41;
        gzipSource30.inflater = inflater41;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer44 = gzipSource30.buffer;
        gzipSource11.updateCrc(okBuffer44, (long) '#', (long) (-1));
        gzipSource4.updateCrc(okBuffer44, (long) 0, 0L);
        gzipSource0.updateCrc(okBuffer44, (long) (short) -1, 0L);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_55 = null;
        gzipSource54.crc = cRC32_55;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource57 = gzipSource54.inflaterSource;
        int int58 = gzipSource54.section;
        com.squareup.okhttp.internal.bytes.Source source59 = gzipSource54.source;
        gzipSource54.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer62 = gzipSource54.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline64 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long65 = gzipSource0.read(okBuffer62, (long) (short) 100, deadline64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer62);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.close(deadline8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline6 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long7 = gzipSource0.seek((byte) -1, deadline6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource8.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = gzipSource8.buffer;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer12);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource11.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource19.inflater = inflater29;
        gzipSource11.inflater = inflater29;
        gzipSource10.inflater = inflater29;
        gzipSource9.inflater = inflater29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource9);
        java.lang.Class<?> wildcardClass35 = gzipSource34.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        int int22 = gzipSource6.section;
        java.util.zip.CRC32 cRC32_23 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.Source source24 = gzipSource6.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline25 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.close(deadline25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source24);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater4 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = gzipSource0.buffer;
        java.lang.Class<?> wildcardClass6 = okBuffer5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long11 = gzipSource0.seek((byte) 3, deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.Source source22 = gzipSource0.source;
        int int23 = gzipSource0.section;
        java.util.zip.CRC32 cRC32_24 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Source source25 = gzipSource0.source;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", (int) '#', (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x00000a != expected 0x000023");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source25);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource8.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) inflaterSource11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: source == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource10.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource18.inflater = inflater28;
        gzipSource10.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.Deadline deadline32 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer7 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        java.util.zip.CRC32 cRC32_12 = gzipSource8.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater14 = null;
        gzipSource13.inflater = inflater14;
        int int16 = gzipSource13.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource13.inflaterSource;
        gzipSource13.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource20);
        java.util.zip.Inflater inflater27 = gzipSource26.inflater;
        gzipSource13.inflater = inflater27;
        gzipSource8.inflater = inflater27;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source31 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        java.util.zip.CRC32 cRC32_36 = gzipSource35.crc;
        gzipSource8.crc = cRC32_36;
        gzipSource0.crc = cRC32_36;
        java.util.zip.CRC32 cRC32_39 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_40 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_40);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.Source source21 = gzipSource0.source;
        java.lang.Class<?> wildcardClass22 = source21.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater15 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Deadline deadline16 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater15);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource33.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_39 = null;
        gzipSource38.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource38.inflaterSource;
        java.util.zip.CRC32 cRC32_42 = gzipSource38.crc;
        java.util.zip.Inflater inflater43 = gzipSource38.inflater;
        gzipSource38.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source48 = gzipSource38.source;
        gzipSource33.source = source48;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource50 = gzipSource33.inflaterSource;
        int int51 = gzipSource33.section;
        gzipSource0.source = gzipSource33;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = gzipSource53.buffer;
        gzipSource0.buffer = okBuffer60;
        gzipSource0.section = (short) 0;
        java.lang.Class<?> wildcardClass64 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource11.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource19.inflater = inflater29;
        gzipSource11.inflater = inflater29;
        gzipSource10.inflater = inflater29;
        gzipSource9.inflater = inflater29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        java.util.zip.CRC32 cRC32_41 = null;
        gzipSource34.crc = cRC32_41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_44 = null;
        gzipSource43.crc = cRC32_44;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource46 = gzipSource43.inflaterSource;
        java.util.zip.CRC32 cRC32_47 = gzipSource43.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater49 = null;
        gzipSource48.inflater = inflater49;
        int int51 = gzipSource48.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource48.inflaterSource;
        gzipSource48.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        gzipSource55.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource55);
        java.util.zip.Inflater inflater62 = gzipSource61.inflater;
        gzipSource48.inflater = inflater62;
        gzipSource43.inflater = inflater62;
        gzipSource34.inflater = inflater62;
        java.util.zip.CRC32 cRC32_66 = gzipSource34.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_69 = null;
        gzipSource68.crc = cRC32_69;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater72 = null;
        gzipSource71.inflater = inflater72;
        int int74 = gzipSource71.section;
        gzipSource71.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource77 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource71);
        java.util.zip.Inflater inflater78 = gzipSource77.inflater;
        gzipSource68.inflater = inflater78;
        gzipSource67.inflater = inflater78;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer81 = gzipSource67.buffer;
        gzipSource34.buffer = okBuffer81;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource83 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer81);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource9.updateCrc(okBuffer81, (long) '4', (long) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer81);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater3 = null;
        gzipSource2.inflater = inflater3;
        int int5 = gzipSource2.section;
        gzipSource2.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource2);
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource2.source;
        gzipSource0.source = gzipSource2;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer10 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer10);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource0.crc = cRC32_5;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        gzipSource27.inflater = inflater37;
        gzipSource26.inflater = inflater37;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource26.buffer;
        gzipSource7.updateCrc(okBuffer40, (long) '#', (long) (-1));
        gzipSource0.updateCrc(okBuffer40, (long) 0, 0L);
        com.squareup.okhttp.internal.bytes.Source source47 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource48 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater51 = null;
        gzipSource50.inflater = inflater51;
        int int53 = gzipSource50.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource54 = gzipSource50.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer55 = null;
        gzipSource50.buffer = okBuffer55;
        gzipSource50.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source59 = gzipSource50.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater62 = null;
        gzipSource61.inflater = inflater62;
        int int64 = gzipSource61.section;
        gzipSource61.section = (byte) -1;
        java.util.zip.CRC32 cRC32_67 = null;
        gzipSource61.crc = cRC32_67;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_70 = null;
        gzipSource69.crc = cRC32_70;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater73 = null;
        gzipSource72.inflater = inflater73;
        int int75 = gzipSource72.section;
        gzipSource72.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource78 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource72);
        java.util.zip.Inflater inflater79 = gzipSource78.inflater;
        gzipSource69.inflater = inflater79;
        gzipSource61.inflater = inflater79;
        gzipSource60.inflater = inflater79;
        gzipSource50.inflater = inflater79;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource84 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater85 = null;
        gzipSource84.inflater = inflater85;
        int int87 = gzipSource84.section;
        gzipSource84.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource90 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource84);
        java.util.zip.Inflater inflater91 = gzipSource90.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource92 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource90);
        gzipSource92.section = (byte) 0;
        gzipSource92.section = (-1);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource97 = gzipSource92.inflaterSource;
        gzipSource50.inflaterSource = inflaterSource97;
        gzipSource49.inflaterSource = inflaterSource97;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 100 + "'", int87 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource97);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = 97;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater10 = null;
        gzipSource9.inflater = inflater10;
        int int12 = gzipSource9.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource9.inflaterSource;
        gzipSource9.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater17 = null;
        gzipSource16.inflater = inflater17;
        int int19 = gzipSource16.section;
        gzipSource16.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        java.util.zip.Inflater inflater23 = gzipSource22.inflater;
        gzipSource9.inflater = inflater23;
        gzipSource0.inflater = inflater23;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater23);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_5 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        int int9 = gzipSource6.section;
        gzipSource6.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = null;
        gzipSource6.inflaterSource = inflaterSource13;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource15 = gzipSource6.inflaterSource;
        gzipSource0.source = inflaterSource15;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource15);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource10.inflaterSource;
        gzipSource10.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        gzipSource10.require((int) (short) -1, deadline18);
        com.squareup.okhttp.internal.bytes.Source source20 = gzipSource10.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource21.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource35.inflaterSource;
        gzipSource35.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        java.util.zip.Inflater inflater49 = gzipSource48.inflater;
        gzipSource35.inflater = inflater49;
        gzipSource30.inflater = inflater49;
        gzipSource21.inflater = inflater49;
        gzipSource10.inflater = inflater49;
        gzipSource0.inflater = inflater49;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource59 = gzipSource55.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = null;
        gzipSource55.buffer = okBuffer60;
        int int62 = gzipSource55.section;
        com.squareup.okhttp.internal.bytes.Source source63 = null;
        gzipSource55.source = source63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource55);
        java.util.zip.CRC32 cRC32_66 = gzipSource55.crc;
        gzipSource0.crc = cRC32_66;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", 0, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000001 != expected 0x000000");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_66);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.CRC32 cRC32_14 = null;
        gzipSource7.crc = cRC32_14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource16.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource16.inflaterSource;
        java.util.zip.CRC32 cRC32_20 = gzipSource16.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource21.inflaterSource;
        gzipSource21.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater29 = null;
        gzipSource28.inflater = inflater29;
        int int31 = gzipSource28.section;
        gzipSource28.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource28);
        java.util.zip.Inflater inflater35 = gzipSource34.inflater;
        gzipSource21.inflater = inflater35;
        gzipSource16.inflater = inflater35;
        gzipSource7.inflater = inflater35;
        java.util.zip.CRC32 cRC32_39 = gzipSource7.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_42 = null;
        gzipSource41.crc = cRC32_42;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        java.util.zip.Inflater inflater51 = gzipSource50.inflater;
        gzipSource41.inflater = inflater51;
        gzipSource40.inflater = inflater51;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer54 = gzipSource40.buffer;
        gzipSource7.buffer = okBuffer54;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer54);
        gzipSource0.buffer = okBuffer54;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", 2, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000064 != expected 0x000002");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer54);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        int int30 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline31 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource19.consumeTrailer(deadline31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        int int30 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource35 = gzipSource31.inflaterSource;
        gzipSource31.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource31.inflater = inflater45;
        gzipSource19.inflater = inflater45;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater49 = null;
        gzipSource48.inflater = inflater49;
        int int51 = gzipSource48.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource52 = gzipSource48.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer53 = null;
        gzipSource48.buffer = okBuffer53;
        int int55 = gzipSource48.section;
        com.squareup.okhttp.internal.bytes.Source source56 = null;
        gzipSource48.source = source56;
        gzipSource19.source = source56;
        com.squareup.okhttp.internal.bytes.Deadline deadline60 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long61 = gzipSource19.seek((byte) 0, deadline60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long9 = gzipSource0.seek((byte) 3, deadline8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.Deadline deadline21 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource10.consumeTrailer(deadline21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_4 = gzipSource3.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline6 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource3.require(2, deadline6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_4);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource33.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource47.inflaterSource;
        gzipSource47.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        gzipSource54.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource54);
        java.util.zip.Inflater inflater61 = gzipSource60.inflater;
        gzipSource47.inflater = inflater61;
        gzipSource42.inflater = inflater61;
        gzipSource33.inflater = inflater61;
        java.util.zip.CRC32 cRC32_65 = gzipSource33.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_68 = null;
        gzipSource67.crc = cRC32_68;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater71 = null;
        gzipSource70.inflater = inflater71;
        int int73 = gzipSource70.section;
        gzipSource70.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource70);
        java.util.zip.Inflater inflater77 = gzipSource76.inflater;
        gzipSource67.inflater = inflater77;
        gzipSource66.inflater = inflater77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource66.buffer;
        gzipSource33.buffer = okBuffer80;
        gzipSource0.updateCrc(okBuffer80, (long) '#', (long) (short) 0);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer85 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource86 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer85);
        java.util.zip.Inflater inflater87 = gzipSource86.inflater;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource86.checkEqual("hi!", (int) (short) -1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0x000064 != expected 0xffffffff");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater87);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline24 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.Inflater inflater14 = gzipSource13.inflater;
        gzipSource0.inflater = inflater14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource16.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource16.inflaterSource;
        java.util.zip.CRC32 cRC32_20 = gzipSource16.crc;
        java.util.zip.CRC32 cRC32_21 = null;
        gzipSource16.crc = cRC32_21;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        java.util.zip.Inflater inflater28 = gzipSource23.inflater;
        gzipSource23.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source33 = gzipSource23.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        gzipSource34.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource40 = gzipSource34.inflaterSource;
        gzipSource23.source = gzipSource34;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_44 = null;
        gzipSource43.crc = cRC32_44;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        java.util.zip.Inflater inflater53 = gzipSource52.inflater;
        gzipSource43.inflater = inflater53;
        gzipSource42.inflater = inflater53;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer56 = gzipSource42.buffer;
        gzipSource23.updateCrc(okBuffer56, (long) '#', (long) (-1));
        gzipSource16.updateCrc(okBuffer56, (long) 0, 0L);
        gzipSource0.updateCrc(okBuffer56, (long) (byte) 3, 0L);
        java.util.zip.CRC32 cRC32_66 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_66);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource15.inflaterSource;
        gzipSource15.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline23 = null;
        gzipSource15.require((int) (short) -1, deadline23);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        gzipSource25.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource25);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = null;
        gzipSource25.inflaterSource = inflaterSource32;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource25.inflaterSource;
        gzipSource15.source = gzipSource25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource25);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = null;
        gzipSource25.inflaterSource = inflaterSource37;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer39 = gzipSource25.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource25.buffer;
        gzipSource0.buffer = okBuffer40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer40);
        com.squareup.okhttp.internal.bytes.Deadline deadline43 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource42.consumeHeader(deadline43);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_30 = null;
        gzipSource29.crc = cRC32_30;
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource29.crc = cRC32_32;
        gzipSource0.source = gzipSource29;
        com.squareup.okhttp.internal.bytes.Deadline deadline35 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        java.util.zip.CRC32 cRC32_12 = gzipSource8.crc;
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource8.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        java.util.zip.Inflater inflater20 = gzipSource15.inflater;
        gzipSource15.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source25 = gzipSource15.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater27 = null;
        gzipSource26.inflater = inflater27;
        int int29 = gzipSource26.section;
        gzipSource26.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource26.inflaterSource;
        gzipSource15.source = gzipSource26;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource35.inflater = inflater45;
        gzipSource34.inflater = inflater45;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer48 = gzipSource34.buffer;
        gzipSource15.updateCrc(okBuffer48, (long) '#', (long) (-1));
        gzipSource8.updateCrc(okBuffer48, (long) 0, 0L);
        gzipSource0.buffer = okBuffer48;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource57 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_58 = null;
        gzipSource57.crc = cRC32_58;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource60 = gzipSource57.inflaterSource;
        java.util.zip.CRC32 cRC32_61 = gzipSource57.crc;
        java.util.zip.Inflater inflater62 = gzipSource57.inflater;
        java.util.zip.CRC32 cRC32_63 = null;
        gzipSource57.crc = cRC32_63;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer65 = null;
        gzipSource57.buffer = okBuffer65;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater68 = null;
        gzipSource67.inflater = inflater68;
        int int70 = gzipSource67.section;
        gzipSource67.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource67);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer74 = gzipSource67.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline76 = null;
        long long77 = gzipSource57.read(okBuffer74, (long) (short) 0, deadline76);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer74, (long) (short) -1, (long) 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 0L + "'", long77 == 0L);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline17 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource10.close(deadline17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = null;
        gzipSource0.inflaterSource = inflaterSource3;
        java.lang.Class<?> wildcardClass5 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_18 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline20 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long21 = gzipSource0.seek((byte) 0, deadline20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_18);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        gzipSource0.require((int) (byte) -1, deadline7);
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long11 = gzipSource0.seek((byte) 3, deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_30 = null;
        gzipSource29.crc = cRC32_30;
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource29.crc = cRC32_32;
        gzipSource0.source = gzipSource29;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer35 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline37 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long38 = gzipSource29.read(okBuffer35, (long) (byte) 10, deadline37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        gzipSource0.section = 0;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource4.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        java.util.zip.Inflater inflater14 = gzipSource9.inflater;
        gzipSource9.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source19 = gzipSource9.source;
        gzipSource4.source = source19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource4.inflaterSource;
        int int22 = gzipSource4.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater24 = null;
        gzipSource23.inflater = inflater24;
        int int26 = gzipSource23.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource23.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer28 = null;
        gzipSource23.buffer = okBuffer28;
        int int30 = gzipSource23.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource23.inflaterSource;
        gzipSource4.source = gzipSource23;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_34 = null;
        gzipSource33.crc = cRC32_34;
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource33.crc = cRC32_36;
        gzipSource4.source = gzipSource33;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource39.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource42 = gzipSource39.inflaterSource;
        int int43 = gzipSource39.section;
        com.squareup.okhttp.internal.bytes.Source source44 = gzipSource39.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater46 = null;
        gzipSource45.inflater = inflater46;
        gzipSource39.source = gzipSource45;
        java.util.zip.CRC32 cRC32_49 = gzipSource39.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater51 = null;
        gzipSource50.inflater = inflater51;
        int int53 = gzipSource50.section;
        gzipSource50.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource50);
        com.squareup.okhttp.internal.bytes.Deadline deadline58 = null;
        gzipSource56.require((-1), deadline58);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater61 = null;
        gzipSource60.inflater = inflater61;
        int int63 = gzipSource60.section;
        gzipSource60.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource60);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource67 = null;
        gzipSource60.inflaterSource = inflaterSource67;
        gzipSource56.source = inflaterSource67;
        java.util.zip.CRC32 cRC32_70 = gzipSource56.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer71 = gzipSource56.buffer;
        gzipSource39.updateCrc(okBuffer71, (long) (short) 100, (long) (short) -1);
        gzipSource4.buffer = okBuffer71;
        com.squareup.okhttp.internal.bytes.Deadline deadline77 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long78 = gzipSource0.read(okBuffer71, (long) 2, deadline77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer71);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        gzipSource6.section = (byte) -1;
        java.util.zip.Inflater inflater10 = gzipSource6.inflater;
        java.lang.Class<?> wildcardClass11 = inflater10.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer10 = null;
        gzipSource0.buffer = okBuffer10;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_30 = null;
        gzipSource29.crc = cRC32_30;
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource29.crc = cRC32_32;
        gzipSource0.source = gzipSource29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource35.inflaterSource;
        int int39 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.Source source40 = gzipSource35.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        gzipSource35.source = gzipSource41;
        java.util.zip.CRC32 cRC32_45 = gzipSource35.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        int int49 = gzipSource46.section;
        gzipSource46.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        com.squareup.okhttp.internal.bytes.Deadline deadline54 = null;
        gzipSource52.require((-1), deadline54);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater57 = null;
        gzipSource56.inflater = inflater57;
        int int59 = gzipSource56.section;
        gzipSource56.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource56);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource63 = null;
        gzipSource56.inflaterSource = inflaterSource63;
        gzipSource52.source = inflaterSource63;
        java.util.zip.CRC32 cRC32_66 = gzipSource52.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer67 = gzipSource52.buffer;
        gzipSource35.updateCrc(okBuffer67, (long) (short) 100, (long) (short) -1);
        gzipSource0.buffer = okBuffer67;
        com.squareup.okhttp.internal.bytes.Deadline deadline73 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require(2, deadline73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer67);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater7 = null;
        gzipSource6.inflater = inflater7;
        gzipSource0.source = gzipSource6;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.consumeHeader(deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource11.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource19.inflater = inflater29;
        gzipSource11.inflater = inflater29;
        gzipSource10.inflater = inflater29;
        gzipSource9.inflater = inflater29;
        com.squareup.okhttp.internal.bytes.Deadline deadline35 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource9.require((int) (short) 100, deadline35);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        int int11 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = null;
        gzipSource0.buffer = okBuffer12;
        com.squareup.okhttp.internal.bytes.Deadline deadline15 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) (byte) 1, deadline15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        java.util.zip.CRC32 cRC32_9 = gzipSource0.crc;
        gzipSource0.section = 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer17 = null;
        gzipSource12.buffer = okBuffer17;
        gzipSource12.section = (byte) -1;
        gzipSource12.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        gzipSource12.section = (byte) 1;
        java.util.zip.CRC32 cRC32_26 = gzipSource12.crc;
        gzipSource0.crc = cRC32_26;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_26);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource5 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        com.squareup.okhttp.internal.bytes.Deadline deadline15 = null;
        gzipSource13.require((-1), deadline15);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        gzipSource17.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource17);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = null;
        gzipSource17.inflaterSource = inflaterSource24;
        gzipSource13.source = inflaterSource24;
        java.util.zip.CRC32 cRC32_27 = gzipSource13.crc;
        gzipSource6.crc = cRC32_27;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_27);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        gzipSource0.require((int) (byte) -1, deadline7);
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline13 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require(2, deadline13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource4.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_14 = null;
        gzipSource13.crc = cRC32_14;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource13.inflaterSource;
        java.util.zip.CRC32 cRC32_17 = gzipSource13.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource18.inflaterSource;
        gzipSource18.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        gzipSource25.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource25);
        java.util.zip.Inflater inflater32 = gzipSource31.inflater;
        gzipSource18.inflater = inflater32;
        gzipSource13.inflater = inflater32;
        gzipSource4.inflater = inflater32;
        java.util.zip.CRC32 cRC32_36 = gzipSource4.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater38 = null;
        gzipSource37.inflater = inflater38;
        int int40 = gzipSource37.section;
        gzipSource37.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource37);
        java.util.zip.CRC32 cRC32_44 = null;
        gzipSource37.crc = cRC32_44;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_47 = null;
        gzipSource46.crc = cRC32_47;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource49 = gzipSource46.inflaterSource;
        java.util.zip.CRC32 cRC32_50 = gzipSource46.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater52 = null;
        gzipSource51.inflater = inflater52;
        int int54 = gzipSource51.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource55 = gzipSource51.inflaterSource;
        gzipSource51.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        int int61 = gzipSource58.section;
        gzipSource58.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource58);
        java.util.zip.Inflater inflater65 = gzipSource64.inflater;
        gzipSource51.inflater = inflater65;
        gzipSource46.inflater = inflater65;
        gzipSource37.inflater = inflater65;
        java.util.zip.CRC32 cRC32_69 = gzipSource37.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_72 = null;
        gzipSource71.crc = cRC32_72;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource74 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater75 = null;
        gzipSource74.inflater = inflater75;
        int int77 = gzipSource74.section;
        gzipSource74.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource80 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource74);
        java.util.zip.Inflater inflater81 = gzipSource80.inflater;
        gzipSource71.inflater = inflater81;
        gzipSource70.inflater = inflater81;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer84 = gzipSource70.buffer;
        gzipSource37.buffer = okBuffer84;
        gzipSource4.updateCrc(okBuffer84, (long) '#', (long) (short) 0);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer89 = gzipSource4.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer89, 100L, (long) 3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer89);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int12 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_14 = null;
        gzipSource13.crc = cRC32_14;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource13.inflaterSource;
        java.util.zip.CRC32 cRC32_17 = gzipSource13.crc;
        java.util.zip.Inflater inflater18 = gzipSource13.inflater;
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource13.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource13.buffer;
        gzipSource11.updateCrc(okBuffer21, (long) '4', (long) (-1));
        java.util.zip.CRC32 cRC32_25 = gzipSource11.crc;
        gzipSource0.crc = cRC32_25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = null;
        gzipSource27.inflaterSource = inflaterSource34;
        java.util.zip.CRC32 cRC32_36 = gzipSource27.crc;
        gzipSource27.section = 100;
        com.squareup.okhttp.internal.bytes.Source source39 = gzipSource27.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource27.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer40, (long) (short) 10, 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        int int22 = gzipSource6.section;
        java.util.zip.CRC32 cRC32_23 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.Source source24 = gzipSource6.source;
        int int25 = gzipSource6.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater27 = null;
        gzipSource26.inflater = inflater27;
        int int29 = gzipSource26.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource26.inflaterSource;
        gzipSource26.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline34 = null;
        gzipSource26.require((int) (short) -1, deadline34);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater37 = null;
        gzipSource36.inflater = inflater37;
        int int39 = gzipSource36.section;
        gzipSource36.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource36);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = null;
        gzipSource36.inflaterSource = inflaterSource43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource36.inflaterSource;
        gzipSource26.source = gzipSource36;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer47 = gzipSource36.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.updateCrc(okBuffer47, (long) '#', (long) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer47);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource3.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource3.buffer = okBuffer8;
        gzipSource3.section = (byte) -1;
        java.util.zip.Inflater inflater12 = gzipSource3.inflater;
        java.util.zip.CRC32 cRC32_13 = gzipSource3.crc;
        gzipSource0.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource15.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_21 = null;
        gzipSource20.crc = cRC32_21;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource20.inflaterSource;
        java.util.zip.CRC32 cRC32_24 = gzipSource20.crc;
        java.util.zip.Inflater inflater25 = gzipSource20.inflater;
        gzipSource20.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source30 = gzipSource20.source;
        gzipSource15.source = source30;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource15.inflaterSource;
        int int33 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        java.util.zip.Inflater inflater35 = gzipSource34.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater37 = null;
        gzipSource36.inflater = inflater37;
        int int39 = gzipSource36.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource40 = gzipSource36.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_42 = null;
        gzipSource41.crc = cRC32_42;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = gzipSource41.inflaterSource;
        java.util.zip.CRC32 cRC32_45 = gzipSource41.crc;
        java.util.zip.Inflater inflater46 = gzipSource41.inflater;
        gzipSource41.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source51 = gzipSource41.source;
        gzipSource36.source = source51;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource53 = gzipSource36.inflaterSource;
        int int54 = gzipSource36.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource59 = gzipSource55.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = null;
        gzipSource55.buffer = okBuffer60;
        int int62 = gzipSource55.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource63 = gzipSource55.inflaterSource;
        gzipSource36.source = gzipSource55;
        java.util.zip.Inflater inflater65 = gzipSource55.inflater;
        java.util.zip.CRC32 cRC32_66 = gzipSource55.crc;
        gzipSource34.crc = cRC32_66;
        gzipSource0.source = gzipSource34;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer69 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource34.updateCrc(okBuffer69, (long) (short) 0, (long) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_66);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.Inflater inflater15 = gzipSource14.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        gzipSource0.source = gzipSource16;
        com.squareup.okhttp.internal.bytes.Deadline deadline19 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater15);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        gzipSource0.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        gzipSource12.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        gzipSource19.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        java.util.zip.Inflater inflater26 = gzipSource25.inflater;
        gzipSource12.inflater = inflater26;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource28 = null;
        gzipSource12.inflaterSource = inflaterSource28;
        gzipSource0.source = gzipSource12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_32 = null;
        gzipSource31.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource31.inflaterSource;
        java.util.zip.CRC32 cRC32_35 = gzipSource31.crc;
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource31.crc = cRC32_36;
        gzipSource31.section = (-1);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        gzipSource40.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        com.squareup.okhttp.internal.bytes.Deadline deadline48 = null;
        gzipSource46.require((-1), deadline48);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater51 = null;
        gzipSource50.inflater = inflater51;
        int int53 = gzipSource50.section;
        gzipSource50.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource50);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource57 = null;
        gzipSource50.inflaterSource = inflaterSource57;
        gzipSource46.source = inflaterSource57;
        java.util.zip.CRC32 cRC32_60 = gzipSource46.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer61 = gzipSource46.buffer;
        int int62 = gzipSource46.section;
        java.util.zip.CRC32 cRC32_63 = gzipSource46.crc;
        com.squareup.okhttp.internal.bytes.Source source64 = gzipSource46.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater66 = null;
        gzipSource65.inflater = inflater66;
        int int68 = gzipSource65.section;
        gzipSource65.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource65);
        com.squareup.okhttp.internal.bytes.Deadline deadline73 = null;
        gzipSource71.require((-1), deadline73);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater76 = null;
        gzipSource75.inflater = inflater76;
        int int78 = gzipSource75.section;
        gzipSource75.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource81 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource75);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource82 = null;
        gzipSource75.inflaterSource = inflaterSource82;
        gzipSource71.source = inflaterSource82;
        java.util.zip.CRC32 cRC32_85 = gzipSource71.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer86 = gzipSource71.buffer;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource87 = gzipSource71.inflaterSource;
        gzipSource46.inflaterSource = inflaterSource87;
        gzipSource31.inflaterSource = inflaterSource87;
        gzipSource12.inflaterSource = inflaterSource87;
        com.squareup.okhttp.internal.bytes.Deadline deadline91 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource12.consumeTrailer(deadline91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource87);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.require((int) (byte) 1, deadline8);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer13 = null;
        gzipSource8.buffer = okBuffer13;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource8.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource18.inflaterSource;
        gzipSource18.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline26 = null;
        gzipSource18.require((int) (short) -1, deadline26);
        com.squareup.okhttp.internal.bytes.Source source28 = gzipSource18.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        gzipSource29.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource29);
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource29.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_39 = null;
        gzipSource38.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource38.inflaterSource;
        java.util.zip.CRC32 cRC32_42 = gzipSource38.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater44 = null;
        gzipSource43.inflater = inflater44;
        int int46 = gzipSource43.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource43.inflaterSource;
        gzipSource43.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater51 = null;
        gzipSource50.inflater = inflater51;
        int int53 = gzipSource50.section;
        gzipSource50.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource50);
        java.util.zip.Inflater inflater57 = gzipSource56.inflater;
        gzipSource43.inflater = inflater57;
        gzipSource38.inflater = inflater57;
        gzipSource29.inflater = inflater57;
        gzipSource18.inflater = inflater57;
        gzipSource8.inflater = inflater57;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater64 = null;
        gzipSource63.inflater = inflater64;
        int int66 = gzipSource63.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource67 = gzipSource63.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer68 = null;
        gzipSource63.buffer = okBuffer68;
        int int70 = gzipSource63.section;
        com.squareup.okhttp.internal.bytes.Source source71 = null;
        gzipSource63.source = source71;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource63);
        java.util.zip.CRC32 cRC32_74 = gzipSource63.crc;
        gzipSource8.crc = cRC32_74;
        gzipSource0.crc = cRC32_74;
        com.squareup.okhttp.internal.bytes.Deadline deadline77 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_74);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource0.inflaterSource;
        int int11 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource9.source;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source10);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource8.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        com.squareup.okhttp.internal.bytes.Deadline deadline30 = null;
        gzipSource28.require((-1), deadline30);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        int int35 = gzipSource32.section;
        gzipSource32.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = null;
        gzipSource32.inflaterSource = inflaterSource39;
        gzipSource28.source = inflaterSource39;
        java.util.zip.CRC32 cRC32_42 = gzipSource28.crc;
        gzipSource8.crc = cRC32_42;
        gzipSource0.crc = cRC32_42;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_46 = null;
        gzipSource45.crc = cRC32_46;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource48 = gzipSource45.inflaterSource;
        java.util.zip.CRC32 cRC32_49 = gzipSource45.crc;
        java.util.zip.CRC32 cRC32_50 = null;
        gzipSource45.crc = cRC32_50;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_53 = null;
        gzipSource52.crc = cRC32_53;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource55 = gzipSource52.inflaterSource;
        java.util.zip.CRC32 cRC32_56 = gzipSource52.crc;
        java.util.zip.Inflater inflater57 = gzipSource52.inflater;
        gzipSource52.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source62 = gzipSource52.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater64 = null;
        gzipSource63.inflater = inflater64;
        int int66 = gzipSource63.section;
        gzipSource63.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource69 = gzipSource63.inflaterSource;
        gzipSource52.source = gzipSource63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_73 = null;
        gzipSource72.crc = cRC32_73;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater76 = null;
        gzipSource75.inflater = inflater76;
        int int78 = gzipSource75.section;
        gzipSource75.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource81 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource75);
        java.util.zip.Inflater inflater82 = gzipSource81.inflater;
        gzipSource72.inflater = inflater82;
        gzipSource71.inflater = inflater82;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer85 = gzipSource71.buffer;
        gzipSource52.updateCrc(okBuffer85, (long) '#', (long) (-1));
        gzipSource45.updateCrc(okBuffer85, (long) 0, 0L);
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer85, 1L, (long) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer85);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long9 = gzipSource0.seek((byte) 3, deadline8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource11.inflaterSource;
        gzipSource0.source = gzipSource11;
        com.squareup.okhttp.internal.bytes.Source source19 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        gzipSource20.section = (byte) -1;
        java.util.zip.CRC32 cRC32_26 = null;
        gzipSource20.crc = cRC32_26;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_29 = null;
        gzipSource28.crc = cRC32_29;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater32 = null;
        gzipSource31.inflater = inflater32;
        int int34 = gzipSource31.section;
        gzipSource31.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource31);
        java.util.zip.Inflater inflater38 = gzipSource37.inflater;
        gzipSource28.inflater = inflater38;
        gzipSource20.inflater = inflater38;
        gzipSource0.inflater = inflater38;
        com.squareup.okhttp.internal.bytes.Deadline deadline42 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline42);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater38);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeHeader(deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer13 = null;
        gzipSource8.buffer = okBuffer13;
        int int15 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.Source source16 = null;
        gzipSource8.source = source16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        gzipSource0.source = gzipSource8;
        java.util.zip.CRC32 cRC32_21 = gzipSource8.crc;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_21);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        int int30 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource31 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        com.squareup.okhttp.internal.bytes.Deadline deadline32 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource19.consumeHeader(deadline32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater10 = null;
        gzipSource9.inflater = inflater10;
        int int12 = gzipSource9.section;
        gzipSource9.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource9);
        java.util.zip.Inflater inflater16 = gzipSource15.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        java.util.zip.CRC32 cRC32_18 = gzipSource17.crc;
        gzipSource8.crc = cRC32_18;
        com.squareup.okhttp.internal.bytes.Deadline deadline20 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource8.consumeHeader(deadline20);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_18);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = null;
        gzipSource0.inflaterSource = inflaterSource7;
        // The following exception was thrown during execution in test generation
        try {
            com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) inflaterSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: source == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        gzipSource6.source = inflaterSource17;
        java.util.zip.CRC32 cRC32_20 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer21 = gzipSource6.buffer;
        int int22 = gzipSource6.section;
        java.util.zip.CRC32 cRC32_23 = gzipSource6.crc;
        com.squareup.okhttp.internal.bytes.Source source24 = gzipSource6.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline25 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource6.consumeTrailer(deadline25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source24);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource33.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_39 = null;
        gzipSource38.crc = cRC32_39;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource38.inflaterSource;
        java.util.zip.CRC32 cRC32_42 = gzipSource38.crc;
        java.util.zip.Inflater inflater43 = gzipSource38.inflater;
        gzipSource38.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source48 = gzipSource38.source;
        gzipSource33.source = source48;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource50 = gzipSource33.inflaterSource;
        int int51 = gzipSource33.section;
        gzipSource0.source = gzipSource33;
        com.squareup.okhttp.internal.bytes.Deadline deadline53 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource33.close(deadline53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = null;
        gzipSource0.inflaterSource = inflaterSource9;
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = null;
        gzipSource0.buffer = okBuffer12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource18);
        java.util.zip.Inflater inflater25 = gzipSource24.inflater;
        gzipSource15.inflater = inflater25;
        gzipSource14.inflater = inflater25;
        gzipSource0.inflater = inflater25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.Inflater inflater40 = gzipSource39.inflater;
        gzipSource30.inflater = inflater40;
        gzipSource29.inflater = inflater40;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource43 = gzipSource29.inflaterSource;
        java.util.zip.Inflater inflater44 = gzipSource29.inflater;
        gzipSource0.inflater = inflater44;
        int int46 = gzipSource0.section;
        java.util.zip.Inflater inflater47 = gzipSource0.inflater;
        java.lang.Class<?> wildcardClass48 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource0.crc = cRC32_5;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        gzipSource27.inflater = inflater37;
        gzipSource26.inflater = inflater37;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource26.buffer;
        gzipSource7.updateCrc(okBuffer40, (long) '#', (long) (-1));
        gzipSource0.updateCrc(okBuffer40, (long) 0, 0L);
        com.squareup.okhttp.internal.bytes.Source source47 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource48 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        gzipSource0.section = (byte) 0;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", (int) (byte) 0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000061 != expected 0x000000");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource48);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource19.checkEqual("", (int) (short) 0, (int) (byte) 2);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000002 != expected 0x000000");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = '#';
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.updateCrc(okBuffer11, (long) 100, (long) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_11 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_11);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        int int11 = gzipSource7.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = gzipSource7.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline14 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long15 = gzipSource0.read(okBuffer12, (-1L), deadline14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: byteCount < 0: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer12);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource11.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource19.inflater = inflater29;
        gzipSource11.inflater = inflater29;
        gzipSource10.inflater = inflater29;
        gzipSource9.inflater = inflater29;
        com.squareup.okhttp.internal.bytes.Deadline deadline34 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource9.consumeHeader(deadline34);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.Inflater inflater15 = gzipSource14.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        gzipSource0.source = gzipSource16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        gzipSource19.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource19);
        com.squareup.okhttp.internal.bytes.Deadline deadline27 = null;
        gzipSource25.require((-1), deadline27);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        gzipSource29.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource29);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = null;
        gzipSource29.inflaterSource = inflaterSource36;
        gzipSource25.source = inflaterSource36;
        java.util.zip.CRC32 cRC32_39 = gzipSource25.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        gzipSource40.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        java.util.zip.Inflater inflater47 = gzipSource46.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource48);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource51 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater52 = null;
        gzipSource51.inflater = inflater52;
        int int54 = gzipSource51.section;
        gzipSource51.section = (byte) -1;
        java.util.zip.CRC32 cRC32_57 = null;
        gzipSource51.crc = cRC32_57;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_60 = null;
        gzipSource59.crc = cRC32_60;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource62 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater63 = null;
        gzipSource62.inflater = inflater63;
        int int65 = gzipSource62.section;
        gzipSource62.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource68 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource62);
        java.util.zip.Inflater inflater69 = gzipSource68.inflater;
        gzipSource59.inflater = inflater69;
        gzipSource51.inflater = inflater69;
        gzipSource50.inflater = inflater69;
        gzipSource49.inflater = inflater69;
        int int74 = gzipSource49.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater76 = null;
        gzipSource75.inflater = inflater76;
        int int78 = gzipSource75.section;
        gzipSource75.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource81 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource75);
        java.util.zip.Inflater inflater82 = gzipSource81.inflater;
        gzipSource81.section = (byte) -1;
        java.util.zip.Inflater inflater85 = gzipSource81.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource86 = gzipSource81.inflaterSource;
        gzipSource49.inflaterSource = inflaterSource86;
        gzipSource25.inflaterSource = inflaterSource86;
        gzipSource16.inflaterSource = inflaterSource86;
        com.squareup.okhttp.internal.bytes.Deadline deadline91 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource16.require(2, deadline91);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource86);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source4 = gzipSource0.source;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", (int) (byte) 1, 3);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000003 != expected 0x000001");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source4);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        java.util.zip.CRC32 cRC32_12 = gzipSource8.crc;
        java.util.zip.CRC32 cRC32_13 = null;
        gzipSource8.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        java.util.zip.Inflater inflater20 = gzipSource15.inflater;
        gzipSource15.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source25 = gzipSource15.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater27 = null;
        gzipSource26.inflater = inflater27;
        int int29 = gzipSource26.section;
        gzipSource26.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource26.inflaterSource;
        gzipSource15.source = gzipSource26;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource35.inflater = inflater45;
        gzipSource34.inflater = inflater45;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer48 = gzipSource34.buffer;
        gzipSource15.updateCrc(okBuffer48, (long) '#', (long) (-1));
        gzipSource8.updateCrc(okBuffer48, (long) 0, 0L);
        gzipSource0.buffer = okBuffer48;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline57 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource56);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        java.util.zip.CRC32 cRC32_22 = gzipSource21.crc;
        java.lang.Class<?> wildcardClass23 = cRC32_22.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.Source source10 = gzipSource0.source;
        int int11 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer12 = null;
        gzipSource0.buffer = okBuffer12;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = gzipSource14.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = null;
        gzipSource14.inflaterSource = inflaterSource16;
        com.squareup.okhttp.internal.bytes.Source source18 = gzipSource14.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer19 = gzipSource14.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline21 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long22 = gzipSource0.read(okBuffer19, (long) 10, deadline21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer19);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater6 = null;
        gzipSource5.inflater = inflater6;
        int int8 = gzipSource5.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource5.inflaterSource;
        gzipSource5.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource5.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource22 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource24 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater25 = null;
        gzipSource24.inflater = inflater25;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource24);
        java.util.zip.CRC32 cRC32_28 = gzipSource27.crc;
        gzipSource0.crc = cRC32_28;
        java.util.zip.Inflater inflater30 = gzipSource0.inflater;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater30);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_18 = gzipSource0.crc;
        int int19 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline21 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long22 = gzipSource0.seek((byte) 2, deadline21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater2 = null;
        gzipSource1.inflater = inflater2;
        int int4 = gzipSource1.section;
        gzipSource1.section = (byte) -1;
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource1.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource1.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource23 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_24 = null;
        gzipSource23.crc = cRC32_24;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource23.inflaterSource;
        java.util.zip.CRC32 cRC32_27 = gzipSource23.crc;
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource23.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        java.util.zip.Inflater inflater35 = gzipSource30.inflater;
        gzipSource30.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source40 = gzipSource30.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater42 = null;
        gzipSource41.inflater = inflater42;
        int int44 = gzipSource41.section;
        gzipSource41.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = gzipSource41.inflaterSource;
        gzipSource30.source = gzipSource41;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater54 = null;
        gzipSource53.inflater = inflater54;
        int int56 = gzipSource53.section;
        gzipSource53.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource59 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource53);
        java.util.zip.Inflater inflater60 = gzipSource59.inflater;
        gzipSource50.inflater = inflater60;
        gzipSource49.inflater = inflater60;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer63 = gzipSource49.buffer;
        gzipSource30.updateCrc(okBuffer63, (long) '#', (long) (-1));
        gzipSource23.updateCrc(okBuffer63, (long) 0, 0L);
        gzipSource0.buffer = okBuffer63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_72 = null;
        gzipSource71.crc = cRC32_72;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource74 = gzipSource71.inflaterSource;
        java.util.zip.CRC32 cRC32_75 = gzipSource71.crc;
        java.util.zip.Inflater inflater76 = gzipSource71.inflater;
        java.util.zip.CRC32 cRC32_77 = null;
        gzipSource71.crc = cRC32_77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer79 = null;
        gzipSource71.buffer = okBuffer79;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer81 = null;
        gzipSource71.buffer = okBuffer81;
        gzipSource0.source = gzipSource71;
        com.squareup.okhttp.internal.bytes.Deadline deadline85 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long86 = gzipSource0.seek((byte) 0, deadline85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater76);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = (byte) 1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        gzipSource0.section = (byte) 1;
        java.util.zip.CRC32 cRC32_14 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline15 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_14);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater2 = null;
        gzipSource1.inflater = inflater2;
        int int4 = gzipSource1.section;
        gzipSource1.section = (byte) -1;
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource1.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource12);
        java.util.zip.Inflater inflater19 = gzipSource18.inflater;
        gzipSource9.inflater = inflater19;
        gzipSource1.inflater = inflater19;
        gzipSource0.inflater = inflater19;
        int int23 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline24 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer7 = gzipSource0.buffer;
        java.lang.Class<?> wildcardClass8 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource11.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource19.inflater = inflater29;
        gzipSource11.inflater = inflater29;
        gzipSource10.inflater = inflater29;
        gzipSource9.inflater = inflater29;
        com.squareup.okhttp.internal.bytes.Deadline deadline34 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource9.close(deadline34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_9 = null;
        gzipSource8.crc = cRC32_9;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource11 = gzipSource8.inflaterSource;
        int int12 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.Source source13 = gzipSource8.source;
        gzipSource8.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer16 = gzipSource8.buffer;
        gzipSource8.section = (byte) 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer19 = gzipSource8.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater21 = null;
        gzipSource20.inflater = inflater21;
        int int23 = gzipSource20.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource20.inflaterSource;
        gzipSource20.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater28 = null;
        gzipSource27.inflater = inflater28;
        int int30 = gzipSource27.section;
        gzipSource27.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource27);
        java.util.zip.Inflater inflater34 = gzipSource33.inflater;
        gzipSource20.inflater = inflater34;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = null;
        gzipSource20.inflaterSource = inflaterSource36;
        gzipSource8.source = gzipSource20;
        gzipSource6.source = gzipSource8;
        int int40 = gzipSource8.section;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        gzipSource0.checkEqual("", 100, 100);
        java.util.zip.Inflater inflater10 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_12 = gzipSource11.crc;
        int int13 = gzipSource11.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline15 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource11.require((int) (short) 1, deadline15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater4 = null;
        gzipSource3.inflater = inflater4;
        int int6 = gzipSource3.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource3.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = null;
        gzipSource3.buffer = okBuffer8;
        gzipSource3.section = (byte) -1;
        java.util.zip.Inflater inflater12 = gzipSource3.inflater;
        java.util.zip.CRC32 cRC32_13 = gzipSource3.crc;
        gzipSource0.crc = cRC32_13;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource15.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_21 = null;
        gzipSource20.crc = cRC32_21;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource20.inflaterSource;
        java.util.zip.CRC32 cRC32_24 = gzipSource20.crc;
        java.util.zip.Inflater inflater25 = gzipSource20.inflater;
        gzipSource20.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source30 = gzipSource20.source;
        gzipSource15.source = source30;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = gzipSource15.inflaterSource;
        int int33 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        java.util.zip.Inflater inflater35 = gzipSource34.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater37 = null;
        gzipSource36.inflater = inflater37;
        int int39 = gzipSource36.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource40 = gzipSource36.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_42 = null;
        gzipSource41.crc = cRC32_42;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource44 = gzipSource41.inflaterSource;
        java.util.zip.CRC32 cRC32_45 = gzipSource41.crc;
        java.util.zip.Inflater inflater46 = gzipSource41.inflater;
        gzipSource41.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source51 = gzipSource41.source;
        gzipSource36.source = source51;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource53 = gzipSource36.inflaterSource;
        int int54 = gzipSource36.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource59 = gzipSource55.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = null;
        gzipSource55.buffer = okBuffer60;
        int int62 = gzipSource55.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource63 = gzipSource55.inflaterSource;
        gzipSource36.source = gzipSource55;
        java.util.zip.Inflater inflater65 = gzipSource55.inflater;
        java.util.zip.CRC32 cRC32_66 = gzipSource55.crc;
        gzipSource34.crc = cRC32_66;
        gzipSource0.source = gzipSource34;
        com.squareup.okhttp.internal.bytes.Deadline deadline69 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource34.consumeTrailer(deadline69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_66);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource6.require((-1), deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource10.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_16 = null;
        gzipSource15.crc = cRC32_16;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource15.inflaterSource;
        java.util.zip.CRC32 cRC32_19 = gzipSource15.crc;
        java.util.zip.Inflater inflater20 = gzipSource15.inflater;
        gzipSource15.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source25 = gzipSource15.source;
        gzipSource10.source = source25;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource10.inflaterSource;
        int int28 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource29.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer34 = null;
        gzipSource29.buffer = okBuffer34;
        int int36 = gzipSource29.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = gzipSource29.inflaterSource;
        gzipSource10.source = gzipSource29;
        java.util.zip.Inflater inflater39 = gzipSource29.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        gzipSource40.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource47 = null;
        gzipSource40.inflaterSource = inflaterSource47;
        java.util.zip.CRC32 cRC32_49 = gzipSource40.crc;
        gzipSource29.crc = cRC32_49;
        gzipSource6.source = gzipSource29;
        com.squareup.okhttp.internal.bytes.Deadline deadline52 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource29.consumeHeader(deadline52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_49);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = null;
        gzipSource0.inflaterSource = inflaterSource4;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource6 = gzipSource0.inflaterSource;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.Deadline deadline15 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer6 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        long long9 = gzipSource0.read(okBuffer6, (long) 100, deadline8);
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require((int) '4', deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource6.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource6.inflaterSource;
        java.util.zip.CRC32 cRC32_10 = gzipSource6.crc;
        java.util.zip.Inflater inflater11 = gzipSource6.inflater;
        gzipSource6.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source16 = gzipSource6.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater18 = null;
        gzipSource17.inflater = inflater18;
        int int20 = gzipSource17.section;
        gzipSource17.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource17.inflaterSource;
        gzipSource6.source = gzipSource17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_27 = null;
        gzipSource26.crc = cRC32_27;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource29 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater30 = null;
        gzipSource29.inflater = inflater30;
        int int32 = gzipSource29.section;
        gzipSource29.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource29);
        java.util.zip.Inflater inflater36 = gzipSource35.inflater;
        gzipSource26.inflater = inflater36;
        gzipSource25.inflater = inflater36;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer39 = gzipSource25.buffer;
        gzipSource6.updateCrc(okBuffer39, (long) '#', (long) (-1));
        com.squareup.okhttp.internal.bytes.Deadline deadline44 = null;
        long long45 = gzipSource0.read(okBuffer39, (long) (short) 0, deadline44);
        com.squareup.okhttp.internal.bytes.Deadline deadline47 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.require(3, deadline47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long9 = gzipSource0.seek((byte) 0, deadline8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource33.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource47.inflaterSource;
        gzipSource47.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        gzipSource54.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource54);
        java.util.zip.Inflater inflater61 = gzipSource60.inflater;
        gzipSource47.inflater = inflater61;
        gzipSource42.inflater = inflater61;
        gzipSource33.inflater = inflater61;
        java.util.zip.CRC32 cRC32_65 = gzipSource33.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_68 = null;
        gzipSource67.crc = cRC32_68;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater71 = null;
        gzipSource70.inflater = inflater71;
        int int73 = gzipSource70.section;
        gzipSource70.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource70);
        java.util.zip.Inflater inflater77 = gzipSource76.inflater;
        gzipSource67.inflater = inflater77;
        gzipSource66.inflater = inflater77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource66.buffer;
        gzipSource33.buffer = okBuffer80;
        gzipSource0.updateCrc(okBuffer80, (long) '#', (long) (short) 0);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer85 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource86 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer85);
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer87 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource86.updateCrc(okBuffer87, (long) (short) 1, (long) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer85);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource5 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource5);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.CRC32 cRC32_40 = null;
        gzipSource33.crc = cRC32_40;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_43 = null;
        gzipSource42.crc = cRC32_43;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource45 = gzipSource42.inflaterSource;
        java.util.zip.CRC32 cRC32_46 = gzipSource42.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource47 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater48 = null;
        gzipSource47.inflater = inflater48;
        int int50 = gzipSource47.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource47.inflaterSource;
        gzipSource47.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource54 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater55 = null;
        gzipSource54.inflater = inflater55;
        int int57 = gzipSource54.section;
        gzipSource54.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource60 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource54);
        java.util.zip.Inflater inflater61 = gzipSource60.inflater;
        gzipSource47.inflater = inflater61;
        gzipSource42.inflater = inflater61;
        gzipSource33.inflater = inflater61;
        java.util.zip.CRC32 cRC32_65 = gzipSource33.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource66 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_68 = null;
        gzipSource67.crc = cRC32_68;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource70 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater71 = null;
        gzipSource70.inflater = inflater71;
        int int73 = gzipSource70.section;
        gzipSource70.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource76 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource70);
        java.util.zip.Inflater inflater77 = gzipSource76.inflater;
        gzipSource67.inflater = inflater77;
        gzipSource66.inflater = inflater77;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer80 = gzipSource66.buffer;
        gzipSource33.buffer = okBuffer80;
        gzipSource0.updateCrc(okBuffer80, (long) '#', (long) (short) 0);
        gzipSource0.checkEqual("hi!", (int) (short) 10, 10);
        java.util.zip.CRC32 cRC32_89 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline90 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_89);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.CRC32 cRC32_5 = null;
        gzipSource0.crc = cRC32_5;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        gzipSource27.inflater = inflater37;
        gzipSource26.inflater = inflater37;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer40 = gzipSource26.buffer;
        gzipSource7.updateCrc(okBuffer40, (long) '#', (long) (-1));
        gzipSource0.updateCrc(okBuffer40, (long) 0, 0L);
        com.squareup.okhttp.internal.bytes.Source source47 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource48 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource50.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource53 = gzipSource50.inflaterSource;
        java.util.zip.CRC32 cRC32_54 = gzipSource50.crc;
        java.util.zip.Inflater inflater55 = gzipSource50.inflater;
        java.util.zip.CRC32 cRC32_56 = null;
        gzipSource50.crc = cRC32_56;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer58 = gzipSource50.buffer;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource49.updateCrc(okBuffer58, (long) 1, (long) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer58);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource1 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_2 = null;
        gzipSource1.crc = cRC32_2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource4 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater5 = null;
        gzipSource4.inflater = inflater5;
        int int7 = gzipSource4.section;
        gzipSource4.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource4);
        java.util.zip.Inflater inflater11 = gzipSource10.inflater;
        gzipSource1.inflater = inflater11;
        gzipSource0.inflater = inflater11;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer14 = gzipSource0.buffer;
        java.util.zip.CRC32 cRC32_15 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        java.util.zip.CRC32 cRC32_10 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline11 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_10);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        int int1 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource2 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater3 = null;
        gzipSource2.inflater = inflater3;
        int int5 = gzipSource2.section;
        gzipSource2.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource2);
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource2.source;
        gzipSource0.source = gzipSource2;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_18 = null;
        gzipSource17.crc = cRC32_18;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource20 = gzipSource17.inflaterSource;
        java.util.zip.CRC32 cRC32_21 = gzipSource17.crc;
        java.util.zip.Inflater inflater22 = gzipSource17.inflater;
        gzipSource17.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source27 = gzipSource17.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater29 = null;
        gzipSource28.inflater = inflater29;
        int int31 = gzipSource28.section;
        gzipSource28.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = gzipSource28.inflaterSource;
        gzipSource17.source = gzipSource28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_38 = null;
        gzipSource37.crc = cRC32_38;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater41 = null;
        gzipSource40.inflater = inflater41;
        int int43 = gzipSource40.section;
        gzipSource40.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource40);
        java.util.zip.Inflater inflater47 = gzipSource46.inflater;
        gzipSource37.inflater = inflater47;
        gzipSource36.inflater = inflater47;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer50 = gzipSource36.buffer;
        gzipSource17.updateCrc(okBuffer50, (long) '#', (long) (-1));
        com.squareup.okhttp.internal.bytes.Deadline deadline55 = null;
        long long56 = gzipSource11.read(okBuffer50, (long) (short) 0, deadline55);
        gzipSource0.source = gzipSource11;
        int int58 = gzipSource0.section;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("hi!", 10, (-1));
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: hi!: actual 0xffffffff != expected 0x00000a");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer7 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer7);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = source5.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater8 = null;
        gzipSource7.inflater = inflater8;
        int int10 = gzipSource7.section;
        gzipSource7.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource13 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource7);
        java.util.zip.CRC32 cRC32_14 = null;
        gzipSource7.crc = cRC32_14;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource16.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource16.inflaterSource;
        java.util.zip.CRC32 cRC32_20 = gzipSource16.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource21.inflaterSource;
        gzipSource21.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater29 = null;
        gzipSource28.inflater = inflater29;
        int int31 = gzipSource28.section;
        gzipSource28.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource28);
        java.util.zip.Inflater inflater35 = gzipSource34.inflater;
        gzipSource21.inflater = inflater35;
        gzipSource16.inflater = inflater35;
        gzipSource7.inflater = inflater35;
        java.util.zip.CRC32 cRC32_39 = gzipSource7.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource40 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_42 = null;
        gzipSource41.crc = cRC32_42;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        java.util.zip.Inflater inflater51 = gzipSource50.inflater;
        gzipSource41.inflater = inflater51;
        gzipSource40.inflater = inflater51;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer54 = gzipSource40.buffer;
        gzipSource7.buffer = okBuffer54;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource56 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer54);
        gzipSource0.buffer = okBuffer54;
        int int58 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        java.util.zip.CRC32 cRC32_22 = gzipSource21.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline24 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long25 = gzipSource21.seek((byte) 1, deadline24);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_22);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource14 = gzipSource10.inflaterSource;
        gzipSource10.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline18 = null;
        gzipSource10.require((int) (short) -1, deadline18);
        com.squareup.okhttp.internal.bytes.Source source20 = gzipSource10.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource21.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_31 = null;
        gzipSource30.crc = cRC32_31;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource30.inflaterSource;
        java.util.zip.CRC32 cRC32_34 = gzipSource30.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater36 = null;
        gzipSource35.inflater = inflater36;
        int int38 = gzipSource35.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource39 = gzipSource35.inflaterSource;
        gzipSource35.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        java.util.zip.Inflater inflater49 = gzipSource48.inflater;
        gzipSource35.inflater = inflater49;
        gzipSource30.inflater = inflater49;
        gzipSource21.inflater = inflater49;
        gzipSource10.inflater = inflater49;
        gzipSource0.inflater = inflater49;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource59 = gzipSource55.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer60 = null;
        gzipSource55.buffer = okBuffer60;
        int int62 = gzipSource55.section;
        com.squareup.okhttp.internal.bytes.Source source63 = null;
        gzipSource55.source = source63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource55);
        java.util.zip.CRC32 cRC32_66 = gzipSource55.crc;
        gzipSource0.crc = cRC32_66;
        com.squareup.okhttp.internal.bytes.Deadline deadline68 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_66);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer6 = null;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        long long9 = gzipSource0.read(okBuffer6, (long) 100, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        java.util.zip.CRC32 cRC32_14 = gzipSource10.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource15.inflaterSource;
        gzipSource15.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource15.inflater = inflater29;
        gzipSource10.inflater = inflater29;
        gzipSource0.inflater = inflater29;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource33 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline34 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource33);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater4 = gzipSource0.inflater;
        int int5 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        int int7 = gzipSource0.section;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        int int7 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source8 = null;
        gzipSource0.source = source8;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_11 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource12 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater13 = null;
        gzipSource12.inflater = inflater13;
        int int15 = gzipSource12.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource16 = gzipSource12.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer17 = null;
        gzipSource12.buffer = okBuffer17;
        gzipSource12.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = null;
        gzipSource12.inflaterSource = inflaterSource21;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource12.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource12.buffer = okBuffer24;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource26 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        java.util.zip.Inflater inflater37 = gzipSource36.inflater;
        gzipSource27.inflater = inflater37;
        gzipSource26.inflater = inflater37;
        gzipSource12.inflater = inflater37;
        gzipSource0.source = gzipSource12;
        java.lang.Class<?> wildcardClass42 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Source source6 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source6);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource3 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        int int4 = gzipSource3.section;
        com.squareup.okhttp.internal.bytes.Deadline deadline5 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource3.consumeHeader(deadline5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        int int22 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource19.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer24 = null;
        gzipSource19.buffer = okBuffer24;
        int int26 = gzipSource19.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource27 = gzipSource19.inflaterSource;
        gzipSource0.source = gzipSource19;
        java.util.zip.Inflater inflater29 = gzipSource19.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource30 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater31 = null;
        gzipSource30.inflater = inflater31;
        int int33 = gzipSource30.section;
        gzipSource30.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource36 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource30);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource37 = null;
        gzipSource30.inflaterSource = inflaterSource37;
        java.util.zip.CRC32 cRC32_39 = gzipSource30.crc;
        gzipSource19.crc = cRC32_39;
        java.util.zip.Inflater inflater41 = gzipSource19.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater43 = null;
        gzipSource42.inflater = inflater43;
        int int45 = gzipSource42.section;
        gzipSource42.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource42);
        java.util.zip.Inflater inflater49 = gzipSource48.inflater;
        gzipSource48.section = (byte) -1;
        java.util.zip.Inflater inflater52 = gzipSource48.inflater;
        gzipSource19.inflater = inflater52;
        com.squareup.okhttp.internal.bytes.Deadline deadline55 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource19.require(3, deadline55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater52);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        java.util.zip.CRC32 cRC32_32 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource33 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater34 = null;
        gzipSource33.inflater = inflater34;
        int int36 = gzipSource33.section;
        gzipSource33.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource39 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource33);
        java.util.zip.Inflater inflater40 = gzipSource39.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource41 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource39);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource42 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource41);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource43 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        java.util.zip.CRC32 cRC32_50 = null;
        gzipSource44.crc = cRC32_50;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_53 = null;
        gzipSource52.crc = cRC32_53;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource55 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater56 = null;
        gzipSource55.inflater = inflater56;
        int int58 = gzipSource55.section;
        gzipSource55.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource61 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource55);
        java.util.zip.Inflater inflater62 = gzipSource61.inflater;
        gzipSource52.inflater = inflater62;
        gzipSource44.inflater = inflater62;
        gzipSource43.inflater = inflater62;
        gzipSource42.inflater = inflater62;
        gzipSource0.inflater = inflater62;
        com.squareup.okhttp.internal.bytes.Source source68 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource69 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater70 = null;
        gzipSource69.inflater = inflater70;
        int int72 = gzipSource69.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource73 = gzipSource69.inflaterSource;
        gzipSource69.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline77 = null;
        gzipSource69.require((int) (short) -1, deadline77);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource79 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater80 = null;
        gzipSource79.inflater = inflater80;
        int int82 = gzipSource79.section;
        gzipSource79.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource85 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource79);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource86 = null;
        gzipSource79.inflaterSource = inflaterSource86;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource88 = gzipSource79.inflaterSource;
        gzipSource69.source = gzipSource79;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer90 = gzipSource79.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline92 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long93 = gzipSource0.read(okBuffer90, (long) (byte) -1, deadline92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: byteCount < 0: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer90);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer5 = null;
        gzipSource0.buffer = okBuffer5;
        gzipSource0.section = (byte) -1;
        gzipSource0.section = '#';
        com.squareup.okhttp.internal.bytes.Source source11 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline12 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source11);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        java.util.zip.Inflater inflater8 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.Source source9 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_10 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource11);
        java.util.zip.CRC32 cRC32_18 = null;
        gzipSource11.crc = cRC32_18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource20 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_21 = null;
        gzipSource20.crc = cRC32_21;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource23 = gzipSource20.inflaterSource;
        java.util.zip.CRC32 cRC32_24 = gzipSource20.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource25 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater26 = null;
        gzipSource25.inflater = inflater26;
        int int28 = gzipSource25.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource29 = gzipSource25.inflaterSource;
        gzipSource25.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource32 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater33 = null;
        gzipSource32.inflater = inflater33;
        int int35 = gzipSource32.section;
        gzipSource32.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource32);
        java.util.zip.Inflater inflater39 = gzipSource38.inflater;
        gzipSource25.inflater = inflater39;
        gzipSource20.inflater = inflater39;
        gzipSource11.inflater = inflater39;
        java.util.zip.CRC32 cRC32_43 = gzipSource11.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater45 = null;
        gzipSource44.inflater = inflater45;
        int int47 = gzipSource44.section;
        gzipSource44.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource50 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource44);
        java.util.zip.CRC32 cRC32_51 = null;
        gzipSource44.crc = cRC32_51;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_54 = null;
        gzipSource53.crc = cRC32_54;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = gzipSource53.inflaterSource;
        java.util.zip.CRC32 cRC32_57 = gzipSource53.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        int int61 = gzipSource58.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource62 = gzipSource58.inflaterSource;
        gzipSource58.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater66 = null;
        gzipSource65.inflater = inflater66;
        int int68 = gzipSource65.section;
        gzipSource65.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource65);
        java.util.zip.Inflater inflater72 = gzipSource71.inflater;
        gzipSource58.inflater = inflater72;
        gzipSource53.inflater = inflater72;
        gzipSource44.inflater = inflater72;
        java.util.zip.CRC32 cRC32_76 = gzipSource44.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource77 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource78 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_79 = null;
        gzipSource78.crc = cRC32_79;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource81 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater82 = null;
        gzipSource81.inflater = inflater82;
        int int84 = gzipSource81.section;
        gzipSource81.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource87 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource81);
        java.util.zip.Inflater inflater88 = gzipSource87.inflater;
        gzipSource78.inflater = inflater88;
        gzipSource77.inflater = inflater88;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer91 = gzipSource77.buffer;
        gzipSource44.buffer = okBuffer91;
        gzipSource11.updateCrc(okBuffer91, (long) '#', (long) (short) 0);
        com.squareup.okhttp.internal.bytes.Deadline deadline97 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long98 = gzipSource0.read(okBuffer91, 10L, deadline97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 100 + "'", int84 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer91);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_23 = null;
        gzipSource22.crc = cRC32_23;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource25 = gzipSource22.inflaterSource;
        java.util.zip.CRC32 cRC32_26 = gzipSource22.crc;
        java.util.zip.Inflater inflater27 = gzipSource22.inflater;
        gzipSource22.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source32 = gzipSource22.source;
        com.squareup.okhttp.internal.bytes.Source source33 = gzipSource22.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource35.inflater = inflater45;
        gzipSource34.inflater = inflater45;
        gzipSource22.inflater = inflater45;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater50 = null;
        gzipSource49.inflater = inflater50;
        int int52 = gzipSource49.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource53 = gzipSource49.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer54 = null;
        gzipSource49.buffer = okBuffer54;
        gzipSource49.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource58 = null;
        gzipSource49.inflaterSource = inflaterSource58;
        com.squareup.okhttp.internal.bytes.Source source60 = gzipSource49.source;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer61 = null;
        gzipSource49.buffer = okBuffer61;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource64 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_65 = null;
        gzipSource64.crc = cRC32_65;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource67 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater68 = null;
        gzipSource67.inflater = inflater68;
        int int70 = gzipSource67.section;
        gzipSource67.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource73 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource67);
        java.util.zip.Inflater inflater74 = gzipSource73.inflater;
        gzipSource64.inflater = inflater74;
        gzipSource63.inflater = inflater74;
        gzipSource49.inflater = inflater74;
        gzipSource22.inflater = inflater74;
        gzipSource21.inflater = inflater74;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater74);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Source source7 = gzipSource0.source;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source7);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource9 = gzipSource8.inflaterSource;
        com.squareup.okhttp.internal.bytes.Deadline deadline10 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource8.close(deadline10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflaterSource9);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        gzipSource0.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.Deadline deadline8 = null;
        gzipSource0.require((int) (short) -1, deadline8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater11 = null;
        gzipSource10.inflater = inflater11;
        int int13 = gzipSource10.section;
        gzipSource10.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = null;
        gzipSource10.inflaterSource = inflaterSource17;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource19 = gzipSource10.inflaterSource;
        gzipSource0.source = gzipSource10;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource10);
        com.squareup.okhttp.internal.bytes.Deadline deadline23 = null;
        gzipSource10.require(0, deadline23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource19);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.Deadline deadline7 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.consumeTrailer(deadline7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_6);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource11 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater12 = null;
        gzipSource11.inflater = inflater12;
        int int14 = gzipSource11.section;
        gzipSource11.section = (byte) -1;
        java.util.zip.CRC32 cRC32_17 = null;
        gzipSource11.crc = cRC32_17;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_20 = null;
        gzipSource19.crc = cRC32_20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        gzipSource22.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource22);
        java.util.zip.Inflater inflater29 = gzipSource28.inflater;
        gzipSource19.inflater = inflater29;
        gzipSource11.inflater = inflater29;
        gzipSource10.inflater = inflater29;
        gzipSource9.inflater = inflater29;
        int int34 = gzipSource9.section;
        gzipSource9.checkEqual("", (int) (short) 100, (int) (short) 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        int int18 = gzipSource0.section;
        int int19 = gzipSource0.section;
        java.util.zip.CRC32 cRC32_20 = gzipSource0.crc;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_20);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        java.util.zip.CRC32 cRC32_3 = null;
        gzipSource0.crc = cRC32_3;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        java.util.zip.CRC32 cRC32_6 = gzipSource0.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource7 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_8 = null;
        gzipSource7.crc = cRC32_8;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource10 = gzipSource7.inflaterSource;
        java.util.zip.CRC32 cRC32_11 = gzipSource7.crc;
        java.util.zip.Inflater inflater12 = gzipSource7.inflater;
        gzipSource7.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source17 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater19 = null;
        gzipSource18.inflater = inflater19;
        int int21 = gzipSource18.section;
        gzipSource18.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource24 = gzipSource18.inflaterSource;
        gzipSource7.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.Source source26 = gzipSource7.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_28 = null;
        gzipSource27.crc = cRC32_28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource30 = gzipSource27.inflaterSource;
        java.util.zip.Inflater inflater31 = gzipSource27.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer32 = gzipSource27.buffer;
        gzipSource7.buffer = okBuffer32;
        gzipSource0.source = okBuffer32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource35 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_36 = null;
        gzipSource35.crc = cRC32_36;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource38 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater39 = null;
        gzipSource38.inflater = inflater39;
        int int41 = gzipSource38.section;
        gzipSource38.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource38);
        java.util.zip.Inflater inflater45 = gzipSource44.inflater;
        gzipSource35.inflater = inflater45;
        gzipSource0.inflater = inflater45;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource48 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_49 = null;
        gzipSource48.crc = cRC32_49;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource51 = gzipSource48.inflaterSource;
        java.util.zip.Inflater inflater52 = gzipSource48.inflater;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer53 = gzipSource48.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer54 = gzipSource48.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline56 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long57 = gzipSource0.read(okBuffer54, (long) ' ', deadline56);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(source26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer54);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        int int4 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.Source source5 = gzipSource0.source;
        gzipSource0.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer8 = gzipSource0.buffer;
        com.squareup.okhttp.internal.bytes.Deadline deadline9 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.close(deadline9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer8);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer4 = null;
        gzipSource0.buffer = okBuffer4;
        java.util.zip.Inflater inflater6 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource7 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        gzipSource8.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource8);
        java.util.zip.Inflater inflater15 = gzipSource14.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource16 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource14);
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource17 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource16);
        gzipSource0.source = gzipSource16;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource19 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater20 = null;
        gzipSource19.inflater = inflater20;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource22 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater23 = null;
        gzipSource22.inflater = inflater23;
        int int25 = gzipSource22.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource26 = gzipSource22.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer27 = null;
        gzipSource22.buffer = okBuffer27;
        gzipSource22.section = (byte) -1;
        java.util.zip.Inflater inflater31 = gzipSource22.inflater;
        java.util.zip.CRC32 cRC32_32 = gzipSource22.crc;
        gzipSource19.crc = cRC32_32;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource34 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater35 = null;
        gzipSource34.inflater = inflater35;
        int int37 = gzipSource34.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource38 = gzipSource34.inflaterSource;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer39 = null;
        gzipSource34.buffer = okBuffer39;
        int int41 = gzipSource34.section;
        com.squareup.okhttp.internal.bytes.Source source42 = null;
        gzipSource34.source = source42;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource44 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource34);
        java.util.zip.CRC32 cRC32_45 = gzipSource34.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource46 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater47 = null;
        gzipSource46.inflater = inflater47;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource49 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource46);
        java.util.zip.CRC32 cRC32_50 = gzipSource49.crc;
        gzipSource34.crc = cRC32_50;
        gzipSource19.crc = cRC32_50;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource53 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_54 = null;
        gzipSource53.crc = cRC32_54;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource56 = gzipSource53.inflaterSource;
        java.util.zip.CRC32 cRC32_57 = gzipSource53.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource58 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater59 = null;
        gzipSource58.inflater = inflater59;
        int int61 = gzipSource58.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource62 = gzipSource58.inflaterSource;
        gzipSource58.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource65 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater66 = null;
        gzipSource65.inflater = inflater66;
        int int68 = gzipSource65.section;
        gzipSource65.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource65);
        java.util.zip.Inflater inflater72 = gzipSource71.inflater;
        gzipSource58.inflater = inflater72;
        gzipSource53.inflater = inflater72;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource75 = gzipSource53.inflaterSource;
        com.squareup.okhttp.internal.bytes.Source source76 = gzipSource53.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource77 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater78 = null;
        gzipSource77.inflater = inflater78;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource80 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource77);
        java.util.zip.CRC32 cRC32_81 = gzipSource80.crc;
        gzipSource53.crc = cRC32_81;
        java.util.zip.CRC32 cRC32_83 = gzipSource53.crc;
        gzipSource19.crc = cRC32_83;
        gzipSource0.crc = cRC32_83;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_83);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.CRC32 cRC32_7 = null;
        gzipSource0.crc = cRC32_7;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource9 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_10 = null;
        gzipSource9.crc = cRC32_10;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource9.inflaterSource;
        java.util.zip.CRC32 cRC32_13 = gzipSource9.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource14 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater15 = null;
        gzipSource14.inflater = inflater15;
        int int17 = gzipSource14.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource18 = gzipSource14.inflaterSource;
        gzipSource14.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater22 = null;
        gzipSource21.inflater = inflater22;
        int int24 = gzipSource21.section;
        gzipSource21.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource27 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource21);
        java.util.zip.Inflater inflater28 = gzipSource27.inflater;
        gzipSource14.inflater = inflater28;
        gzipSource9.inflater = inflater28;
        gzipSource0.inflater = inflater28;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource32 = null;
        gzipSource0.inflaterSource = inflaterSource32;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource34 = null;
        gzipSource0.inflaterSource = inflaterSource34;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource36 = gzipSource0.inflaterSource;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource36);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        gzipSource0.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource6 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource0);
        java.util.zip.Inflater inflater7 = gzipSource6.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource6);
        java.util.zip.CRC32 cRC32_9 = gzipSource8.crc;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource10 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_11 = null;
        gzipSource10.crc = cRC32_11;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource13 = gzipSource10.inflaterSource;
        int int14 = gzipSource10.section;
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource10.source;
        gzipSource10.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer18 = gzipSource10.buffer;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer19 = gzipSource10.buffer;
        gzipSource8.buffer = okBuffer19;
        com.squareup.okhttp.internal.bytes.Deadline deadline21 = null;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource8.close(deadline21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer19);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_1 = null;
        gzipSource0.crc = cRC32_1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource3 = gzipSource0.inflaterSource;
        java.util.zip.CRC32 cRC32_4 = gzipSource0.crc;
        java.util.zip.Inflater inflater5 = gzipSource0.inflater;
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource0.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource8 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater9 = null;
        gzipSource8.inflater = inflater9;
        int int11 = gzipSource8.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource12 = gzipSource8.inflaterSource;
        gzipSource8.section = (byte) 100;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource15 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater16 = null;
        gzipSource15.inflater = inflater16;
        int int18 = gzipSource15.section;
        gzipSource15.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource21 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource15);
        java.util.zip.Inflater inflater22 = gzipSource21.inflater;
        gzipSource8.inflater = inflater22;
        gzipSource0.inflater = inflater22;
        int int25 = gzipSource0.section;
        java.lang.Class<?> wildcardClass26 = gzipSource0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = gzipSource0.inflater;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource2 = null;
        gzipSource0.inflaterSource = inflaterSource2;
        com.squareup.okhttp.internal.bytes.Source source4 = gzipSource0.source;
        // The following exception was thrown during execution in test generation
        try {
            gzipSource0.checkEqual("", 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: : actual 0x000034 != expected 0x000000");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source4);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource0 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater1 = null;
        gzipSource0.inflater = inflater1;
        int int3 = gzipSource0.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource4 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource5 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_6 = null;
        gzipSource5.crc = cRC32_6;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource8 = gzipSource5.inflaterSource;
        java.util.zip.CRC32 cRC32_9 = gzipSource5.crc;
        java.util.zip.Inflater inflater10 = gzipSource5.inflater;
        gzipSource5.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source15 = gzipSource5.source;
        gzipSource0.source = source15;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource17 = gzipSource0.inflaterSource;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource18 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_19 = null;
        gzipSource18.crc = cRC32_19;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource21 = gzipSource18.inflaterSource;
        int int22 = gzipSource18.section;
        com.squareup.okhttp.internal.bytes.Source source23 = gzipSource18.source;
        gzipSource18.section = 10;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer26 = gzipSource18.buffer;
        gzipSource0.source = gzipSource18;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource28 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_29 = null;
        gzipSource28.crc = cRC32_29;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource31 = gzipSource28.inflaterSource;
        java.util.zip.CRC32 cRC32_32 = gzipSource28.crc;
        java.util.zip.Inflater inflater33 = gzipSource28.inflater;
        java.util.zip.CRC32 cRC32_34 = null;
        gzipSource28.crc = cRC32_34;
        java.util.zip.Inflater inflater36 = gzipSource28.inflater;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource37 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater38 = null;
        gzipSource37.inflater = inflater38;
        int int40 = gzipSource37.section;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource41 = gzipSource37.inflaterSource;
        gzipSource37.section = (byte) 100;
        int int44 = gzipSource37.section;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource45 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_46 = null;
        gzipSource45.crc = cRC32_46;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource48 = gzipSource45.inflaterSource;
        java.util.zip.CRC32 cRC32_49 = gzipSource45.crc;
        java.util.zip.CRC32 cRC32_50 = null;
        gzipSource45.crc = cRC32_50;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource52 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_53 = null;
        gzipSource52.crc = cRC32_53;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource55 = gzipSource52.inflaterSource;
        java.util.zip.CRC32 cRC32_56 = gzipSource52.crc;
        java.util.zip.Inflater inflater57 = gzipSource52.inflater;
        gzipSource52.checkEqual("", 100, 100);
        com.squareup.okhttp.internal.bytes.Source source62 = gzipSource52.source;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource63 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater64 = null;
        gzipSource63.inflater = inflater64;
        int int66 = gzipSource63.section;
        gzipSource63.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.InflaterSource inflaterSource69 = gzipSource63.inflaterSource;
        gzipSource52.source = gzipSource63;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource71 = new com.squareup.okhttp.internal.bytes.GzipSource();
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource72 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.CRC32 cRC32_73 = null;
        gzipSource72.crc = cRC32_73;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource75 = new com.squareup.okhttp.internal.bytes.GzipSource();
        java.util.zip.Inflater inflater76 = null;
        gzipSource75.inflater = inflater76;
        int int78 = gzipSource75.section;
        gzipSource75.section = (byte) -1;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource81 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) gzipSource75);
        java.util.zip.Inflater inflater82 = gzipSource81.inflater;
        gzipSource72.inflater = inflater82;
        gzipSource71.inflater = inflater82;
        com.squareup.okhttp.internal.bytes.OkBuffer okBuffer85 = gzipSource71.buffer;
        gzipSource52.updateCrc(okBuffer85, (long) '#', (long) (-1));
        gzipSource45.updateCrc(okBuffer85, (long) 0, 0L);
        gzipSource37.buffer = okBuffer85;
        gzipSource28.buffer = okBuffer85;
        com.squareup.okhttp.internal.bytes.GzipSource gzipSource94 = new com.squareup.okhttp.internal.bytes.GzipSource((com.squareup.okhttp.internal.bytes.Source) okBuffer85);
        com.squareup.okhttp.internal.bytes.Deadline deadline96 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long97 = gzipSource0.read(okBuffer85, (long) 1, deadline96);
            org.junit.Assert.fail("Expected exception of type java.io.EOFException; message: null");
        } catch (java.io.EOFException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(cRC32_56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflater57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(source62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inflaterSource69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(inflater82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(okBuffer85);
    }
}

